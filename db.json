{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/maupassant/source/fancybox/blank.gif","path":"fancybox/blank.gif","modified":0,"renderable":1},{"_id":"themes/maupassant/source/fancybox/fancybox_loading@2x.gif","path":"fancybox/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/maupassant/source/fancybox/fancybox_loading.gif","path":"fancybox/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/maupassant/source/fancybox/fancybox_sprite.png","path":"fancybox/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/maupassant/source/fancybox/fancybox_overlay.png","path":"fancybox/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/maupassant/source/fancybox/fancybox_sprite@2x.png","path":"fancybox/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/maupassant/source/css/style.scss","path":"css/style.scss","modified":0,"renderable":1},{"_id":"themes/maupassant/source/js/codeblock-resizer.js","path":"js/codeblock-resizer.js","modified":0,"renderable":1},{"_id":"themes/maupassant/source/css/jquery.fancybox.css","path":"css/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/maupassant/source/js/smartresize.js","path":"js/smartresize.js","modified":0,"renderable":1},{"_id":"themes/maupassant/source/js/search.js","path":"js/search.js","modified":0,"renderable":1},{"_id":"themes/maupassant/source/js/fancybox.js","path":"js/fancybox.js","modified":0,"renderable":1},{"_id":"themes/maupassant/source/js/share.js","path":"js/share.js","modified":0,"renderable":1},{"_id":"themes/maupassant/source/js/totop.js","path":"js/totop.js","modified":0,"renderable":1},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":1,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","path":"lib/algolia-instant-search/instantsearch.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","path":"lib/canvas-nest/canvas-nest.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/LICENSE","path":"lib/fastclick/LICENSE","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/README.md","path":"lib/fastclick/README.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/bower.json","path":"lib/fastclick/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","path":"lib/jquery_lazyload/CONTRIBUTING.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","path":"lib/jquery_lazyload/README.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","path":"lib/jquery_lazyload/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","path":"lib/jquery_lazyload/jquery.lazyload.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","path":"lib/jquery_lazyload/jquery.scrollstop.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/bower.json","path":"lib/velocity/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","path":"lib/fancybox/source/blank.gif","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","path":"lib/fancybox/source/fancybox_loading.gif","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","path":"lib/fancybox/source/fancybox_loading@2x.gif","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","path":"lib/fancybox/source/fancybox_overlay.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","path":"lib/fancybox/source/fancybox_sprite.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","path":"lib/fancybox/source/fancybox_sprite@2x.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","path":"lib/fancybox/source/jquery.fancybox.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","path":"lib/fancybox/source/jquery.fancybox.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","path":"lib/fancybox/source/jquery.fancybox.pack.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","path":"lib/fastclick/lib/fastclick.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","path":"lib/fastclick/lib/fastclick.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","path":"lib/font-awesome/fonts/FontAwesome.otf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","path":"lib/fancybox/source/helpers/fancybox_buttons.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","path":"lib/fancybox/source/helpers/jquery.fancybox-media.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","path":"lib/font-awesome/fonts/fontawesome-webfont.ttf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","path":"lib/algolia-instant-search/instantsearch.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","path":"lib/font-awesome/fonts/fontawesome-webfont.svg","modified":1,"renderable":1}],"Cache":[{"_id":"source/_posts/hello-world.md","hash":"8a02477044e2b77f1b262da2c48c01429e4a32e4","modified":1484357616000},{"_id":"public/2017/01/14/hello-world/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1484361115034},{"_id":"public/archives/index.html","hash":"825c7f56422641ce1069ebf0bd4252a9252f7e42","modified":1484365043398},{"_id":"public/archives/2017/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1484361115035},{"_id":"public/archives/2017/01/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1484361115035},{"_id":"public/index.html","hash":"6ec466aefe1e611495187bf59d4c41344f757722","modified":1484365043398},{"_id":"source/_posts/dns.md","hash":"0cb14f3ea3e6ffe882ec013af7532c2874297094","modified":1464708814000},{"_id":"source/_posts/filesystem.md","hash":"45b945aeb165212b395885235a98e90da8994911","modified":1468588192000},{"_id":"source/_posts/http.md","hash":"0c141675934b98a31990e10dcdd0a8abc4efcbf0","modified":1464709099000},{"_id":"source/_posts/networkcomm.md","hash":"df2c1c8213ad30e8414bc1b5a547200a76050dd4","modified":1463591709000},{"_id":"source/_posts/systemstart.md","hash":"558d2be0528a67299042b6203d6f08f54e07a8e4","modified":1463834408000},{"_id":"source/_posts/test.py","hash":"580423bb8a66e13a2f566df687c0c7df0442c630","modified":1465745720000},{"_id":"source/_posts/tls.md","hash":"8e121d2f74cf7b34fa9112327ee5ec2a59a9027c","modified":1463828324000},{"_id":"source/_posts/webcsp.md","hash":"76d2c202c82c7795c5d1f41076369a1267b9e1cb","modified":1463762142000},{"_id":"source/about/index.md","hash":"33ecdf4888cf53bd1a70e451123f546379942be3","modified":1463586605000},{"_id":"source/_posts/dns/image/607348-20160301205942986-1456220290.png","hash":"cb576ad9ca11e566132dc13fbcfb266d2e51a839","modified":1463835270000},{"_id":"source/_posts/dns/image/607348-20160301212335189-776690379.gif","hash":"872f224a5ce35ab8d17db2c7cdf4e24c8d8417a2","modified":1463835261000},{"_id":"source/_posts/dns/image/607348-20160420012038241-52598954.png","hash":"8e8fbddb25d32864e8f9b06b07ceb47c3a9db4ef","modified":1463835280000},{"_id":"source/_posts/dns/image/607348-20160420012104335-886114220.png","hash":"e321d2a9486b55ac915c6d4e552ae58c2e5a0519","modified":1463835284000},{"_id":"source/_posts/dns/image/607348-20160420012127523-1968920086.png","hash":"9d3a455178015a63638bd35ee49bef025794c7d6","modified":1463835288000},{"_id":"source/_posts/http/image/20160531232545.png","hash":"456b35a9360f7e72ed1cfd4a251ebc8794957d9b","modified":1464708342000},{"_id":"source/_posts/http/image/20160531232617.png","hash":"fface7498d67fe10cad8b268bb81344ef85a5168","modified":1464708373000},{"_id":"source/_posts/http/image/5657919_2.jpg","hash":"f78fd76c65cbb3fe59368ef88ca31c7b075b3020","modified":1464505897000},{"_id":"source/_posts/networkcomm/image/607348-20160312201154210-2019193861.jpg","hash":"67c02a624eb17bcc2e9a4614207cf6b5a95147d1","modified":1463486266000},{"_id":"source/_posts/networkcomm/image/607348-20160312203516679-1695630421.gif","hash":"377bf3adda54c5305d18b2a863a69a2a7284033a","modified":1463486313000},{"_id":"source/_posts/networkcomm/image/607348-20160312211241132-1517700594.png","hash":"3753c394c5078b0e440a46474f261e0628e7dad9","modified":1463486321000},{"_id":"source/_posts/networkcomm/image/607348-20160312213647569-286300397.gif","hash":"d1f8f22734bf3c4bae2e026fda91040ceda0251e","modified":1463486328000},{"_id":"source/_posts/networkcomm/image/607348-20160312214932366-1742109445.png","hash":"7566e78ec96d0c8343e09109fb2ca7aeb467cb8c","modified":1463486334000},{"_id":"source/_posts/networkcomm/image/607348-20160312220145210-443719950.png","hash":"3ca8e10257233bd78c5aceedc1b01eb0d2508be1","modified":1463486339000},{"_id":"source/_posts/networkcomm/image/607348-20160312220158054-2124916124.png","hash":"7a66b3405326e7ad9013febeeebf479321e966d3","modified":1463486346000},{"_id":"source/_posts/networkcomm/image/607348-20160312220227866-1298265423.png","hash":"8ef062afb3a96b2947772c5016c2b76735d2eaca","modified":1463486350000},{"_id":"source/_posts/networkcomm/image/607348-20160312221617569-1834112731.png","hash":"8fe123d7880f16bc1205d32e62c1119ba560c918","modified":1463486355000},{"_id":"source/_posts/networkcomm/image/607348-20160312221825819-331058027.png","hash":"b8e3082ce7d163a27136860791aeb01d5c051f11","modified":1463486359000},{"_id":"source/_posts/networkcomm/image/607348-20160312221946585-1872997601.png","hash":"31cb83d884268933ba6e03d3820acf30ec7278cd","modified":1463486363000},{"_id":"source/_posts/systemstart/image/607348-20151229231206354-919070678.png","hash":"b6f5323e9044879055fbdc7e2be40f1dc8802ec3","modified":1463828527000},{"_id":"source/_posts/webcsp/image/607348-20151208141131543-187859986.png","hash":"5f5c5f6af81446de4bf0e5e65ecdb635a06640d3","modified":1463757078000},{"_id":"source/_posts/tls/image/607348-20160224221716880-1764174375.png","hash":"7fd5c2142fb4e4c184fc07243e669deab7ad45e7","modified":1463590302000},{"_id":"source/_posts/networkcomm/image/607348-20160312202413054-848303498.png","hash":"7c8f3b1c91bca35e28f721e2e46011dafcaedbb5","modified":1463486302000},{"_id":"public/about/index.html","hash":"f663b159f7ff09407b3dc49c940fe22d0a151152","modified":1484365043396},{"_id":"public/2016/05/29/http/index.html","hash":"d9ea10c3868faa76c55a115ea81dcec015e08b12","modified":1484365043397},{"_id":"public/2016/05/21/dns/index.html","hash":"b817fe8c4a6fda8a29c6f95de72cf3b8c0911560","modified":1484365043397},{"_id":"public/2016/05/21/systemstart/index.html","hash":"7bbde3681db32ddcd4f7c5bc1a5c21ec4ac84101","modified":1484365043398},{"_id":"public/2016/05/20/webcsp/index.html","hash":"862d678788657dc7adc7fed3f59f4cccb14be27a","modified":1484365043398},{"_id":"public/2016/05/19/tls/index.html","hash":"b49794d304cc1d8a0165773d8ca66121917014da","modified":1484365043398},{"_id":"public/2016/05/18/networkcomm/index.html","hash":"5caefec83d38273377a1074507b02034bc30182d","modified":1484365043399},{"_id":"public/archives/2016/index.html","hash":"825c7f56422641ce1069ebf0bd4252a9252f7e42","modified":1484365043398},{"_id":"public/archives/2016/05/index.html","hash":"e79e03f9b5865a354ee46ba442fdace829acefd8","modified":1484365043398},{"_id":"public/categories/technology/index.html","hash":"a3dbd6d74b7483f31495cbfc0bd1f3d44c638777","modified":1484365043398},{"_id":"public/tags/network/index.html","hash":"ca5c273df22a068463ce0b2f1e10e617e20a1262","modified":1484365043398},{"_id":"public/tags/system/index.html","hash":"a5295adc1ed6d07cdbe2732e4977a03545fac1cf","modified":1484365043398},{"_id":"public/tags/web/index.html","hash":"5e5704f9ef6e26d1701647f7876d18e47430beb5","modified":1484365043399},{"_id":"public/tags/security/index.html","hash":"6322efa3a3237156c55833a4074416cc16314784","modified":1484365043399},{"_id":"public/2016/06/20/filesystem/index.html","hash":"6cca49324dca960eea6d4ef24f1ff4efc8b3a0c3","modified":1484365043397},{"_id":"public/archives/2016/06/index.html","hash":"2457f9ec7488409b229d06223d5c18f9cbf58724","modified":1484365043398},{"_id":"themes/maupassant/_config.yml","hash":"8c21341a2876c2a1c9807be5e2c724a4e39166e3","modified":1484363239000},{"_id":"themes/maupassant/LICENSE","hash":"019dc6a9aba02ae3aaabca45f39aecd6e8e7f1d8","modified":1484363239000},{"_id":"themes/maupassant/.travis.yml","hash":"0339959f29deddc365e8fe8bd85da524410b9a23","modified":1484363239000},{"_id":"themes/maupassant/README.md","hash":"75d8c42569809961953d1934de445418c00ab94c","modified":1484363239000},{"_id":"themes/maupassant/package.json","hash":"81fb4e2ac051ecfb9a93f37b28910291b939771a","modified":1484363239000},{"_id":"themes/maupassant/.git/config","hash":"037345b11c41abb3dbbbd6e0242ced24979a7097","modified":1484363239000},{"_id":"themes/maupassant/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1484363239000},{"_id":"themes/maupassant/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1484363140000},{"_id":"themes/maupassant/.git/index","hash":"c6a58daa866334a8ef2bd8f4fd42c34411fb45c4","modified":1484363582000},{"_id":"themes/maupassant/.git/packed-refs","hash":"965458983a3bb3e282036aa5812345d6370fe31d","modified":1484363239000},{"_id":"themes/maupassant/languages/fr-FR.yml","hash":"b47906ec0abf867fb3e3360bc046b7afb68aee25","modified":1484363239000},{"_id":"themes/maupassant/languages/es-ES.yml","hash":"58e1d04bcd1834fa9d2960e18e027abbbccbedc9","modified":1484363239000},{"_id":"themes/maupassant/languages/en.yml","hash":"e13ab1a2d2f1edbe67b4c035fd4667cb6a31db8e","modified":1484363239000},{"_id":"themes/maupassant/languages/de-DE.yml","hash":"5d3556a885e355a8c2da65ef3e7b3ee36a628bfa","modified":1484363239000},{"_id":"themes/maupassant/languages/ko.yml","hash":"909a33e0befa6978e8e72157c6b415b48551ee31","modified":1484363239000},{"_id":"themes/maupassant/layout/archive.jade","hash":"0050c883b4f202add71c8664d65e6072179e7190","modified":1484363239000},{"_id":"themes/maupassant/languages/zh-CN.yml","hash":"ebacfa5d0c14d603e0d505757adb24c0bbe5dd13","modified":1484363239000},{"_id":"themes/maupassant/layout/base.jade","hash":"99259568f4cc21bd825772b4cb84be2b29b78fa5","modified":1484363239000},{"_id":"themes/maupassant/languages/zh-TW.yml","hash":"56b65995c60e99dcebbf00168447fd225d28e5b2","modified":1484363239000},{"_id":"themes/maupassant/layout/base-without-sidebar.jade","hash":"690fee04231b2e6721580516849f7b80cf42be94","modified":1484363239000},{"_id":"themes/maupassant/layout/post.jade","hash":"9cf29fb0daed95935154ce0fa2b154df5a9b11b1","modified":1484363239000},{"_id":"themes/maupassant/layout/single-column.jade","hash":"c35fff4d9b331a41af5bc10f4278ec3d9da503db","modified":1484363239000},{"_id":"themes/maupassant/layout/page.jade","hash":"8d70fd3b93f2c9087a9ea7ec538dcc1d413bea01","modified":1484363239000},{"_id":"themes/maupassant/layout/index.jade","hash":"f842164f6cba007c1dfcd7fe7bba24736bc886a9","modified":1484363239000},{"_id":"themes/maupassant/layout/timeline.jade","hash":"f03d8df63a188543cfe4e85e76194abe081411a1","modified":1484363239000},{"_id":"themes/maupassant/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1484363140000},{"_id":"themes/maupassant/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1484363140000},{"_id":"themes/maupassant/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1484363140000},{"_id":"themes/maupassant/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1484363140000},{"_id":"themes/maupassant/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1484363140000},{"_id":"themes/maupassant/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1484363140000},{"_id":"themes/maupassant/.git/hooks/pre-receive.sample","hash":"705a17d259e7896f0082fe2e9f2c0c3b127be5ac","modified":1484363140000},{"_id":"themes/maupassant/.git/hooks/pre-rebase.sample","hash":"5885a56ab4fca8075a05a562d005e922cde9853b","modified":1484363140000},{"_id":"themes/maupassant/.git/hooks/prepare-commit-msg.sample","hash":"2b6275eda365cad50d167fe3a387c9bc9fedd54f","modified":1484363140000},{"_id":"themes/maupassant/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1484363140000},{"_id":"themes/maupassant/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1484363140000},{"_id":"themes/maupassant/.git/logs/HEAD","hash":"bf37902636cde78ccb3476b399bc1026cdf1d788","modified":1484363239000},{"_id":"themes/maupassant/layout/_partial/helpers.jade","hash":"acdf9e2d52ee86c831fa15ce1570930c5779bc78","modified":1484363239000},{"_id":"themes/maupassant/layout/_partial/after_footer.jade","hash":"3dbcc9a9f0d6e55da191d3393c18bbfcfe99fa69","modified":1484363239000},{"_id":"themes/maupassant/layout/_partial/footer.jade","hash":"aa020b794e697e8e9612530c97c6295efde469fe","modified":1484363239000},{"_id":"themes/maupassant/layout/_partial/comments.jade","hash":"6c7f63ba04a4d28323ba31e79a4927f3d3fcc56e","modified":1484363239000},{"_id":"themes/maupassant/layout/_partial/post_nav.jade","hash":"a2d698c84bb6da08195fe870dbd7215f65388d3f","modified":1484363239000},{"_id":"themes/maupassant/layout/_partial/mathjax2.jade","hash":"d6ac5dc4e9c7a1b866f1f92d88988cfb35aded4c","modified":1484363239000},{"_id":"themes/maupassant/layout/_partial/mathjax.jade","hash":"b54b56faff9e47ab3ca3cdd55056c73e60776f3c","modified":1484363239000},{"_id":"themes/maupassant/layout/_partial/paginator.jade","hash":"53f9cb77448e84a98da5eb688e2e12b173c555bb","modified":1484363239000},{"_id":"themes/maupassant/layout/_widget/category.jade","hash":"7c6aed762934ca51aa2669b886254da24b77bc14","modified":1484363239000},{"_id":"themes/maupassant/layout/_partial/tag.jade","hash":"0f0e6770e9d5dd8040e330d71bbbfadd2df36a28","modified":1484363239000},{"_id":"themes/maupassant/layout/_partial/totop.jade","hash":"8225bbc3cdb9648bc2e6872e5c616a9a1e4def4f","modified":1484363239000},{"_id":"themes/maupassant/layout/_widget/links.jade","hash":"f57a0c76d243882b2b77330132bdb43bc648948b","modified":1484363239000},{"_id":"themes/maupassant/layout/_widget/recent_comments.jade","hash":"e119c5afa85abc60d139e2da99b0bfcd7a6530f8","modified":1484363239000},{"_id":"themes/maupassant/layout/_widget/tag.jade","hash":"132f049ce677d0e38f50073174c4ee4b825d4a06","modified":1484363239000},{"_id":"themes/maupassant/layout/_widget/recent_posts.jade","hash":"19431336d724d2118e46da43683bce9063176541","modified":1484363239000},{"_id":"themes/maupassant/layout/_widget/search.jade","hash":"193546282908e499813534f86d27ef6e0a1357b3","modified":1484363239000},{"_id":"themes/maupassant/source/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1484363239000},{"_id":"themes/maupassant/source/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1484363239000},{"_id":"themes/maupassant/source/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1484363239000},{"_id":"themes/maupassant/source/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1484363239000},{"_id":"themes/maupassant/source/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1484363239000},{"_id":"themes/maupassant/source/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1484363239000},{"_id":"themes/maupassant/source/css/style.scss","hash":"158f1ebecf7b994ffae5332a627465f6bf38113b","modified":1484363239000},{"_id":"themes/maupassant/source/js/codeblock-resizer.js","hash":"5d0b786d60bf225d9eabcc9cece2719ff4d9b6cd","modified":1484363239000},{"_id":"themes/maupassant/source/css/jquery.fancybox.css","hash":"f42f761157f26244673eb2f4a9215c70956f80dc","modified":1484363239000},{"_id":"themes/maupassant/source/js/smartresize.js","hash":"3ef157fd877167e3290f42c67a624ea375a46c24","modified":1484363239000},{"_id":"themes/maupassant/source/js/search.js","hash":"0c0630e2ef213701d393b041f10572e951a27985","modified":1484363239000},{"_id":"themes/maupassant/source/js/fancybox.js","hash":"13c4781570339f4fba76a3d7f202e442817dd605","modified":1484363239000},{"_id":"themes/maupassant/source/js/share.js","hash":"f49776e0baa2b913ddc7a20db24b3edd469c8343","modified":1484363239000},{"_id":"themes/maupassant/source/js/totop.js","hash":"7dbf8fcf582a4fb6eb9b2c60d6de9f9c2091ec4c","modified":1484363239000},{"_id":"themes/maupassant/.git/refs/heads/master","hash":"e7de97753d00149057ca0ae9ed395fd347042cbf","modified":1484363239000},{"_id":"themes/maupassant/.git/objects/pack/pack-7e6fdbc9545de2d5d7f35c31cd2abbe24c9e703c.idx","hash":"f360a30202e2c8444a431ff72da4d49d262b2e99","modified":1484363239000},{"_id":"themes/maupassant/.git/logs/refs/heads/master","hash":"bf37902636cde78ccb3476b399bc1026cdf1d788","modified":1484363239000},{"_id":"themes/maupassant/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1484363239000},{"_id":"themes/maupassant/.git/logs/refs/remotes/origin/HEAD","hash":"bf37902636cde78ccb3476b399bc1026cdf1d788","modified":1484363239000},{"_id":"themes/maupassant/.git/objects/pack/pack-7e6fdbc9545de2d5d7f35c31cd2abbe24c9e703c.pack","hash":"f5e57e283637a0fe9a7aa8481ba16d1857726eeb","modified":1484363239000},{"_id":"public/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1484363727867},{"_id":"public/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1484363727867},{"_id":"public/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1484363727867},{"_id":"public/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1484363727867},{"_id":"public/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1484363727868},{"_id":"public/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1484363727868},{"_id":"public/js/codeblock-resizer.js","hash":"5d0b786d60bf225d9eabcc9cece2719ff4d9b6cd","modified":1484363727916},{"_id":"public/css/jquery.fancybox.css","hash":"f42f761157f26244673eb2f4a9215c70956f80dc","modified":1484363727916},{"_id":"public/js/smartresize.js","hash":"3ef157fd877167e3290f42c67a624ea375a46c24","modified":1484363727916},{"_id":"public/js/search.js","hash":"0c0630e2ef213701d393b041f10572e951a27985","modified":1484363727916},{"_id":"public/js/fancybox.js","hash":"13c4781570339f4fba76a3d7f202e442817dd605","modified":1484363727916},{"_id":"public/js/share.js","hash":"f49776e0baa2b913ddc7a20db24b3edd469c8343","modified":1484363727916},{"_id":"public/js/totop.js","hash":"7dbf8fcf582a4fb6eb9b2c60d6de9f9c2091ec4c","modified":1484363727916},{"_id":"public/css/style.css","hash":"2afb6e7e24abf81c8b7b7d472fb0bb9b9a1eac16","modified":1484363727916},{"_id":"themes/next/.bowerrc","hash":"3228a58ed0ece9f85e1e3136352094080b8dece1","modified":1484364177000},{"_id":"themes/next/.editorconfig","hash":"792fd2bd8174ece1a75d5fd24ab16594886f3a7f","modified":1484364177000},{"_id":"themes/next/.gitignore","hash":"5f09fca02e030b7676c1d312cd88ce8fbccf381c","modified":1484364177000},{"_id":"themes/next/.hound.yml","hash":"b76daa84c9ca3ad292c78412603370a367cc2bc3","modified":1484364177000},{"_id":"themes/next/.javascript_ignore","hash":"f9ea3c5395f8feb225a24e2c32baa79afda30c16","modified":1484364177000},{"_id":"themes/next/.jshintrc","hash":"9928f81bd822f6a8d67fdbc909b517178533bca9","modified":1484364177000},{"_id":"themes/next/README.en.md","hash":"3b0c7998cf17f9cf9e1a5bfcd65679a43a00c817","modified":1484364177000},{"_id":"themes/next/README.md","hash":"500b5606eb6a09c979d16128f8b00f4bf9bc95ac","modified":1484364177000},{"_id":"themes/next/_config.yml","hash":"f31489347a005908d3574da8bc6fdcabb377f355","modified":1484364177000},{"_id":"themes/next/bower.json","hash":"5abc236d9cc2512f5457ed57c1fba76669eb7399","modified":1484364177000},{"_id":"themes/next/gulpfile.coffee","hash":"61ef0606a8134894d7ac796bc8d0fa4ba6a94483","modified":1484364177000},{"_id":"themes/next/package.json","hash":"877cb98025e59015532c4c9a04a33e2af4ad56f9","modified":1484364177000},{"_id":"themes/next/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1484364177000},{"_id":"themes/next/.git/config","hash":"bf7d1df65cf34d0f25a7184a58c37a09f72e4be7","modified":1484364177000},{"_id":"themes/next/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1484364139000},{"_id":"themes/next/.git/index","hash":"f0ab71d03ce81571997c1fd447faab2416b84bed","modified":1484364589000},{"_id":"themes/next/.git/packed-refs","hash":"12ca02d8374d9a441a6c8a6c9ed061432cb0a8c9","modified":1484364177000},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"5ab257af816986cd0e53f9527a92d5934ac70ae9","modified":1484364177000},{"_id":"themes/next/.github/ISSUE_TEMPLATE.md","hash":"c2024ded82143807c28a299c5fe6b927ef3525ff","modified":1484364177000},{"_id":"themes/next/languages/de.yml","hash":"1fdea1f84b7f691f5b4dd4d2b43eeb27b10fa0c8","modified":1484364177000},{"_id":"themes/next/languages/default.yml","hash":"767470a80dc257e23e14c3a78e8c52a46c9d6209","modified":1484364177000},{"_id":"themes/next/languages/en.yml","hash":"40057d6608e825d06e0864bac4dcd27ed88ada87","modified":1484364177000},{"_id":"themes/next/languages/fr-FR.yml","hash":"9fca01ef917d33ae2ae6bc04561ec6799dff5351","modified":1484364177000},{"_id":"themes/next/languages/id.yml","hash":"34396bef27c4ab9e9a3c5d3e3aa94b0e3b3a7b0d","modified":1484364177000},{"_id":"themes/next/languages/ja.yml","hash":"49f12149edcc1892b26a6207328cda64da20116d","modified":1484364177000},{"_id":"themes/next/languages/ko.yml","hash":"b6bc5d6b0c000deb44099b42d3aebb8c49dbfca9","modified":1484364177000},{"_id":"themes/next/languages/pt-BR.yml","hash":"7742ba4c0d682cbe1d38305332ebc928abd754b5","modified":1484364177000},{"_id":"themes/next/languages/pt.yml","hash":"6b660b117314cad93f08757601df3adb04c68beb","modified":1484364177000},{"_id":"themes/next/languages/ru.yml","hash":"257d11e626cbe4b9b78785a764190b9278f95c28","modified":1484364177000},{"_id":"themes/next/languages/zh-Hans.yml","hash":"f6c9fafa0f5f0050cd07ca2cf5e38fbae3e28145","modified":1484364177000},{"_id":"themes/next/languages/zh-hk.yml","hash":"34c84c6d04447a25bd5eac576922a13947c000e2","modified":1484364177000},{"_id":"themes/next/languages/zh-tw.yml","hash":"c97a5c41149de9b17f33439b0ecf0eff6fdae50e","modified":1484364177000},{"_id":"themes/next/layout/_layout.swig","hash":"2fa3c74066843a859fac77803324a1de51044da9","modified":1484364177000},{"_id":"themes/next/layout/archive.swig","hash":"b5b59d70fc1563f482fa07afd435752774ad5981","modified":1484364177000},{"_id":"themes/next/layout/category.swig","hash":"6422d196ceaff4220d54b8af770e7e957f3364ad","modified":1484364177000},{"_id":"themes/next/layout/index.swig","hash":"427d0b95b854e311ae363088ab39a393bf8fdc8b","modified":1484364177000},{"_id":"themes/next/layout/page.swig","hash":"3727fab9dadb967e9c2204edca787dc72264674a","modified":1484364177000},{"_id":"themes/next/layout/post.swig","hash":"e2e512142961ddfe77eba29eaa88f4a2ee43ae18","modified":1484364177000},{"_id":"themes/next/layout/schedule.swig","hash":"1f1cdc268f4ef773fd3ae693bbdf7d0b2f45c3a3","modified":1484364177000},{"_id":"themes/next/layout/tag.swig","hash":"07cf49c49c39a14dfbe9ce8e7d7eea3d4d0a4911","modified":1484364177000},{"_id":"themes/next/scripts/merge-configs.js","hash":"0c56be2e85c694247cfa327ea6d627b99ca265e8","modified":1484364177000},{"_id":"themes/next/test/.jshintrc","hash":"19f93d13d1689fe033c82eb2d5f3ce30b6543cc0","modified":1484364177000},{"_id":"themes/next/test/helpers.js","hash":"a1f5de25154c3724ffc24a91ddc576cdbd60864f","modified":1484364177000},{"_id":"themes/next/test/intern.js","hash":"11fa8a4f5c3b4119a179ae0a2584c8187f907a73","modified":1484364177000},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1484364177000},{"_id":"themes/next/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1484364139000},{"_id":"themes/next/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1484364139000},{"_id":"themes/next/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1484364139000},{"_id":"themes/next/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1484364139000},{"_id":"themes/next/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1484364139000},{"_id":"themes/next/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1484364139000},{"_id":"themes/next/.git/hooks/pre-rebase.sample","hash":"5885a56ab4fca8075a05a562d005e922cde9853b","modified":1484364139000},{"_id":"themes/next/.git/hooks/pre-receive.sample","hash":"705a17d259e7896f0082fe2e9f2c0c3b127be5ac","modified":1484364139000},{"_id":"themes/next/.git/hooks/prepare-commit-msg.sample","hash":"2b6275eda365cad50d167fe3a387c9bc9fedd54f","modified":1484364139000},{"_id":"themes/next/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1484364139000},{"_id":"themes/next/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1484364139000},{"_id":"themes/next/.git/logs/HEAD","hash":"3ac31915bdb1b49cbc0ff395fad8ed87aed8c3d7","modified":1484364177000},{"_id":"themes/next/layout/_custom/header.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1484364177000},{"_id":"themes/next/layout/_custom/sidebar.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1484364177000},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"5864f5567ba5efeabcf6ea355013c0b603ee07f2","modified":1484364177000},{"_id":"themes/next/layout/_macro/post.swig","hash":"e6016def9b512188f4c2725399c9adc7bc41cdae","modified":1484364177000},{"_id":"themes/next/layout/_macro/reward.swig","hash":"37e5b7c42ec17b9b6b786c5512bcc481a21c974e","modified":1484364177000},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"43d8830bb19da4fc7a5773866be19fa066b62645","modified":1484364177000},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"14e785adeb0e671ba0ff9a553e6f0d8def6c670c","modified":1484364177000},{"_id":"themes/next/layout/_partials/comments.swig","hash":"78ccfc1dc915247c1fec3c86d742e0f4c2f6d99c","modified":1484364177000},{"_id":"themes/next/layout/_partials/duoshuo-hot-articles.swig","hash":"5d4638c46aef65bf32a01681495b62416ccc98db","modified":1484364177000},{"_id":"themes/next/layout/_partials/footer.swig","hash":"7172c6053118b7c291a56a7860128a652ae66b83","modified":1484364177000},{"_id":"themes/next/layout/_partials/head.swig","hash":"ca56f92e2fa82b03853869f5073ee1a5626a4796","modified":1484364177000},{"_id":"themes/next/layout/_partials/header.swig","hash":"adab5c3f7b173f1b45454787f39dde07aea03483","modified":1484364177000},{"_id":"themes/next/layout/_partials/page-header.swig","hash":"39d613e5a9f8389d4ea52d6082502af8e833b9f2","modified":1484364177000},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"9e8e21d194ef44d271b1cca0bc1448c14d7edf4f","modified":1484364177000},{"_id":"themes/next/layout/_partials/search.swig","hash":"1431719d1dbba3f5ee385eebc46376d1a960b2d5","modified":1484364177000},{"_id":"themes/next/layout/_scripts/baidu-push.swig","hash":"c057b17f79e8261680fbae8dc4e81317a127c799","modified":1484364177000},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"03aaebe9d50f6acb007ec38cc04acd1cfceb404d","modified":1484364177000},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"766b2bdda29523ed6cd8d7aa197f996022f8fd94","modified":1484364177000},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"4512867d80d9eddfc3a0f5fea3c456f33aa9d522","modified":1484364177000},{"_id":"themes/next/scripts/tags/button.js","hash":"62e6dbeb53d07627a048132c79630b45d9a8f2cc","modified":1484364177000},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"535fc542781021c4326dec24d8495cbb1387634a","modified":1484364177000},{"_id":"themes/next/scripts/tags/full-image.js","hash":"8eeb3fb89540299bdbb799edfdfdac3743b50596","modified":1484364177000},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"49252824cd53184dc9b97b2f2d87ff28e1b3ef27","modified":1484364177000},{"_id":"themes/next/scripts/tags/note.js","hash":"6752925eedbdb939d8ec4d11bdfb75199f18dd70","modified":1484364177000},{"_id":"themes/next/source/css/main.styl","hash":"20702c48d6053c92c5bcdbc68e8d0ef1369848a0","modified":1484364177000},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"90035272fa31a3f65b3c0e2cb8a633876ef457dc","modified":1484364177000},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1484364177000},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1484364177000},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1484364177000},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1484364177000},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1484364177000},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1484364177000},{"_id":"themes/next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1484364177000},{"_id":"themes/next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1484364177000},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1484364177000},{"_id":"themes/next/source/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1484364177000},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1484364177000},{"_id":"themes/next/source/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1484364177000},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1484364177000},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1484364177000},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1484364177000},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1484364177000},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1484364177000},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1484364177000},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1484364177000},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1484364177000},{"_id":"themes/next/.git/refs/heads/master","hash":"2311b7302155cc3ec46e40ad16dc5c94e36328b4","modified":1484364177000},{"_id":"themes/next/layout/_components/algolia-search/assets.swig","hash":"28ff4ed6714c59124569ffcbd10f1173d53ca923","modified":1484364177000},{"_id":"themes/next/layout/_components/algolia-search/dom.swig","hash":"636f1181dd5887a70b4a08ca8f655d4e46635792","modified":1484364177000},{"_id":"themes/next/layout/_partials/head/custom-head.swig","hash":"9e1b9666efa77f4cf8d8261bcfa445a9ac608e53","modified":1484364177000},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"7ce76358411184482bb0934e70037949dd0da8ca","modified":1484364177000},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"ff5523d5dacaa77a55a24e50e6e6530c3b98bfad","modified":1484364177000},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"959b7e04a96a5596056e4009b73b6489c117597e","modified":1484364177000},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"eefe2388ff3d424694045eda21346989b123977c","modified":1484364177000},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"23e23dc0f76ef3c631f24c65277adf7ea517b383","modified":1484364177000},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"1f1107468aaf03f7d0dcd7eb2b653e2813a675b4","modified":1484364177000},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"89c5a5240ecb223acfe1d12377df5562a943fd5d","modified":1484364177000},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"63315fcf210799f894208c9f512737096df84962","modified":1484364177000},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"069d1357c717572256e5cdee09574ebce529cbae","modified":1484364177000},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1484364177000},{"_id":"themes/next/layout/_scripts/third-party/analytics.swig","hash":"394d9fff7951287cc90f52acc2d4cbfd1bae079d","modified":1484364177000},{"_id":"themes/next/layout/_scripts/third-party/comments.swig","hash":"4abc01bc870e1d7a783cdbd26166edc782a6a4f4","modified":1484364177000},{"_id":"themes/next/layout/_scripts/third-party/lean-analytics.swig","hash":"92dc60821307fc9769bea9b2d60adaeb798342af","modified":1484364177000},{"_id":"themes/next/layout/_scripts/third-party/localsearch.swig","hash":"b460e27db3dcd4ab40b17d8926a5c4e624f293a9","modified":1484364177000},{"_id":"themes/next/layout/_scripts/third-party/mathjax.swig","hash":"6d25596d6a7c57700d37b607f8d9a62d89708683","modified":1484364177000},{"_id":"themes/next/layout/_scripts/third-party/schedule.swig","hash":"22369026c87fc23893c35a7f250b42f3bb1b60f1","modified":1484364177000},{"_id":"themes/next/layout/_scripts/third-party/tinysou.swig","hash":"cb3a5d36dbe1630bab84e03a52733a46df7c219b","modified":1484364177000},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"328d9a9696cc2ccf59c67d3c26000d569f46344c","modified":1484364177000},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"715d5b40dc52f319fe4bff0325beb874774d9bd9","modified":1484364177000},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"78a83c38f69a8747bb74e420e6c9eeef1ea76525","modified":1484364177000},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"c8d35a6b9e3bff6d8fdb66de853065af9d37562d","modified":1484364177000},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"c459aa6d607d8bcb747544e74f6ad0b8374aa3b1","modified":1484364177000},{"_id":"themes/next/source/css/_variables/base.styl","hash":"fc185c6cec79593775d1c2440dbe2a71cfbe2e99","modified":1484364177000},{"_id":"themes/next/source/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1484364177000},{"_id":"themes/next/source/js/src/algolia-search.js","hash":"96b29f69b8b916b22f62c9959a117b5a968200a5","modified":1484364177000},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"39bf93769d9080fa01a9a875183b43198f79bc19","modified":1484364177000},{"_id":"themes/next/source/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1484364177000},{"_id":"themes/next/source/js/src/motion.js","hash":"269414e84df544a4ccb88519f6abae4943db3c67","modified":1484364177000},{"_id":"themes/next/source/js/src/post-details.js","hash":"2038f54e289b6da5def09689e69f623187147be5","modified":1484364177000},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1484364177000},{"_id":"themes/next/source/js/src/utils.js","hash":"384e17ff857f073060f5bf8c6e4f4b7353236331","modified":1484364177000},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1484364177000},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1484364177000},{"_id":"themes/next/source/lib/fancybox/.bower.json","hash":"cc40a9b11e52348e554c84e4a5c058056f6b7aeb","modified":1484364177000},{"_id":"themes/next/source/lib/fancybox/.gitattributes","hash":"2db21acfbd457452462f71cc4048a943ee61b8e0","modified":1484364177000},{"_id":"themes/next/source/lib/fastclick/.bower.json","hash":"93ebd5b35e632f714dcf1753e1f6db77ec74449b","modified":1484364177000},{"_id":"themes/next/source/lib/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1484364177000},{"_id":"themes/next/source/lib/fastclick/README.md","hash":"1decd8e1adad2cd6db0ab50cf56de6035156f4ea","modified":1484364177000},{"_id":"themes/next/source/lib/fastclick/bower.json","hash":"13379463c7463b4b96d13556b46faa4cc38d81e6","modified":1484364177000},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"c1072942459fa0880e8a33a1bd929176b62b4171","modified":1484364177000},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"dcf470ab3a358103bb896a539cc03caeda10fa8b","modified":1484364177000},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"69d152fa46b517141ec3b1114dd6134724494d83","modified":1484364177000},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1484364177000},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"279a8a718ab6c930a67c41237f0aac166c1b9440","modified":1484364177000},{"_id":"themes/next/source/lib/jquery/.bower.json","hash":"91745c2cc6c946c7275f952b2b0760b880cea69e","modified":1484364177000},{"_id":"themes/next/source/lib/jquery_lazyload/.bower.json","hash":"b7638afc93e9cd350d0783565ee9a7da6805ad8e","modified":1484364177000},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","hash":"4891864c24c28efecd81a6a8d3f261145190f901","modified":1484364177000},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","hash":"895d50fa29759af7835256522e9dd7dac597765c","modified":1484364177000},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","hash":"65bc85d12197e71c40a55c0cd7f6823995a05222","modified":1484364177000},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1484364177000},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1484364177000},{"_id":"themes/next/source/lib/velocity/.bower.json","hash":"05f960846f1c7a93dab1d3f9a1121e86812e8c88","modified":1484364177000},{"_id":"themes/next/source/lib/velocity/bower.json","hash":"2ec99573e84c7117368beccb9e94b6bf35d2db03","modified":1484364177000},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1484364177000},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1484364177000},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1484364177000},{"_id":"themes/next/source/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1484364177000},{"_id":"themes/next/.git/logs/refs/heads/master","hash":"3ac31915bdb1b49cbc0ff395fad8ed87aed8c3d7","modified":1484364177000},{"_id":"themes/next/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1484364177000},{"_id":"themes/next/layout/_scripts/third-party/analytics/application-insights.swig","hash":"60426bf73f8a89ba61fb1be2df3ad5398e32c4ef","modified":1484364177000},{"_id":"themes/next/layout/_scripts/third-party/analytics/baidu-analytics.swig","hash":"deda6a814ed48debc694c4e0c466f06c127163d0","modified":1484364177000},{"_id":"themes/next/layout/_scripts/third-party/analytics/cnzz-analytics.swig","hash":"8160b27bee0aa372c7dc7c8476c05bae57f58d0f","modified":1484364177000},{"_id":"themes/next/layout/_scripts/third-party/analytics/busuanzi-counter.swig","hash":"4fcbf57c4918528ab51d3d042cff92cf5aefb599","modified":1484364177000},{"_id":"themes/next/layout/_scripts/third-party/analytics/facebook-sdk.swig","hash":"394d008e5e94575280407ad8a1607a028026cbc3","modified":1484364177000},{"_id":"themes/next/layout/_scripts/third-party/analytics/google-analytics.swig","hash":"30a23fa7e816496fdec0e932aa42e2d13098a9c2","modified":1484364177000},{"_id":"themes/next/layout/_scripts/third-party/analytics/tencent-analytics.swig","hash":"3658414379e0e8a34c45c40feadc3edc8dc55f88","modified":1484364177000},{"_id":"themes/next/layout/_scripts/third-party/comments/disqus.swig","hash":"fb1d04ede838b52ca7541973f86c3810f1ad396e","modified":1484364177000},{"_id":"themes/next/layout/_scripts/third-party/comments/duoshuo.swig","hash":"a356b2185d40914447fde817eb3d358ab6b3e4c3","modified":1484364177000},{"_id":"themes/next/layout/_scripts/third-party/comments/gentie.swig","hash":"03592d1d731592103a41ebb87437fe4b0a4c78ca","modified":1484364177000},{"_id":"themes/next/layout/_scripts/third-party/comments/hypercomments.swig","hash":"3e8dc5c6c912628a37e3b5f886bec7b2e5ed14ea","modified":1484364177000},{"_id":"themes/next/layout/_scripts/third-party/comments/youyan.swig","hash":"ea8078fa9e10be2bb042749d8b6a97adc38f914c","modified":1484364177000},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"b49efc66bd055a2d0be7deabfcb02ee72a9a28c8","modified":1484364177000},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"0dfb4b3ba3180d7285e66f270e1d3fa0f132c3d2","modified":1484364177000},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"471f1627891aca5c0e1973e09fbcb01e1510d193","modified":1484364177000},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"10994990d6e0b4d965a728a22cf7f6ee29cae9f6","modified":1484364177000},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"711c8830886619d4f4a0598b0cde5499dce50c62","modified":1484364177000},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"dd8a3b22fc2f222ac6e6c05bd8a773fb039169c0","modified":1484364177000},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"2186be20e317505cd31886f1291429cc21f76703","modified":1484364177000},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"5304f99581da3a31de3ecec959b7adf9002fde83","modified":1484364177000},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"54c90cf7bdbf5c596179d8dae6e671bad1292662","modified":1484364177000},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"ece571f38180febaf02ace8187ead8318a300ea7","modified":1484364177000},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"013619c472c7e4b08311c464fcbe9fcf5edde603","modified":1484364177000},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"64f5d56c08d74a338813df1265580ca0cbf0190b","modified":1484364177000},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"0efa036a15c18f5abb058b7c0fad1dd9ac5eed4c","modified":1484364177000},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"8829bc556ca38bfec4add4f15a2f028092ac6d46","modified":1484364177000},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"82bbaa6322764779a1ac2e2c8390ce901c7972e2","modified":1484364177000},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1484364177000},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"a0e2030a606c934fb2c5c7373aaae04a1caac4c5","modified":1484364177000},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"c2d079788d6fc2e9a191ccdae94e50d55bf849dc","modified":1484364177000},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"5ae7906dc7c1d9468c7f4b4a6feddddc555797a1","modified":1484364177000},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"38e5df90c8689a71c978fd83ba74af3d4e4e5386","modified":1484364177000},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"b0dcca862cd0cc6e732e33d975b476d744911742","modified":1484364177000},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"fda14bc35be2e1b332809b55b3d07155a833dbf4","modified":1484364177000},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1484364177000},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"9a5581a770af8964064fef7afd3e16963e45547f","modified":1484364177000},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"ff9f163bb05c0709577040a875924d36c9ab99d6","modified":1484364177000},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"dcf9fe43b2ef78b923118ba39efedb38760e76b1","modified":1484364177000},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"1408209dfb9a22a0982a30bdbd14842c2b53f264","modified":1484364177000},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"2f878213cb24c5ddc18877f6d15ec5c5f57745ac","modified":1484364177000},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"9b63bd8effc7cf4b96acdea4d73add7df934a222","modified":1484364177000},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"69ecd6c97e7cdfd822ac8102b45ad0ede85050db","modified":1484364177000},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"9ccee9189c910b8a264802d7b2ec305d12dedcd0","modified":1484364177000},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1484364177000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1484364177000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1484364177000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1484364177000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1484364177000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1484364177000},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1484364177000},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1484364177000},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1484364177000},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1484364177000},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1484364177000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"4eda182cbcc046dbf449aef97c02c230cf80a494","modified":1484364177000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1484364177000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"fb5b49426dee7f1508500e698d1b3c6b04c8fcce","modified":1484364177000},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1484364177000},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1484364177000},{"_id":"themes/next/.git/objects/pack/pack-00f07f1de24eae5e11a6eafe2ba682e19a17d816.idx","hash":"9d5dbc105ad16f3b5a38b696e32be0282b529cf3","modified":1484364177000},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","hash":"1b22f17fdc38070de50e6d1ab3a32da71aa2d819","modified":1484364177000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"965ce8f688fedbeed504efd498bc9c1622d12362","modified":1484364177000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"6d7e6a5fc802b13694d8820fc0138037c0977d2e","modified":1484364177000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"97e438cc545714309882fbceadbf344fcaddcec5","modified":1484364177000},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1484364177000},{"_id":"themes/next/.git/logs/refs/remotes/origin/HEAD","hash":"3ac31915bdb1b49cbc0ff395fad8ed87aed8c3d7","modified":1484364177000},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"8994ffcce84deac0471532f270f97c44fea54dc0","modified":1484364177000},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d27448f199fc2f9980b601bc22b87f08b5d64dd1","modified":1484364177000},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"ae1ca14e51de67b07dba8f61ec79ee0e2e344574","modified":1484364177000},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"c890ce7fe933abad7baf39764a01894924854e92","modified":1484364177000},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"6c00f6e0978f4d8f9a846a15579963728aaa6a17","modified":1484364177000},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"49c2b2c14a1e7fcc810c6be4b632975d0204c281","modified":1484364177000},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"96f32ea6c3265a3889e6abe57587f6e2a2a40dfb","modified":1484364177000},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"4b7f81e1006e7acee3d1c840ccba155239f830cc","modified":1484364177000},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"b76387934fb6bb75212b23c1a194486892cc495e","modified":1484364177000},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"7778920dd105fa4de3a7ab206eeba30b1a7bac45","modified":1484364177000},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"4eff5b252d7b614e500fc7d52c97ce325e57d3ab","modified":1484364177000},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"2039590632bba3943c39319d80ef630af7928185","modified":1484364177000},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"9bf4362a4d0ae151ada84b219d39fbe5bb8c790e","modified":1484364177000},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"a82afbb72d83ee394aedc7b37ac0008a9823b4f4","modified":1484364177000},{"_id":"themes/next/source/css/_common/components/post/post-button.styl","hash":"fdfadbb4483043c7e0afd541ee9712389e633517","modified":1484364177000},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"8fae54591877a73dff0b29b2be2e8935e3c63575","modified":1484364177000},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"2cdc094ecf907a02fce25ad4a607cd5c40da0f2b","modified":1484364177000},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"b25132fe6a7ad67059a2c3afc60feabb479bdd75","modified":1484364177000},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"387ce23bba52b22a586b2dfb4ec618fe1ffd3926","modified":1484364177000},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"7f1aab694caf603809e33cff82beea84cd0128fd","modified":1484364177000},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"c6dab7661a6b8c678b21b7eb273cef7100f970f6","modified":1484364177000},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"e792c8dc41561c96d128e9b421187f1c3dc978a0","modified":1484364177000},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"a352ae5b1f8857393bf770d2e638bf15f0c9585d","modified":1484364177000},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"963105a531403d7aad6d9e5e23e3bfabb8ec065a","modified":1484364177000},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"10251257aceecb117233c9554dcf8ecfef8e2104","modified":1484364177000},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"bfd806d0a9f21446a22df82ac02e37d0075cc3b5","modified":1484364177000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"2e7ec9aaa3293941106b1bdd09055246aa3c3dc6","modified":1484364177000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"920343e41c124221a17f050bbb989494d44f7a24","modified":1484364177000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"c44f6a553ec7ea5508f2054a13be33a62a15d3a9","modified":1484364177000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"9486ddd2cb255227db102d09a7df4cae0fabad72","modified":1484364177000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"45fa7193435a8eae9960267438750b4c9fa9587f","modified":1484364177000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"7690b9596ec3a49befbe529a5a2649abec0faf76","modified":1484364177000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"2d3abbc85b979a648e0e579e45f16a6eba49d1e7","modified":1484364177000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"234facd038f144bd0fe09a31ed1357c5d74c517f","modified":1484364177000},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"3623e7fa4324ec1307370f33d8f287a9e20a5578","modified":1484364177000},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"c2abe4d87148e23e15d49ee225bc650de60baf46","modified":1484364177000},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"b8969e1654eec89a0fd10d88b337fee9cb03cd44","modified":1484364177000},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"4851b981020c5cbc354a1af9b831a2dcb3cf9d39","modified":1484364177000},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"74d0ba86f698165d13402670382a822c8736a556","modified":1484364177000},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"3eb73cee103b810fa56901577ecb9c9bb1793cff","modified":1484364177000},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"eba491ae624b4c843c8be4c94a044085dad4ba0f","modified":1484364177000},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"93b08815c4d17e2b96fef8530ec1f1064dede6ef","modified":1484364177000},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"b03f891883446f3a5548b7cc90d29c77e62f1053","modified":1484364177000},{"_id":"themes/next/source/css/_common/components/third-party/duoshuo.styl","hash":"2340dd9b3202c61d73cc708b790fac5adddbfc7f","modified":1484364177000},{"_id":"themes/next/source/css/_common/components/third-party/gentie.styl","hash":"586a3ec0f1015e7207cd6a2474362e068c341744","modified":1484364177000},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"327b5f63d55ec26f7663185c1a778440588d9803","modified":1484364177000},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"637c6b32c58ecf40041be6e911471cd82671919b","modified":1484364177000},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"42348219db93a85d2ee23cb06cebd4d8ab121726","modified":1484364177000},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"8b8e8cbce98a9296c8fd77f512ae85d945f65d40","modified":1484364177000},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"5dc4859c66305f871e56cba78f64bfe3bf1b5f01","modified":1484364177000},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"8b8e8cbce98a9296c8fd77f512ae85d945f65d40","modified":1484364177000},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1484364177000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1484364177000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1484364177000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1484364177000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1484364177000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1484364177000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"61d8d967807ef12598d81582fa95b9f600c3ee01","modified":1484364177000},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1484364177000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"c0522272bbaef2acb3d341912754d6ea2d0ecfc0","modified":1484364177000},{"_id":"themes/next/.git/objects/pack/pack-00f07f1de24eae5e11a6eafe2ba682e19a17d816.pack","hash":"40c8757daa949da2de470b088593680ae25c22d1","modified":1484364177000},{"_id":"public/images/algolia_logo.svg","hash":"90035272fa31a3f65b3c0e2cb8a633876ef457dc","modified":1484364621875},{"_id":"public/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1484364621875},{"_id":"public/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1484364621876},{"_id":"public/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1484364621876},{"_id":"public/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1484364621876},{"_id":"public/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1484364621876},{"_id":"public/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1484364621876},{"_id":"public/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1484364621877},{"_id":"public/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1484364621877},{"_id":"public/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1484364621877},{"_id":"public/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1484364621877},{"_id":"public/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1484364621877},{"_id":"public/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1484364621877},{"_id":"public/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1484364621877},{"_id":"public/lib/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1484364621877},{"_id":"public/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1484364621877},{"_id":"public/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1484364621877},{"_id":"public/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1484364621877},{"_id":"public/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1484364621877},{"_id":"public/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1484364621877},{"_id":"public/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1484364621877},{"_id":"public/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1484364621877},{"_id":"public/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1484364621877},{"_id":"public/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1484364621877},{"_id":"public/lib/font-awesome/fonts/FontAwesome.otf","hash":"1b22f17fdc38070de50e6d1ab3a32da71aa2d819","modified":1484364623266},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"965ce8f688fedbeed504efd498bc9c1622d12362","modified":1484364623278},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"6d7e6a5fc802b13694d8820fc0138037c0977d2e","modified":1484364623283},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"97e438cc545714309882fbceadbf344fcaddcec5","modified":1484364623283},{"_id":"public/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1484364623318},{"_id":"public/js/src/bootstrap.js","hash":"39bf93769d9080fa01a9a875183b43198f79bc19","modified":1484364623318},{"_id":"public/js/src/algolia-search.js","hash":"96b29f69b8b916b22f62c9959a117b5a968200a5","modified":1484364623318},{"_id":"public/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1484364623318},{"_id":"public/js/src/motion.js","hash":"269414e84df544a4ccb88519f6abae4943db3c67","modified":1484364623318},{"_id":"public/js/src/post-details.js","hash":"2038f54e289b6da5def09689e69f623187147be5","modified":1484364623319},{"_id":"public/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1484364623319},{"_id":"public/js/src/utils.js","hash":"384e17ff857f073060f5bf8c6e4f4b7353236331","modified":1484364623319},{"_id":"public/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1484364623319},{"_id":"public/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1484364623319},{"_id":"public/lib/fastclick/README.html","hash":"da3c74d484c73cc7df565e8abbfa4d6a5a18d4da","modified":1484364623319},{"_id":"public/lib/fastclick/bower.json","hash":"4dcecf83afddba148464d5339c93f6d0aa9f42e9","modified":1484364623319},{"_id":"public/lib/font-awesome/bower.json","hash":"64394a2a9aa00f8e321d8daa5e51a420f0e96dad","modified":1484364623319},{"_id":"public/lib/jquery_lazyload/CONTRIBUTING.html","hash":"a6358170d346af13b1452ac157b60505bec7015c","modified":1484364623319},{"_id":"public/lib/jquery_lazyload/README.html","hash":"bde24335f6bc09d8801c0dcd7274f71b466552bd","modified":1484364623319},{"_id":"public/lib/jquery_lazyload/bower.json","hash":"ae3c3b61e6e7f9e1d7e3585ad854380ecc04cf53","modified":1484364623319},{"_id":"public/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1484364623319},{"_id":"public/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1484364623319},{"_id":"public/lib/velocity/bower.json","hash":"0ef14e7ccdfba5db6eb3f8fc6aa3b47282c36409","modified":1484364623319},{"_id":"public/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1484364623319},{"_id":"public/js/src/schemes/pisces.js","hash":"9ccee9189c910b8a264802d7b2ec305d12dedcd0","modified":1484364623319},{"_id":"public/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1484364623319},{"_id":"public/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1484364623319},{"_id":"public/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1484364623319},{"_id":"public/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1484364623320},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1484364623320},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1484364623320},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1484364623320},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1484364623320},{"_id":"public/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1484364623320},{"_id":"public/css/main.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1484365043978},{"_id":"public/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1484364623320},{"_id":"public/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1484364623320},{"_id":"public/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1484364623320},{"_id":"public/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1484364623320},{"_id":"public/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1484364623320},{"_id":"public/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1484364623320},{"_id":"public/lib/font-awesome/css/font-awesome.css","hash":"4eda182cbcc046dbf449aef97c02c230cf80a494","modified":1484364623320},{"_id":"public/lib/font-awesome/css/font-awesome.min.css","hash":"fb5b49426dee7f1508500e698d1b3c6b04c8fcce","modified":1484364623321},{"_id":"public/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1484364623321},{"_id":"public/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1484364623321},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"61d8d967807ef12598d81582fa95b9f600c3ee01","modified":1484364623321},{"_id":"public/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"c0522272bbaef2acb3d341912754d6ea2d0ecfc0","modified":1484364623342}],"Category":[{"name":"technology","_id":"cixwmkiwt0003mo8zxcetaqrb"}],"Data":[],"Page":[{"title":"关于我","date":"2016-05-18T15:37:24.000Z","_content":"Email：[zcc0388@gmail.com]()\nGithub：[@codecc](https://github.com/Code-CC)","source":"about/index.md","raw":"---\ntitle: 关于我\ndate: 2016-05-18 23:37:24\n---\nEmail：[zcc0388@gmail.com]()\nGithub：[@codecc](https://github.com/Code-CC)","updated":"2016-05-18T15:50:05.000Z","path":"about/index.html","comments":1,"layout":"page","_id":"cixwmkiwm0001mo8zys744g7j","content":"<p>Email：<a href=\"\">zcc0388@gmail.com</a><br>Github：<a href=\"https://github.com/Code-CC\" target=\"_blank\" rel=\"external\">@codecc</a></p>\n","excerpt":"","more":"<p>Email：<a href=\"\">zcc0388@gmail.com</a><br>Github：<a href=\"https://github.com/Code-CC\">@codecc</a></p>\n"}],"Post":[{"title":"谈谈DNS","date":"2016-05-21T12:53:01.000Z","_content":"### 写在前面\n\n目前，我们大部分的网络通信都是基于TCP/IP协议的，而TCP/IP又基于IP地址作为唯一标识进行通信，随着需要记忆的IP地址数量的增多，肯定会超出我们的记忆能力范围，但如果使用一种利于人们的记忆的方式，如域名，例如\"www.google.com\"，我们便可以轻松的记忆这种方式的标识，而不是繁杂的数字。而DNS(域名系统)就是为了可以使用这种方式提供服务的。\n\n*** \n\n### 概念\n\nDNS(Domain Name System)，域名系统，它是因特网的一项服务。它作为将域名和IP地址相互映射的一个分布式数据库，能够使人更方便地访问互联网。DNS使用TCP和UDP端口53。当前，对于每一级域名长度的限制是63个字符，域名总长度则不能超过253个字符。\n\nDNS Domain Namespace，DNS域命名空间，是一种分层树状结构，其格式如下:\"www.google.com\",以点\".\"为分隔。结构如图所示：\n\n![](image/607348-20160301212335189-776690379.gif)\n\n* 根域：绝对域名(FQDN)，以点\".\"结尾的域名\n\n* 顶级域：用来指示某个国家/地区或组织使用的名称的类型名称，例如.com\n\n* 二级域：个人或组织在因特网上使用的注册名称，例如google.com\n\n* 子域：已注册的二级域名派生的域名，一般就是网站名，例如www.google.com\n\n* 主机名：标识网络上的特定计算机，例如h1.www.google.com\n\nDNS资源记录：(即映射关系，通常由域名管理员进行配置)，常见类型如下：\n\n* SOA：起始授权机构\n\n* NS：名称服务器\n\n* MX：邮件服务器\n\n* A：IP地址(最常用，映射IP地址)\n\n* CNAME：别名(较常用，映射到其他域名)\n\n***\n　\n### DNS工作原理\n\n当我们请求一个域名时，会通过DNS服务器将域名解析成IP访问最终的主机，那么，DNS是如何查询到域名所对应的IP并返回给我们的呢？请工作机制如图所示：\n\n![](image/607348-20160301205942986-1456220290.png)\n\n当我们请求一个域名时，直到获取到IP地址，整个过程是如何工作的？以请求www.codecc.xyz为例：\n\n1. 首先，我们的主机会去查找本地的hosts文件和本地DNS解析器缓存，如果hosts文件和本地DNS缓存存在www.codecc.xyz和IP的映射关系，则完成域名解析，请求该IP地址，否则进入第二步。\n\n2. 当hosts和本地DNS解析器缓存都没有对应的网址映射关系，则会根据机器(/etc/reslove.conf)配置的本地DNS服务器进行查询，此服务器收到查询时，如果要查询的域名在本地配置区域资源或者缓存中存在映射关系，则跳到步骤9，将解析结果直接返回给客户机。\n\nPS：一二步骤为递归查询，其余步骤为迭代查询\n\n3. 若本地DNS服务器不存在该域名的映射关系，就把请求发送至13台根DNS服务器。\n\n4. 根DNS服务器会判断这个域名(.xyz)由谁来授权管理，并返回一个负责该顶级域的DNS服务器的一个IP给本地DNS服务器。\n\n5. 本地DNS服务器收到该IP后，会再将查询请求发送至(.xyz)所在的DNS服务器。\n\n6. 如果(.xyz)的DNS服务器无法解析该域名，就会去判断这个二级域名(codecc.xyz)的管理者，返回一个负责该二级域的DNS服务器的IP给本地DNS服务器。\n\n7. 本地DNS服务器收到该IP后，会再次将查询请求发送至(codecc.xyz)所在的DNS服务器。\n\n8. (codecc.xyz)的DNS服务器会存有www.codecc.xzy的映射关系，将解析后的IP返回给本地DNS服务器\n\n9. 本地DNS服务器根据查询到的解析IP发送给客户机，至此，DNS解析完成。\n\n***\n\n\n### 常用DNS查询命令\n\n* windows：\n\n\t* `nslookup 域名`\n\n\t![](image/607348-20160420012038241-52598954.png)\n\n* Linux：\n\n\t* `nslookup 域名`\n\n\t![](image/607348-20160420012104335-886114220.png)\n\n\t* `dig 域名`\n\n\t![](image/607348-20160420012127523-1968920086.png)\n\n***\n\n### 参考\n\n[https://en.wikipedia.org/wiki/Domain_Name_System](https://en.wikipedia.org/wiki/Domain_Name_System)\n\n[https://technet.microsoft.com/en-us/library/cc772774(v=ws.10).aspx](https://technet.microsoft.com/en-us/library/cc772774(v=ws.10).aspx)\n\n[《TCP/IP详解卷1：协议》]()","source":"_posts/dns.md","raw":"---\ntitle: 谈谈DNS\ndate: 2016-05-21 20:53:01\ntags: network\ncategory: technology\n---\n### 写在前面\n\n目前，我们大部分的网络通信都是基于TCP/IP协议的，而TCP/IP又基于IP地址作为唯一标识进行通信，随着需要记忆的IP地址数量的增多，肯定会超出我们的记忆能力范围，但如果使用一种利于人们的记忆的方式，如域名，例如\"www.google.com\"，我们便可以轻松的记忆这种方式的标识，而不是繁杂的数字。而DNS(域名系统)就是为了可以使用这种方式提供服务的。\n\n*** \n\n### 概念\n\nDNS(Domain Name System)，域名系统，它是因特网的一项服务。它作为将域名和IP地址相互映射的一个分布式数据库，能够使人更方便地访问互联网。DNS使用TCP和UDP端口53。当前，对于每一级域名长度的限制是63个字符，域名总长度则不能超过253个字符。\n\nDNS Domain Namespace，DNS域命名空间，是一种分层树状结构，其格式如下:\"www.google.com\",以点\".\"为分隔。结构如图所示：\n\n![](image/607348-20160301212335189-776690379.gif)\n\n* 根域：绝对域名(FQDN)，以点\".\"结尾的域名\n\n* 顶级域：用来指示某个国家/地区或组织使用的名称的类型名称，例如.com\n\n* 二级域：个人或组织在因特网上使用的注册名称，例如google.com\n\n* 子域：已注册的二级域名派生的域名，一般就是网站名，例如www.google.com\n\n* 主机名：标识网络上的特定计算机，例如h1.www.google.com\n\nDNS资源记录：(即映射关系，通常由域名管理员进行配置)，常见类型如下：\n\n* SOA：起始授权机构\n\n* NS：名称服务器\n\n* MX：邮件服务器\n\n* A：IP地址(最常用，映射IP地址)\n\n* CNAME：别名(较常用，映射到其他域名)\n\n***\n　\n### DNS工作原理\n\n当我们请求一个域名时，会通过DNS服务器将域名解析成IP访问最终的主机，那么，DNS是如何查询到域名所对应的IP并返回给我们的呢？请工作机制如图所示：\n\n![](image/607348-20160301205942986-1456220290.png)\n\n当我们请求一个域名时，直到获取到IP地址，整个过程是如何工作的？以请求www.codecc.xyz为例：\n\n1. 首先，我们的主机会去查找本地的hosts文件和本地DNS解析器缓存，如果hosts文件和本地DNS缓存存在www.codecc.xyz和IP的映射关系，则完成域名解析，请求该IP地址，否则进入第二步。\n\n2. 当hosts和本地DNS解析器缓存都没有对应的网址映射关系，则会根据机器(/etc/reslove.conf)配置的本地DNS服务器进行查询，此服务器收到查询时，如果要查询的域名在本地配置区域资源或者缓存中存在映射关系，则跳到步骤9，将解析结果直接返回给客户机。\n\nPS：一二步骤为递归查询，其余步骤为迭代查询\n\n3. 若本地DNS服务器不存在该域名的映射关系，就把请求发送至13台根DNS服务器。\n\n4. 根DNS服务器会判断这个域名(.xyz)由谁来授权管理，并返回一个负责该顶级域的DNS服务器的一个IP给本地DNS服务器。\n\n5. 本地DNS服务器收到该IP后，会再将查询请求发送至(.xyz)所在的DNS服务器。\n\n6. 如果(.xyz)的DNS服务器无法解析该域名，就会去判断这个二级域名(codecc.xyz)的管理者，返回一个负责该二级域的DNS服务器的IP给本地DNS服务器。\n\n7. 本地DNS服务器收到该IP后，会再次将查询请求发送至(codecc.xyz)所在的DNS服务器。\n\n8. (codecc.xyz)的DNS服务器会存有www.codecc.xzy的映射关系，将解析后的IP返回给本地DNS服务器\n\n9. 本地DNS服务器根据查询到的解析IP发送给客户机，至此，DNS解析完成。\n\n***\n\n\n### 常用DNS查询命令\n\n* windows：\n\n\t* `nslookup 域名`\n\n\t![](image/607348-20160420012038241-52598954.png)\n\n* Linux：\n\n\t* `nslookup 域名`\n\n\t![](image/607348-20160420012104335-886114220.png)\n\n\t* `dig 域名`\n\n\t![](image/607348-20160420012127523-1968920086.png)\n\n***\n\n### 参考\n\n[https://en.wikipedia.org/wiki/Domain_Name_System](https://en.wikipedia.org/wiki/Domain_Name_System)\n\n[https://technet.microsoft.com/en-us/library/cc772774(v=ws.10).aspx](https://technet.microsoft.com/en-us/library/cc772774(v=ws.10).aspx)\n\n[《TCP/IP详解卷1：协议》]()","slug":"dns","published":1,"updated":"2016-05-31T15:33:34.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cixwmkiwe0000mo8zrbxm2i67","content":"<h3 id=\"写在前面\"><a href=\"#写在前面\" class=\"headerlink\" title=\"写在前面\"></a>写在前面</h3><p>目前，我们大部分的网络通信都是基于TCP/IP协议的，而TCP/IP又基于IP地址作为唯一标识进行通信，随着需要记忆的IP地址数量的增多，肯定会超出我们的记忆能力范围，但如果使用一种利于人们的记忆的方式，如域名，例如”www.google.com”，我们便可以轻松的记忆这种方式的标识，而不是繁杂的数字。而DNS(域名系统)就是为了可以使用这种方式提供服务的。</p>\n<hr>\n<h3 id=\"概念\"><a href=\"#概念\" class=\"headerlink\" title=\"概念\"></a>概念</h3><p>DNS(Domain Name System)，域名系统，它是因特网的一项服务。它作为将域名和IP地址相互映射的一个分布式数据库，能够使人更方便地访问互联网。DNS使用TCP和UDP端口53。当前，对于每一级域名长度的限制是63个字符，域名总长度则不能超过253个字符。</p>\n<p>DNS Domain Namespace，DNS域命名空间，是一种分层树状结构，其格式如下:”www.google.com”,以点”.”为分隔。结构如图所示：</p>\n<p><img src=\"image/607348-20160301212335189-776690379.gif\" alt=\"\"></p>\n<ul>\n<li><p>根域：绝对域名(FQDN)，以点”.”结尾的域名</p>\n</li>\n<li><p>顶级域：用来指示某个国家/地区或组织使用的名称的类型名称，例如.com</p>\n</li>\n<li><p>二级域：个人或组织在因特网上使用的注册名称，例如google.com</p>\n</li>\n<li><p>子域：已注册的二级域名派生的域名，一般就是网站名，例如www.google.com</p>\n</li>\n<li><p>主机名：标识网络上的特定计算机，例如h1.www.google.com</p>\n</li>\n</ul>\n<p>DNS资源记录：(即映射关系，通常由域名管理员进行配置)，常见类型如下：</p>\n<ul>\n<li><p>SOA：起始授权机构</p>\n</li>\n<li><p>NS：名称服务器</p>\n</li>\n<li><p>MX：邮件服务器</p>\n</li>\n<li><p>A：IP地址(最常用，映射IP地址)</p>\n</li>\n<li><p>CNAME：别名(较常用，映射到其他域名)</p>\n</li>\n</ul>\n<hr>\n<p>　</p>\n<h3 id=\"DNS工作原理\"><a href=\"#DNS工作原理\" class=\"headerlink\" title=\"DNS工作原理\"></a>DNS工作原理</h3><p>当我们请求一个域名时，会通过DNS服务器将域名解析成IP访问最终的主机，那么，DNS是如何查询到域名所对应的IP并返回给我们的呢？请工作机制如图所示：</p>\n<p><img src=\"image/607348-20160301205942986-1456220290.png\" alt=\"\"></p>\n<p>当我们请求一个域名时，直到获取到IP地址，整个过程是如何工作的？以请求www.codecc.xyz为例：</p>\n<ol>\n<li><p>首先，我们的主机会去查找本地的hosts文件和本地DNS解析器缓存，如果hosts文件和本地DNS缓存存在www.codecc.xyz和IP的映射关系，则完成域名解析，请求该IP地址，否则进入第二步。</p>\n</li>\n<li><p>当hosts和本地DNS解析器缓存都没有对应的网址映射关系，则会根据机器(/etc/reslove.conf)配置的本地DNS服务器进行查询，此服务器收到查询时，如果要查询的域名在本地配置区域资源或者缓存中存在映射关系，则跳到步骤9，将解析结果直接返回给客户机。</p>\n</li>\n</ol>\n<p>PS：一二步骤为递归查询，其余步骤为迭代查询</p>\n<ol>\n<li><p>若本地DNS服务器不存在该域名的映射关系，就把请求发送至13台根DNS服务器。</p>\n</li>\n<li><p>根DNS服务器会判断这个域名(.xyz)由谁来授权管理，并返回一个负责该顶级域的DNS服务器的一个IP给本地DNS服务器。</p>\n</li>\n<li><p>本地DNS服务器收到该IP后，会再将查询请求发送至(.xyz)所在的DNS服务器。</p>\n</li>\n<li><p>如果(.xyz)的DNS服务器无法解析该域名，就会去判断这个二级域名(codecc.xyz)的管理者，返回一个负责该二级域的DNS服务器的IP给本地DNS服务器。</p>\n</li>\n<li><p>本地DNS服务器收到该IP后，会再次将查询请求发送至(codecc.xyz)所在的DNS服务器。</p>\n</li>\n<li><p>(codecc.xyz)的DNS服务器会存有www.codecc.xzy的映射关系，将解析后的IP返回给本地DNS服务器</p>\n</li>\n<li><p>本地DNS服务器根据查询到的解析IP发送给客户机，至此，DNS解析完成。</p>\n</li>\n</ol>\n<hr>\n<h3 id=\"常用DNS查询命令\"><a href=\"#常用DNS查询命令\" class=\"headerlink\" title=\"常用DNS查询命令\"></a>常用DNS查询命令</h3><ul>\n<li><p>windows：</p>\n<ul>\n<li><p><code>nslookup 域名</code></p>\n<p><img src=\"image/607348-20160420012038241-52598954.png\" alt=\"\"></p>\n</li>\n</ul>\n</li>\n<li><p>Linux：</p>\n<ul>\n<li><p><code>nslookup 域名</code></p>\n<p><img src=\"image/607348-20160420012104335-886114220.png\" alt=\"\"></p>\n</li>\n<li><p><code>dig 域名</code></p>\n<p><img src=\"image/607348-20160420012127523-1968920086.png\" alt=\"\"></p>\n</li>\n</ul>\n</li>\n</ul>\n<hr>\n<h3 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h3><p><a href=\"https://en.wikipedia.org/wiki/Domain_Name_System\" target=\"_blank\" rel=\"external\">https://en.wikipedia.org/wiki/Domain_Name_System</a></p>\n<p><a href=\"https://technet.microsoft.com/en-us/library/cc772774(v=ws.10\" target=\"_blank\" rel=\"external\">https://technet.microsoft.com/en-us/library/cc772774(v=ws.10).aspx</a>.aspx)</p>\n<p><a href=\"\">《TCP/IP详解卷1：协议》</a></p>\n","excerpt":"","more":"<h3 id=\"写在前面\"><a href=\"#写在前面\" class=\"headerlink\" title=\"写在前面\"></a>写在前面</h3><p>目前，我们大部分的网络通信都是基于TCP/IP协议的，而TCP/IP又基于IP地址作为唯一标识进行通信，随着需要记忆的IP地址数量的增多，肯定会超出我们的记忆能力范围，但如果使用一种利于人们的记忆的方式，如域名，例如”www.google.com”，我们便可以轻松的记忆这种方式的标识，而不是繁杂的数字。而DNS(域名系统)就是为了可以使用这种方式提供服务的。</p>\n<hr>\n<h3 id=\"概念\"><a href=\"#概念\" class=\"headerlink\" title=\"概念\"></a>概念</h3><p>DNS(Domain Name System)，域名系统，它是因特网的一项服务。它作为将域名和IP地址相互映射的一个分布式数据库，能够使人更方便地访问互联网。DNS使用TCP和UDP端口53。当前，对于每一级域名长度的限制是63个字符，域名总长度则不能超过253个字符。</p>\n<p>DNS Domain Namespace，DNS域命名空间，是一种分层树状结构，其格式如下:”www.google.com”,以点”.”为分隔。结构如图所示：</p>\n<p><img src=\"image/607348-20160301212335189-776690379.gif\" alt=\"\"></p>\n<ul>\n<li><p>根域：绝对域名(FQDN)，以点”.”结尾的域名</p>\n</li>\n<li><p>顶级域：用来指示某个国家/地区或组织使用的名称的类型名称，例如.com</p>\n</li>\n<li><p>二级域：个人或组织在因特网上使用的注册名称，例如google.com</p>\n</li>\n<li><p>子域：已注册的二级域名派生的域名，一般就是网站名，例如www.google.com</p>\n</li>\n<li><p>主机名：标识网络上的特定计算机，例如h1.www.google.com</p>\n</li>\n</ul>\n<p>DNS资源记录：(即映射关系，通常由域名管理员进行配置)，常见类型如下：</p>\n<ul>\n<li><p>SOA：起始授权机构</p>\n</li>\n<li><p>NS：名称服务器</p>\n</li>\n<li><p>MX：邮件服务器</p>\n</li>\n<li><p>A：IP地址(最常用，映射IP地址)</p>\n</li>\n<li><p>CNAME：别名(较常用，映射到其他域名)</p>\n</li>\n</ul>\n<hr>\n<p>　</p>\n<h3 id=\"DNS工作原理\"><a href=\"#DNS工作原理\" class=\"headerlink\" title=\"DNS工作原理\"></a>DNS工作原理</h3><p>当我们请求一个域名时，会通过DNS服务器将域名解析成IP访问最终的主机，那么，DNS是如何查询到域名所对应的IP并返回给我们的呢？请工作机制如图所示：</p>\n<p><img src=\"image/607348-20160301205942986-1456220290.png\" alt=\"\"></p>\n<p>当我们请求一个域名时，直到获取到IP地址，整个过程是如何工作的？以请求www.codecc.xyz为例：</p>\n<ol>\n<li><p>首先，我们的主机会去查找本地的hosts文件和本地DNS解析器缓存，如果hosts文件和本地DNS缓存存在www.codecc.xyz和IP的映射关系，则完成域名解析，请求该IP地址，否则进入第二步。</p>\n</li>\n<li><p>当hosts和本地DNS解析器缓存都没有对应的网址映射关系，则会根据机器(/etc/reslove.conf)配置的本地DNS服务器进行查询，此服务器收到查询时，如果要查询的域名在本地配置区域资源或者缓存中存在映射关系，则跳到步骤9，将解析结果直接返回给客户机。</p>\n</li>\n</ol>\n<p>PS：一二步骤为递归查询，其余步骤为迭代查询</p>\n<ol>\n<li><p>若本地DNS服务器不存在该域名的映射关系，就把请求发送至13台根DNS服务器。</p>\n</li>\n<li><p>根DNS服务器会判断这个域名(.xyz)由谁来授权管理，并返回一个负责该顶级域的DNS服务器的一个IP给本地DNS服务器。</p>\n</li>\n<li><p>本地DNS服务器收到该IP后，会再将查询请求发送至(.xyz)所在的DNS服务器。</p>\n</li>\n<li><p>如果(.xyz)的DNS服务器无法解析该域名，就会去判断这个二级域名(codecc.xyz)的管理者，返回一个负责该二级域的DNS服务器的IP给本地DNS服务器。</p>\n</li>\n<li><p>本地DNS服务器收到该IP后，会再次将查询请求发送至(codecc.xyz)所在的DNS服务器。</p>\n</li>\n<li><p>(codecc.xyz)的DNS服务器会存有www.codecc.xzy的映射关系，将解析后的IP返回给本地DNS服务器</p>\n</li>\n<li><p>本地DNS服务器根据查询到的解析IP发送给客户机，至此，DNS解析完成。</p>\n</li>\n</ol>\n<hr>\n<h3 id=\"常用DNS查询命令\"><a href=\"#常用DNS查询命令\" class=\"headerlink\" title=\"常用DNS查询命令\"></a>常用DNS查询命令</h3><ul>\n<li><p>windows：</p>\n<ul>\n<li><p><code>nslookup 域名</code></p>\n<p><img src=\"image/607348-20160420012038241-52598954.png\" alt=\"\"></p>\n</li>\n</ul>\n</li>\n<li><p>Linux：</p>\n<ul>\n<li><p><code>nslookup 域名</code></p>\n<p><img src=\"image/607348-20160420012104335-886114220.png\" alt=\"\"></p>\n</li>\n<li><p><code>dig 域名</code></p>\n<p><img src=\"image/607348-20160420012127523-1968920086.png\" alt=\"\"></p>\n</li>\n</ul>\n</li>\n</ul>\n<hr>\n<h3 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h3><p><a href=\"https://en.wikipedia.org/wiki/Domain_Name_System\">https://en.wikipedia.org/wiki/Domain_Name_System</a></p>\n<p><a href=\"https://technet.microsoft.com/en-us/library/cc772774(v=ws.10\">https://technet.microsoft.com/en-us/library/cc772774(v=ws.10).aspx</a>.aspx)</p>\n<p><a href=\"\">《TCP/IP详解卷1：协议》</a></p>\n"},{"title":"文件系统","date":"2016-06-20T14:26:26.000Z","_content":"### 引言\n计算机的文件系统是一种存储和组织计算机数据的方法，它使得对其访问和查找变得容易，文件系统使用文件和树形目录的抽象逻辑概念代替了硬盘和光盘等物理设备使用数据块的概念，用户使用文件系统来保存数据不必关心数据实际保存在硬盘（或者光盘）的地址为多少的数据块上，只需要记住这个文件的所属目录和文件名。在写入新数据之前，用户不必关心硬盘上的那个块地址没有被使用，硬盘上的存储空间管理（分配和释放）功能由文件系统自动完成，用户只需要记住数据被写入到了哪个文件中。\n\n严格地说，文件系统是一套实现了数据的存储、分级组织、访问和获取等操作的抽象数据类型（Abstract data type）\n\n***\n\n### 概念\n文件系统是一种用于向用户提供底层数据访问的机制。它将设备中的空间划分为特定大小的块（扇区），一般每块512字节。数据存储在这些块中，大小被修正为占用整数个块。由文件系统软件来负责将这些块组织为文件和目录，并记录哪些块被分配给了哪个文件，以及哪些块没有被使用。\n\n\n","source":"_posts/filesystem.md","raw":"---\ntitle: 文件系统\ndate: 2016-06-20 22:26:26\ntags: [system]\ncategory: technology\n---\n### 引言\n计算机的文件系统是一种存储和组织计算机数据的方法，它使得对其访问和查找变得容易，文件系统使用文件和树形目录的抽象逻辑概念代替了硬盘和光盘等物理设备使用数据块的概念，用户使用文件系统来保存数据不必关心数据实际保存在硬盘（或者光盘）的地址为多少的数据块上，只需要记住这个文件的所属目录和文件名。在写入新数据之前，用户不必关心硬盘上的那个块地址没有被使用，硬盘上的存储空间管理（分配和释放）功能由文件系统自动完成，用户只需要记住数据被写入到了哪个文件中。\n\n严格地说，文件系统是一套实现了数据的存储、分级组织、访问和获取等操作的抽象数据类型（Abstract data type）\n\n***\n\n### 概念\n文件系统是一种用于向用户提供底层数据访问的机制。它将设备中的空间划分为特定大小的块（扇区），一般每块512字节。数据存储在这些块中，大小被修正为占用整数个块。由文件系统软件来负责将这些块组织为文件和目录，并记录哪些块被分配给了哪个文件，以及哪些块没有被使用。\n\n\n","slug":"filesystem","published":1,"updated":"2016-07-15T13:09:52.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cixwmkiwo0002mo8z89svx6sf","content":"<h3 id=\"引言\"><a href=\"#引言\" class=\"headerlink\" title=\"引言\"></a>引言</h3><p>计算机的文件系统是一种存储和组织计算机数据的方法，它使得对其访问和查找变得容易，文件系统使用文件和树形目录的抽象逻辑概念代替了硬盘和光盘等物理设备使用数据块的概念，用户使用文件系统来保存数据不必关心数据实际保存在硬盘（或者光盘）的地址为多少的数据块上，只需要记住这个文件的所属目录和文件名。在写入新数据之前，用户不必关心硬盘上的那个块地址没有被使用，硬盘上的存储空间管理（分配和释放）功能由文件系统自动完成，用户只需要记住数据被写入到了哪个文件中。</p>\n<p>严格地说，文件系统是一套实现了数据的存储、分级组织、访问和获取等操作的抽象数据类型（Abstract data type）</p>\n<hr>\n<h3 id=\"概念\"><a href=\"#概念\" class=\"headerlink\" title=\"概念\"></a>概念</h3><p>文件系统是一种用于向用户提供底层数据访问的机制。它将设备中的空间划分为特定大小的块（扇区），一般每块512字节。数据存储在这些块中，大小被修正为占用整数个块。由文件系统软件来负责将这些块组织为文件和目录，并记录哪些块被分配给了哪个文件，以及哪些块没有被使用。</p>\n","excerpt":"","more":"<h3 id=\"引言\"><a href=\"#引言\" class=\"headerlink\" title=\"引言\"></a>引言</h3><p>计算机的文件系统是一种存储和组织计算机数据的方法，它使得对其访问和查找变得容易，文件系统使用文件和树形目录的抽象逻辑概念代替了硬盘和光盘等物理设备使用数据块的概念，用户使用文件系统来保存数据不必关心数据实际保存在硬盘（或者光盘）的地址为多少的数据块上，只需要记住这个文件的所属目录和文件名。在写入新数据之前，用户不必关心硬盘上的那个块地址没有被使用，硬盘上的存储空间管理（分配和释放）功能由文件系统自动完成，用户只需要记住数据被写入到了哪个文件中。</p>\n<p>严格地说，文件系统是一套实现了数据的存储、分级组织、访问和获取等操作的抽象数据类型（Abstract data type）</p>\n<hr>\n<h3 id=\"概念\"><a href=\"#概念\" class=\"headerlink\" title=\"概念\"></a>概念</h3><p>文件系统是一种用于向用户提供底层数据访问的机制。它将设备中的空间划分为特定大小的块（扇区），一般每块512字节。数据存储在这些块中，大小被修正为占用整数个块。由文件系统软件来负责将这些块组织为文件和目录，并记录哪些块被分配给了哪个文件，以及哪些块没有被使用。</p>\n"},{"title":"谈谈HTTP","date":"2016-05-29T07:07:03.000Z","_content":"### 写在前面\n如今网络已经无处不在，人们通过网络获取浏览各种信息，其中，大部分都是通过浏览器访问各种网页来获取我们想要的信息，那么浏览器与网页(服务端)究竟是如何通信的呢？这就得从HTTP协议说起了，浏览器获取网页信息都是基于HTTP协议来处理的。\n\n***\n\n### 概念\nHTTP（HyperText Transfer Protocol，超文本传输协议）是互联网上应用最为广泛的一种网络协议。设计HTTP最初的目的是为了提供一种发布和接收HTML页面的方法。通过HTTP或者HTTPS协议请求的资源由统一资源标识符（Uniform Resource Identifiers，URI）来标识。HTTP是一个应用层协议，由请求和响应构成，是一个标准的客户端服务器模型。其具有如下特点：\n\n* 支持客户/服务器模式。\n\n* 简单快速：客户向服务器请求服务时，只需传送请求方法和路径。请求方法常用的有GET、HEAD、POST。每种方法规定了客户与服务器联系的类型不同。由于HTTP协议简单，使得HTTP服务器的程序规模小，因而通信速度很快。\n\n* 灵活：HTTP允许传输任意类型的数据对象。正在传输的类型由Content-Type加以标记。\n\n* 无连接：无连接的含义是限制每次连接只处理一个请求。服务器处理完客户的请求，并收到客户的应答后，即断开连接。采用这种方式可以节省传输时间。\n\n* 无状态：HTTP协议是无状态协议。无状态是指协议对于事务处理没有记忆能力。缺少状态意味着如果后续处理需要前面的信息，则它必须重传，这样可能导致每次连接传送的数据量增大。另一方面，在服务器不需要先前信息时它的应答就较快\n\nPS：尽管TCP/IP协议是互联网上最流行的应用，HTTP协议中，并没有规定必须使用它或它支持的层。事实上，HTTP可以在任何互联网协议上，或其他网络上实现。HTTP假定其下层协议提供可靠的传输。因此，任何能够提供这种保证的协议都可以被其使用。因此也就是其在TCP/IP协议族使用TCP作为其传输层。\n\n***\n\n### 工作流程\nHTTP协议的通信过程永远是客户端发起请求(request)，服务器回送响应(respone)，如下图所示：\n\n![](image/5657919_2.jpg)\n\n一个完整的HTTP操作称为一个事务，其流程可分为四步：\n\n* 建立连接(TCP三次握手)\n\n* 客户端发送一个请求报文给服务器\n\n* 服务器响应对应信息\n\n* 客户端接收信息，然后断开连接\n\n***\n\n### 请求和响应详解\n\n#### 请求报文\n\n* 请求行：由请求方法、URL和HTTP版本组成\n\n\teg：GET /index.html HTTP/1.1\n\n\t* 请求方法\n\n\t\t* GET：请求获取URI所标识的资源\n\n\t\t* HEAD：请求获取URI所标识的资源，但不传回资源的文本部分\n\n\t\t* POST：向指定URI资源提交数据，请求服务器进行处理\n\n\t\t* PUT：向指定URI资源上传其最新内容\n\n\t\t* DELETE：请求服务器删除URI所标识的资源\n\n\t\t* TRACE：回显服务器收到的请求，主要用于测试或诊断\n\n\t\t* OPTIONS：请求URI资源所支持的HTTP请求方法\n\n\t\t* CONNECT：HTTP/1.1协议中预留给能够将连接改为管道方式的代理服务器。通常用于SSL加密服务器的链接\n\n\t* URL\n\n\t\t请求的资源路径\n\n\t* 协议版本\n\n\t\t现在大部分为HTTP/1.0 和 HTTP/1.1\n\n\n* 请求头部\n\n\teg：host:www.google.com\n\n\thost为必选，其他都为可选参数\n\n* 空行\n\n* 消息体\n\n\t请求所带的文本\n\n#### 响应报文\n\n* 状态行：由协议版本、状态码和描述信息组成\n\n\teg：HTTP/1.1 200 OK\n\n\t* 协议版本\n\n\t* 状态码：用于告诉客户端，服务器是否产生预期的响应\n\n\t\t* 1XX：提示信息，表示请求已被成功接收，继续处理\n\n\t\t* 2XX：成功，表示请求已被成功接收，理解\n\n\t\t* 3XX：重定向，要完成请求必须进行更进一步的处理\n\n\t\t* 4XX：客户端错误，请求有语法错误或请求无法实现\n\n\t\t* 5XX：服务器端错误，服务器未能实现合法的请求\n\n\t* 描述信息\n\n* 响应头部\n\n* 空行\n\n* 消息体\n\n#### 一个例子\n\n访问codecc.xyz首页\n\n* Request，首行为请求行，其余为请求头部\n\n![](image/20160531232545.png)\n\n* Respone，首行为响应状态行，空行前为响应头部，其余为响应数据\n\n![](image/20160531232617.png)\n\n\n***\n\n### 参考\n\n[https://en.wikipedia.org/wiki/Hypertext_Transfer_Protocol](https://en.wikipedia.org/wiki/Hypertext_Transfer_Protocol)\n\n","source":"_posts/http.md","raw":"---\ntitle: 谈谈HTTP\ndate: 2016-05-29 15:07:03\ntags: [network,web]\ncategory: technology\n---\n### 写在前面\n如今网络已经无处不在，人们通过网络获取浏览各种信息，其中，大部分都是通过浏览器访问各种网页来获取我们想要的信息，那么浏览器与网页(服务端)究竟是如何通信的呢？这就得从HTTP协议说起了，浏览器获取网页信息都是基于HTTP协议来处理的。\n\n***\n\n### 概念\nHTTP（HyperText Transfer Protocol，超文本传输协议）是互联网上应用最为广泛的一种网络协议。设计HTTP最初的目的是为了提供一种发布和接收HTML页面的方法。通过HTTP或者HTTPS协议请求的资源由统一资源标识符（Uniform Resource Identifiers，URI）来标识。HTTP是一个应用层协议，由请求和响应构成，是一个标准的客户端服务器模型。其具有如下特点：\n\n* 支持客户/服务器模式。\n\n* 简单快速：客户向服务器请求服务时，只需传送请求方法和路径。请求方法常用的有GET、HEAD、POST。每种方法规定了客户与服务器联系的类型不同。由于HTTP协议简单，使得HTTP服务器的程序规模小，因而通信速度很快。\n\n* 灵活：HTTP允许传输任意类型的数据对象。正在传输的类型由Content-Type加以标记。\n\n* 无连接：无连接的含义是限制每次连接只处理一个请求。服务器处理完客户的请求，并收到客户的应答后，即断开连接。采用这种方式可以节省传输时间。\n\n* 无状态：HTTP协议是无状态协议。无状态是指协议对于事务处理没有记忆能力。缺少状态意味着如果后续处理需要前面的信息，则它必须重传，这样可能导致每次连接传送的数据量增大。另一方面，在服务器不需要先前信息时它的应答就较快\n\nPS：尽管TCP/IP协议是互联网上最流行的应用，HTTP协议中，并没有规定必须使用它或它支持的层。事实上，HTTP可以在任何互联网协议上，或其他网络上实现。HTTP假定其下层协议提供可靠的传输。因此，任何能够提供这种保证的协议都可以被其使用。因此也就是其在TCP/IP协议族使用TCP作为其传输层。\n\n***\n\n### 工作流程\nHTTP协议的通信过程永远是客户端发起请求(request)，服务器回送响应(respone)，如下图所示：\n\n![](image/5657919_2.jpg)\n\n一个完整的HTTP操作称为一个事务，其流程可分为四步：\n\n* 建立连接(TCP三次握手)\n\n* 客户端发送一个请求报文给服务器\n\n* 服务器响应对应信息\n\n* 客户端接收信息，然后断开连接\n\n***\n\n### 请求和响应详解\n\n#### 请求报文\n\n* 请求行：由请求方法、URL和HTTP版本组成\n\n\teg：GET /index.html HTTP/1.1\n\n\t* 请求方法\n\n\t\t* GET：请求获取URI所标识的资源\n\n\t\t* HEAD：请求获取URI所标识的资源，但不传回资源的文本部分\n\n\t\t* POST：向指定URI资源提交数据，请求服务器进行处理\n\n\t\t* PUT：向指定URI资源上传其最新内容\n\n\t\t* DELETE：请求服务器删除URI所标识的资源\n\n\t\t* TRACE：回显服务器收到的请求，主要用于测试或诊断\n\n\t\t* OPTIONS：请求URI资源所支持的HTTP请求方法\n\n\t\t* CONNECT：HTTP/1.1协议中预留给能够将连接改为管道方式的代理服务器。通常用于SSL加密服务器的链接\n\n\t* URL\n\n\t\t请求的资源路径\n\n\t* 协议版本\n\n\t\t现在大部分为HTTP/1.0 和 HTTP/1.1\n\n\n* 请求头部\n\n\teg：host:www.google.com\n\n\thost为必选，其他都为可选参数\n\n* 空行\n\n* 消息体\n\n\t请求所带的文本\n\n#### 响应报文\n\n* 状态行：由协议版本、状态码和描述信息组成\n\n\teg：HTTP/1.1 200 OK\n\n\t* 协议版本\n\n\t* 状态码：用于告诉客户端，服务器是否产生预期的响应\n\n\t\t* 1XX：提示信息，表示请求已被成功接收，继续处理\n\n\t\t* 2XX：成功，表示请求已被成功接收，理解\n\n\t\t* 3XX：重定向，要完成请求必须进行更进一步的处理\n\n\t\t* 4XX：客户端错误，请求有语法错误或请求无法实现\n\n\t\t* 5XX：服务器端错误，服务器未能实现合法的请求\n\n\t* 描述信息\n\n* 响应头部\n\n* 空行\n\n* 消息体\n\n#### 一个例子\n\n访问codecc.xyz首页\n\n* Request，首行为请求行，其余为请求头部\n\n![](image/20160531232545.png)\n\n* Respone，首行为响应状态行，空行前为响应头部，其余为响应数据\n\n![](image/20160531232617.png)\n\n\n***\n\n### 参考\n\n[https://en.wikipedia.org/wiki/Hypertext_Transfer_Protocol](https://en.wikipedia.org/wiki/Hypertext_Transfer_Protocol)\n\n","slug":"http","published":1,"updated":"2016-05-31T15:38:19.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cixwmkix40005mo8zfbvj617d","content":"<h3 id=\"写在前面\"><a href=\"#写在前面\" class=\"headerlink\" title=\"写在前面\"></a>写在前面</h3><p>如今网络已经无处不在，人们通过网络获取浏览各种信息，其中，大部分都是通过浏览器访问各种网页来获取我们想要的信息，那么浏览器与网页(服务端)究竟是如何通信的呢？这就得从HTTP协议说起了，浏览器获取网页信息都是基于HTTP协议来处理的。</p>\n<hr>\n<h3 id=\"概念\"><a href=\"#概念\" class=\"headerlink\" title=\"概念\"></a>概念</h3><p>HTTP（HyperText Transfer Protocol，超文本传输协议）是互联网上应用最为广泛的一种网络协议。设计HTTP最初的目的是为了提供一种发布和接收HTML页面的方法。通过HTTP或者HTTPS协议请求的资源由统一资源标识符（Uniform Resource Identifiers，URI）来标识。HTTP是一个应用层协议，由请求和响应构成，是一个标准的客户端服务器模型。其具有如下特点：</p>\n<ul>\n<li><p>支持客户/服务器模式。</p>\n</li>\n<li><p>简单快速：客户向服务器请求服务时，只需传送请求方法和路径。请求方法常用的有GET、HEAD、POST。每种方法规定了客户与服务器联系的类型不同。由于HTTP协议简单，使得HTTP服务器的程序规模小，因而通信速度很快。</p>\n</li>\n<li><p>灵活：HTTP允许传输任意类型的数据对象。正在传输的类型由Content-Type加以标记。</p>\n</li>\n<li><p>无连接：无连接的含义是限制每次连接只处理一个请求。服务器处理完客户的请求，并收到客户的应答后，即断开连接。采用这种方式可以节省传输时间。</p>\n</li>\n<li><p>无状态：HTTP协议是无状态协议。无状态是指协议对于事务处理没有记忆能力。缺少状态意味着如果后续处理需要前面的信息，则它必须重传，这样可能导致每次连接传送的数据量增大。另一方面，在服务器不需要先前信息时它的应答就较快</p>\n</li>\n</ul>\n<p>PS：尽管TCP/IP协议是互联网上最流行的应用，HTTP协议中，并没有规定必须使用它或它支持的层。事实上，HTTP可以在任何互联网协议上，或其他网络上实现。HTTP假定其下层协议提供可靠的传输。因此，任何能够提供这种保证的协议都可以被其使用。因此也就是其在TCP/IP协议族使用TCP作为其传输层。</p>\n<hr>\n<h3 id=\"工作流程\"><a href=\"#工作流程\" class=\"headerlink\" title=\"工作流程\"></a>工作流程</h3><p>HTTP协议的通信过程永远是客户端发起请求(request)，服务器回送响应(respone)，如下图所示：</p>\n<p><img src=\"image/5657919_2.jpg\" alt=\"\"></p>\n<p>一个完整的HTTP操作称为一个事务，其流程可分为四步：</p>\n<ul>\n<li><p>建立连接(TCP三次握手)</p>\n</li>\n<li><p>客户端发送一个请求报文给服务器</p>\n</li>\n<li><p>服务器响应对应信息</p>\n</li>\n<li><p>客户端接收信息，然后断开连接</p>\n</li>\n</ul>\n<hr>\n<h3 id=\"请求和响应详解\"><a href=\"#请求和响应详解\" class=\"headerlink\" title=\"请求和响应详解\"></a>请求和响应详解</h3><h4 id=\"请求报文\"><a href=\"#请求报文\" class=\"headerlink\" title=\"请求报文\"></a>请求报文</h4><ul>\n<li><p>请求行：由请求方法、URL和HTTP版本组成</p>\n<p>  eg：GET /index.html HTTP/1.1</p>\n<ul>\n<li><p>请求方法</p>\n<ul>\n<li><p>GET：请求获取URI所标识的资源</p>\n</li>\n<li><p>HEAD：请求获取URI所标识的资源，但不传回资源的文本部分</p>\n</li>\n<li><p>POST：向指定URI资源提交数据，请求服务器进行处理</p>\n</li>\n<li><p>PUT：向指定URI资源上传其最新内容</p>\n</li>\n<li><p>DELETE：请求服务器删除URI所标识的资源</p>\n</li>\n<li><p>TRACE：回显服务器收到的请求，主要用于测试或诊断</p>\n</li>\n<li><p>OPTIONS：请求URI资源所支持的HTTP请求方法</p>\n</li>\n<li><p>CONNECT：HTTP/1.1协议中预留给能够将连接改为管道方式的代理服务器。通常用于SSL加密服务器的链接</p>\n</li>\n</ul>\n</li>\n<li><p>URL</p>\n<p>  请求的资源路径</p>\n</li>\n<li><p>协议版本</p>\n<p>  现在大部分为HTTP/1.0 和 HTTP/1.1</p>\n</li>\n</ul>\n</li>\n</ul>\n<ul>\n<li><p>请求头部</p>\n<p>  eg：host:www.google.com</p>\n<p>  host为必选，其他都为可选参数</p>\n</li>\n<li><p>空行</p>\n</li>\n<li><p>消息体</p>\n<p>  请求所带的文本</p>\n</li>\n</ul>\n<h4 id=\"响应报文\"><a href=\"#响应报文\" class=\"headerlink\" title=\"响应报文\"></a>响应报文</h4><ul>\n<li><p>状态行：由协议版本、状态码和描述信息组成</p>\n<p>  eg：HTTP/1.1 200 OK</p>\n<ul>\n<li><p>协议版本</p>\n</li>\n<li><p>状态码：用于告诉客户端，服务器是否产生预期的响应</p>\n<ul>\n<li><p>1XX：提示信息，表示请求已被成功接收，继续处理</p>\n</li>\n<li><p>2XX：成功，表示请求已被成功接收，理解</p>\n</li>\n<li><p>3XX：重定向，要完成请求必须进行更进一步的处理</p>\n</li>\n<li><p>4XX：客户端错误，请求有语法错误或请求无法实现</p>\n</li>\n<li><p>5XX：服务器端错误，服务器未能实现合法的请求</p>\n</li>\n</ul>\n</li>\n<li><p>描述信息</p>\n</li>\n</ul>\n</li>\n<li><p>响应头部</p>\n</li>\n<li><p>空行</p>\n</li>\n<li><p>消息体</p>\n</li>\n</ul>\n<h4 id=\"一个例子\"><a href=\"#一个例子\" class=\"headerlink\" title=\"一个例子\"></a>一个例子</h4><p>访问codecc.xyz首页</p>\n<ul>\n<li>Request，首行为请求行，其余为请求头部</li>\n</ul>\n<p><img src=\"image/20160531232545.png\" alt=\"\"></p>\n<ul>\n<li>Respone，首行为响应状态行，空行前为响应头部，其余为响应数据</li>\n</ul>\n<p><img src=\"image/20160531232617.png\" alt=\"\"></p>\n<hr>\n<h3 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h3><p><a href=\"https://en.wikipedia.org/wiki/Hypertext_Transfer_Protocol\" target=\"_blank\" rel=\"external\">https://en.wikipedia.org/wiki/Hypertext_Transfer_Protocol</a></p>\n","excerpt":"","more":"<h3 id=\"写在前面\"><a href=\"#写在前面\" class=\"headerlink\" title=\"写在前面\"></a>写在前面</h3><p>如今网络已经无处不在，人们通过网络获取浏览各种信息，其中，大部分都是通过浏览器访问各种网页来获取我们想要的信息，那么浏览器与网页(服务端)究竟是如何通信的呢？这就得从HTTP协议说起了，浏览器获取网页信息都是基于HTTP协议来处理的。</p>\n<hr>\n<h3 id=\"概念\"><a href=\"#概念\" class=\"headerlink\" title=\"概念\"></a>概念</h3><p>HTTP（HyperText Transfer Protocol，超文本传输协议）是互联网上应用最为广泛的一种网络协议。设计HTTP最初的目的是为了提供一种发布和接收HTML页面的方法。通过HTTP或者HTTPS协议请求的资源由统一资源标识符（Uniform Resource Identifiers，URI）来标识。HTTP是一个应用层协议，由请求和响应构成，是一个标准的客户端服务器模型。其具有如下特点：</p>\n<ul>\n<li><p>支持客户/服务器模式。</p>\n</li>\n<li><p>简单快速：客户向服务器请求服务时，只需传送请求方法和路径。请求方法常用的有GET、HEAD、POST。每种方法规定了客户与服务器联系的类型不同。由于HTTP协议简单，使得HTTP服务器的程序规模小，因而通信速度很快。</p>\n</li>\n<li><p>灵活：HTTP允许传输任意类型的数据对象。正在传输的类型由Content-Type加以标记。</p>\n</li>\n<li><p>无连接：无连接的含义是限制每次连接只处理一个请求。服务器处理完客户的请求，并收到客户的应答后，即断开连接。采用这种方式可以节省传输时间。</p>\n</li>\n<li><p>无状态：HTTP协议是无状态协议。无状态是指协议对于事务处理没有记忆能力。缺少状态意味着如果后续处理需要前面的信息，则它必须重传，这样可能导致每次连接传送的数据量增大。另一方面，在服务器不需要先前信息时它的应答就较快</p>\n</li>\n</ul>\n<p>PS：尽管TCP/IP协议是互联网上最流行的应用，HTTP协议中，并没有规定必须使用它或它支持的层。事实上，HTTP可以在任何互联网协议上，或其他网络上实现。HTTP假定其下层协议提供可靠的传输。因此，任何能够提供这种保证的协议都可以被其使用。因此也就是其在TCP/IP协议族使用TCP作为其传输层。</p>\n<hr>\n<h3 id=\"工作流程\"><a href=\"#工作流程\" class=\"headerlink\" title=\"工作流程\"></a>工作流程</h3><p>HTTP协议的通信过程永远是客户端发起请求(request)，服务器回送响应(respone)，如下图所示：</p>\n<p><img src=\"image/5657919_2.jpg\" alt=\"\"></p>\n<p>一个完整的HTTP操作称为一个事务，其流程可分为四步：</p>\n<ul>\n<li><p>建立连接(TCP三次握手)</p>\n</li>\n<li><p>客户端发送一个请求报文给服务器</p>\n</li>\n<li><p>服务器响应对应信息</p>\n</li>\n<li><p>客户端接收信息，然后断开连接</p>\n</li>\n</ul>\n<hr>\n<h3 id=\"请求和响应详解\"><a href=\"#请求和响应详解\" class=\"headerlink\" title=\"请求和响应详解\"></a>请求和响应详解</h3><h4 id=\"请求报文\"><a href=\"#请求报文\" class=\"headerlink\" title=\"请求报文\"></a>请求报文</h4><ul>\n<li><p>请求行：由请求方法、URL和HTTP版本组成</p>\n<p>  eg：GET /index.html HTTP/1.1</p>\n<ul>\n<li><p>请求方法</p>\n<ul>\n<li><p>GET：请求获取URI所标识的资源</p>\n</li>\n<li><p>HEAD：请求获取URI所标识的资源，但不传回资源的文本部分</p>\n</li>\n<li><p>POST：向指定URI资源提交数据，请求服务器进行处理</p>\n</li>\n<li><p>PUT：向指定URI资源上传其最新内容</p>\n</li>\n<li><p>DELETE：请求服务器删除URI所标识的资源</p>\n</li>\n<li><p>TRACE：回显服务器收到的请求，主要用于测试或诊断</p>\n</li>\n<li><p>OPTIONS：请求URI资源所支持的HTTP请求方法</p>\n</li>\n<li><p>CONNECT：HTTP/1.1协议中预留给能够将连接改为管道方式的代理服务器。通常用于SSL加密服务器的链接</p>\n</li>\n</ul>\n</li>\n<li><p>URL</p>\n<p>  请求的资源路径</p>\n</li>\n<li><p>协议版本</p>\n<p>  现在大部分为HTTP/1.0 和 HTTP/1.1</p>\n</li>\n</ul>\n</li>\n</ul>\n<ul>\n<li><p>请求头部</p>\n<p>  eg：host:www.google.com</p>\n<p>  host为必选，其他都为可选参数</p>\n</li>\n<li><p>空行</p>\n</li>\n<li><p>消息体</p>\n<p>  请求所带的文本</p>\n</li>\n</ul>\n<h4 id=\"响应报文\"><a href=\"#响应报文\" class=\"headerlink\" title=\"响应报文\"></a>响应报文</h4><ul>\n<li><p>状态行：由协议版本、状态码和描述信息组成</p>\n<p>  eg：HTTP/1.1 200 OK</p>\n<ul>\n<li><p>协议版本</p>\n</li>\n<li><p>状态码：用于告诉客户端，服务器是否产生预期的响应</p>\n<ul>\n<li><p>1XX：提示信息，表示请求已被成功接收，继续处理</p>\n</li>\n<li><p>2XX：成功，表示请求已被成功接收，理解</p>\n</li>\n<li><p>3XX：重定向，要完成请求必须进行更进一步的处理</p>\n</li>\n<li><p>4XX：客户端错误，请求有语法错误或请求无法实现</p>\n</li>\n<li><p>5XX：服务器端错误，服务器未能实现合法的请求</p>\n</li>\n</ul>\n</li>\n<li><p>描述信息</p>\n</li>\n</ul>\n</li>\n<li><p>响应头部</p>\n</li>\n<li><p>空行</p>\n</li>\n<li><p>消息体</p>\n</li>\n</ul>\n<h4 id=\"一个例子\"><a href=\"#一个例子\" class=\"headerlink\" title=\"一个例子\"></a>一个例子</h4><p>访问codecc.xyz首页</p>\n<ul>\n<li>Request，首行为请求行，其余为请求头部</li>\n</ul>\n<p><img src=\"image/20160531232545.png\" alt=\"\"></p>\n<ul>\n<li>Respone，首行为响应状态行，空行前为响应头部，其余为响应数据</li>\n</ul>\n<p><img src=\"image/20160531232617.png\" alt=\"\"></p>\n<hr>\n<h3 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h3><p><a href=\"https://en.wikipedia.org/wiki/Hypertext_Transfer_Protocol\">https://en.wikipedia.org/wiki/Hypertext_Transfer_Protocol</a></p>\n"},{"title":"简单理解计算机通信","date":"2016-05-17T16:36:31.000Z","_content":"### 写在前面：\n在计算机刚出现的时候，只能在本机进行一些运算处理，想将一台计算机中的数据转移到另一台计算机中，需要通过外部存储介质来传输，例如磁带、软盘。而网络技术的出现，使得计算机间可以通过一些传输介质(网线、光纤等)，实现快速的数据传输和信息交互。如今，网络已无处不在，那么，计算机之间究竟是如何通信的呢？下面会通过一些基础的网络知识来简单理解计算机之间的通信过程。\n\n***\n\n### 网络通信模型：\n网络通信模型是一种概念模型和框架，旨在使各种计算机在世界范围内互连为网络。其中有OSI七层模型和TCP/IP四层模型，现在大部分网络通信都是以TCP/IP四层模型为基础的。它们的对应层次如下图：\n\n![](image/607348-20160312201154210-2019193861.jpg)\n\n\n- OSI有七层：从上到下依次为应用层、表示层、会话层、传输层、网络层、数据链路层、物理层\n\n- TCP/IP有四层：从上到下依次为应用层、传输层、互连层(网络层)、网络接口层(链路层)。\n\n因为目前大部分TCP/IP模型，所以就以TCP/IP为例，我们来理解下数据间的通信，下图是两台计算机通信的数据的传输过程：\n\n![](image/607348-20160312202413054-848303498.png)\n\n***\n\n### 数据封装：\n\n在详细了解TCP/IP每一层各自的作用前，先要理解数据封装的概念，数据在通过网络接口传送出去前，会经过层层封装，每层都会在前面的基础上添加自己的信息，在传输到对方计算机后，又会被层层进行解封装后得到最后的数据。其过程如下图所示：\n\n![](image/607348-20160312203516679-1695630421.gif)\n\n***\n\n### TCP/IP参考模型：\n\nTCP/IP参考模型是一个抽象的分层模型，这个模型中，所有的TCP/IP系列网络协议都被归类到4个抽象的\"层\"中。每一抽象层创建在低一层提供的服务上，并且为高一层提供服务。 完成一些特定的任务需要众多的协议协同工作，这些协议分布在参考模型的不同层中的，因此有时称它们为一个协议栈。\n\n##### 应用层(Application Layer)：\n- 该层包括所有和应用程序协同工作，利用基础网络交换应用程序专用的数据的协议。 应用层是大多数普通与网络相关的程序为了通过网络与其他程序通信所使用的层。这个层的处理过程是应用特有的；数据从网络相关的程序以这种应用内部使用的格式进行传送，然后被编码成标准协议的格式。\n- 常见的应用层协议有HTTP、FTP、DNS、SNMP(基于UDP)\n\n \n\n##### 传输层(Transport Layer)：\n- 主要为两台主机上的应用程序提供端到端的通信，包括TCP协议（传输控制协议）和UDP（用户数据报协议）。\n端口号由此层提供，且在一台计算机中具有唯一性。\n- UDP为应用层提供一种非常简单的服务。它只是把称作数据报的分组从一台主机发送到另一台主机，但并不保证该数据报能到达另一端。任何必需的可靠性必须由应用层来提供。\n- TCP为两台主机提供高可靠性的数据通信。它所做的工作包括把应用程序交给它的数据分成合适的小块交给下面的网络层，确认接收到的分组，设置发送最后确认分组的超时时钟等,由于运输层提供了高可靠性的端到端的通信，因此应用层可以忽略所有这些细节。\n- 因为TCP是一种面向连接的协议，所以两个在使用TCP的应用在彼此交换数据前必须先建立一个TCP连接，也就是有名的TCP三次握手，如下图所示：\n\n![](image/607348-20160312211241132-1517700594.png)\n\n\n建立连接协议过程：（TCP三次握手协议）\n- 客户端发送一个SYN段指明客户打算连接的服务器的端口，以及初始序号（ISN）。\n- 服务器发回包含服务器的初始序号的SYN报文段作为应答。同时，将确认序号设置为客户的ISN加1以对客户的SYN报文段进行确认。一个SYN占用一个序号。\n- 客户将确认序号设置为服务器的ISN加1以对服务器的SYN报文段进行确认。\n \n\n#### 网络层(Internet Layer)：\n- 处理分组在网络中的活动。网络层协议包括IP协议（网际协议），ICPM协议（Internet互联网控制报文协议），以及IGMP协议（Internet组管理协议），其中的IP协议身是TCP/IP协议簇中最为核心的协议。IP提供的是不可靠、无连接的数据包传送服务。\n\n- IP地址：\n- - 讲到IP协议就应该讲讲IP地址，IP地址是分配给网络上使用IP协议的设备的数字标签，有IPv4和IPv6两大类，我们目前使用的大部分还是IPv4的地址，以下简称IP地址，IP地址由32位二进制数组成，为便于使用，常以XXX.XXX.XXX.XXX形式表示。IP地址由两个字段组成：网络号(net-id)和主机号(host-id)，为方便IP地址管理，IP地址被分为五类，如下图：\n\n![](image/607348-20160312213647569-286300397.gif)\n\n- - 其中A、B、C类地址为单播（unicast）地址；D类地址为组播（multicast）地址；E类地址为保留地址，以备将来的特殊用途。目前大量使用中的IP地址属于A、B、C三类地址。\n\n- - - A类地址范围：0.0.0.0～127.255.255.255\n\n- - - B类地址范围：128.0.0.0～191.255.255.255\n\n- - - C类地址范围：192.0.0.0～223.255.255.255\n\n- - - 私网地址范围：10.0.0.0～10.255.255.255 ，172.16.0.0～172.31.255.255 ，192.168.0.0～192.168.255.255，私网地址只能在本地局域网中使用，不在公网中使用。\n\n- 子网和掩码：\n\n- - 传统的IP地址分配方式，对IP地址的浪费非常严重。为了充分利用已有的IP地址，人们提出了掩码（mask）和子网（subnet）的概念。\n\n- - 掩码是一个与IP地址对应的32位数字，这些数字中一些为1，另外一些为0。原则上这些1和0可以任意组合，不过一般在设计掩码时，网络号码和子网号码的比特值为1，主机号码的比特值为0。掩码可以把IP地址分为两个部分：子网地址和主机地址。IP地址与掩码中为1的位对应的部分为子网地址，其他的位对应的部分则是主机地址。当不进行子网划分时，子网掩码即为默认值，此时子网掩码中“1”的长度就是网络号码的长度。即A类地址对应的掩码默认值为255.0.0.0；B类地址的掩码默认值为255.255.0.0；C类地址掩码的默认值为255.255.255.0。\n\n- IP路由选择：\n\n- - 概念：若目的主机与源主机在同一共享网络内，IP数据报直接送达目的主机，否则，主机把数据报发往默认的路由器上，由路由器进行数据报转发。\n\n#### 链路层(Link Layer)：\n- 通常包括设备驱动程序和网络接口卡。处理与传输媒介的物理接口细节。主要协议有：ARP协议和RARP协议\n- MAC地址 ：数据链路层具有自己的寻址机制(48bit地址)，当一台主机把以太网数据帧发送到位于同一局域网上得另一台主机时，是根据48bit的以太网地址来确定目的接口的。\n\n- 而ARP和RARP协议是为IP地址和MAC地址提供映射的：\n\n![](image/607348-20160312214932366-1742109445.png)\n\n***\n \n#### 使用：\n- 我们在判断两台主机应用之间的网络是否正常，通常是判断到对方IP和端口是否能通。\n\n- 常用网络判断命令：\n\n- Windows：\n\n- - `ping $IP：最常用的判断网络是否可达的命令。`\n\n![](image/607348-20160312220145210-443719950.png)\n\n \n\n- - `tracert $IP：跟踪路由，即打印出本机到到目的IP，所经过路由。`\n\n![](image/607348-20160312220158054-2124916124.png)\n\n\n\n- - `telnet $IP $port：可以测试某个IP和应用端口是否能通。`\n\n- - `netstat：查看本机监听和建立连接的端口。`\n\n![](image/607348-20160312220227866-1298265423.png)\n\n\n- Linux：\n \n- - `ping $IP：最常用的判断网络是否可达的命令`\n\n- - `traceroute $IP：跟踪路由，即打印出本机到到目的IP，所经过路由。`\n\n- - `或者使用mtr -ni 0.1 $IP，可以实现以上两个共同的效果`\n\n![](image/607348-20160312221617569-1834112731.png)\n\n\n- - `nc -vz $IP $PORT：测试到目的IP的应用端口是否能通。`\n\n![](image/607348-20160312221825819-331058027.png)\n\n\n- - `netstat -tupln：可以查看本机目前监听的端口`\n\n![](image/607348-20160312221946585-1872997601.png)\n \n***\n#### 参考：\n\n[https://en.wikipedia.org/wiki/Internet_protocol_suite](https://en.wikipedia.org/wiki/Internet_protocol_suite)\n\n[《TCP/IP详解卷1:协议》]()\n\n ","source":"_posts/networkcomm.md","raw":"---\ntitle: 简单理解计算机通信\ndate: 2016-05-18 00:36:31\ntags: network\ncategory: technology\n---\n### 写在前面：\n在计算机刚出现的时候，只能在本机进行一些运算处理，想将一台计算机中的数据转移到另一台计算机中，需要通过外部存储介质来传输，例如磁带、软盘。而网络技术的出现，使得计算机间可以通过一些传输介质(网线、光纤等)，实现快速的数据传输和信息交互。如今，网络已无处不在，那么，计算机之间究竟是如何通信的呢？下面会通过一些基础的网络知识来简单理解计算机之间的通信过程。\n\n***\n\n### 网络通信模型：\n网络通信模型是一种概念模型和框架，旨在使各种计算机在世界范围内互连为网络。其中有OSI七层模型和TCP/IP四层模型，现在大部分网络通信都是以TCP/IP四层模型为基础的。它们的对应层次如下图：\n\n![](image/607348-20160312201154210-2019193861.jpg)\n\n\n- OSI有七层：从上到下依次为应用层、表示层、会话层、传输层、网络层、数据链路层、物理层\n\n- TCP/IP有四层：从上到下依次为应用层、传输层、互连层(网络层)、网络接口层(链路层)。\n\n因为目前大部分TCP/IP模型，所以就以TCP/IP为例，我们来理解下数据间的通信，下图是两台计算机通信的数据的传输过程：\n\n![](image/607348-20160312202413054-848303498.png)\n\n***\n\n### 数据封装：\n\n在详细了解TCP/IP每一层各自的作用前，先要理解数据封装的概念，数据在通过网络接口传送出去前，会经过层层封装，每层都会在前面的基础上添加自己的信息，在传输到对方计算机后，又会被层层进行解封装后得到最后的数据。其过程如下图所示：\n\n![](image/607348-20160312203516679-1695630421.gif)\n\n***\n\n### TCP/IP参考模型：\n\nTCP/IP参考模型是一个抽象的分层模型，这个模型中，所有的TCP/IP系列网络协议都被归类到4个抽象的\"层\"中。每一抽象层创建在低一层提供的服务上，并且为高一层提供服务。 完成一些特定的任务需要众多的协议协同工作，这些协议分布在参考模型的不同层中的，因此有时称它们为一个协议栈。\n\n##### 应用层(Application Layer)：\n- 该层包括所有和应用程序协同工作，利用基础网络交换应用程序专用的数据的协议。 应用层是大多数普通与网络相关的程序为了通过网络与其他程序通信所使用的层。这个层的处理过程是应用特有的；数据从网络相关的程序以这种应用内部使用的格式进行传送，然后被编码成标准协议的格式。\n- 常见的应用层协议有HTTP、FTP、DNS、SNMP(基于UDP)\n\n \n\n##### 传输层(Transport Layer)：\n- 主要为两台主机上的应用程序提供端到端的通信，包括TCP协议（传输控制协议）和UDP（用户数据报协议）。\n端口号由此层提供，且在一台计算机中具有唯一性。\n- UDP为应用层提供一种非常简单的服务。它只是把称作数据报的分组从一台主机发送到另一台主机，但并不保证该数据报能到达另一端。任何必需的可靠性必须由应用层来提供。\n- TCP为两台主机提供高可靠性的数据通信。它所做的工作包括把应用程序交给它的数据分成合适的小块交给下面的网络层，确认接收到的分组，设置发送最后确认分组的超时时钟等,由于运输层提供了高可靠性的端到端的通信，因此应用层可以忽略所有这些细节。\n- 因为TCP是一种面向连接的协议，所以两个在使用TCP的应用在彼此交换数据前必须先建立一个TCP连接，也就是有名的TCP三次握手，如下图所示：\n\n![](image/607348-20160312211241132-1517700594.png)\n\n\n建立连接协议过程：（TCP三次握手协议）\n- 客户端发送一个SYN段指明客户打算连接的服务器的端口，以及初始序号（ISN）。\n- 服务器发回包含服务器的初始序号的SYN报文段作为应答。同时，将确认序号设置为客户的ISN加1以对客户的SYN报文段进行确认。一个SYN占用一个序号。\n- 客户将确认序号设置为服务器的ISN加1以对服务器的SYN报文段进行确认。\n \n\n#### 网络层(Internet Layer)：\n- 处理分组在网络中的活动。网络层协议包括IP协议（网际协议），ICPM协议（Internet互联网控制报文协议），以及IGMP协议（Internet组管理协议），其中的IP协议身是TCP/IP协议簇中最为核心的协议。IP提供的是不可靠、无连接的数据包传送服务。\n\n- IP地址：\n- - 讲到IP协议就应该讲讲IP地址，IP地址是分配给网络上使用IP协议的设备的数字标签，有IPv4和IPv6两大类，我们目前使用的大部分还是IPv4的地址，以下简称IP地址，IP地址由32位二进制数组成，为便于使用，常以XXX.XXX.XXX.XXX形式表示。IP地址由两个字段组成：网络号(net-id)和主机号(host-id)，为方便IP地址管理，IP地址被分为五类，如下图：\n\n![](image/607348-20160312213647569-286300397.gif)\n\n- - 其中A、B、C类地址为单播（unicast）地址；D类地址为组播（multicast）地址；E类地址为保留地址，以备将来的特殊用途。目前大量使用中的IP地址属于A、B、C三类地址。\n\n- - - A类地址范围：0.0.0.0～127.255.255.255\n\n- - - B类地址范围：128.0.0.0～191.255.255.255\n\n- - - C类地址范围：192.0.0.0～223.255.255.255\n\n- - - 私网地址范围：10.0.0.0～10.255.255.255 ，172.16.0.0～172.31.255.255 ，192.168.0.0～192.168.255.255，私网地址只能在本地局域网中使用，不在公网中使用。\n\n- 子网和掩码：\n\n- - 传统的IP地址分配方式，对IP地址的浪费非常严重。为了充分利用已有的IP地址，人们提出了掩码（mask）和子网（subnet）的概念。\n\n- - 掩码是一个与IP地址对应的32位数字，这些数字中一些为1，另外一些为0。原则上这些1和0可以任意组合，不过一般在设计掩码时，网络号码和子网号码的比特值为1，主机号码的比特值为0。掩码可以把IP地址分为两个部分：子网地址和主机地址。IP地址与掩码中为1的位对应的部分为子网地址，其他的位对应的部分则是主机地址。当不进行子网划分时，子网掩码即为默认值，此时子网掩码中“1”的长度就是网络号码的长度。即A类地址对应的掩码默认值为255.0.0.0；B类地址的掩码默认值为255.255.0.0；C类地址掩码的默认值为255.255.255.0。\n\n- IP路由选择：\n\n- - 概念：若目的主机与源主机在同一共享网络内，IP数据报直接送达目的主机，否则，主机把数据报发往默认的路由器上，由路由器进行数据报转发。\n\n#### 链路层(Link Layer)：\n- 通常包括设备驱动程序和网络接口卡。处理与传输媒介的物理接口细节。主要协议有：ARP协议和RARP协议\n- MAC地址 ：数据链路层具有自己的寻址机制(48bit地址)，当一台主机把以太网数据帧发送到位于同一局域网上得另一台主机时，是根据48bit的以太网地址来确定目的接口的。\n\n- 而ARP和RARP协议是为IP地址和MAC地址提供映射的：\n\n![](image/607348-20160312214932366-1742109445.png)\n\n***\n \n#### 使用：\n- 我们在判断两台主机应用之间的网络是否正常，通常是判断到对方IP和端口是否能通。\n\n- 常用网络判断命令：\n\n- Windows：\n\n- - `ping $IP：最常用的判断网络是否可达的命令。`\n\n![](image/607348-20160312220145210-443719950.png)\n\n \n\n- - `tracert $IP：跟踪路由，即打印出本机到到目的IP，所经过路由。`\n\n![](image/607348-20160312220158054-2124916124.png)\n\n\n\n- - `telnet $IP $port：可以测试某个IP和应用端口是否能通。`\n\n- - `netstat：查看本机监听和建立连接的端口。`\n\n![](image/607348-20160312220227866-1298265423.png)\n\n\n- Linux：\n \n- - `ping $IP：最常用的判断网络是否可达的命令`\n\n- - `traceroute $IP：跟踪路由，即打印出本机到到目的IP，所经过路由。`\n\n- - `或者使用mtr -ni 0.1 $IP，可以实现以上两个共同的效果`\n\n![](image/607348-20160312221617569-1834112731.png)\n\n\n- - `nc -vz $IP $PORT：测试到目的IP的应用端口是否能通。`\n\n![](image/607348-20160312221825819-331058027.png)\n\n\n- - `netstat -tupln：可以查看本机目前监听的端口`\n\n![](image/607348-20160312221946585-1872997601.png)\n \n***\n#### 参考：\n\n[https://en.wikipedia.org/wiki/Internet_protocol_suite](https://en.wikipedia.org/wiki/Internet_protocol_suite)\n\n[《TCP/IP详解卷1:协议》]()\n\n ","slug":"networkcomm","published":1,"updated":"2016-05-18T17:15:09.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cixwmkix60006mo8zdfub24us","content":"<h3 id=\"写在前面：\"><a href=\"#写在前面：\" class=\"headerlink\" title=\"写在前面：\"></a>写在前面：</h3><p>在计算机刚出现的时候，只能在本机进行一些运算处理，想将一台计算机中的数据转移到另一台计算机中，需要通过外部存储介质来传输，例如磁带、软盘。而网络技术的出现，使得计算机间可以通过一些传输介质(网线、光纤等)，实现快速的数据传输和信息交互。如今，网络已无处不在，那么，计算机之间究竟是如何通信的呢？下面会通过一些基础的网络知识来简单理解计算机之间的通信过程。</p>\n<hr>\n<h3 id=\"网络通信模型：\"><a href=\"#网络通信模型：\" class=\"headerlink\" title=\"网络通信模型：\"></a>网络通信模型：</h3><p>网络通信模型是一种概念模型和框架，旨在使各种计算机在世界范围内互连为网络。其中有OSI七层模型和TCP/IP四层模型，现在大部分网络通信都是以TCP/IP四层模型为基础的。它们的对应层次如下图：</p>\n<p><img src=\"image/607348-20160312201154210-2019193861.jpg\" alt=\"\"></p>\n<ul>\n<li><p>OSI有七层：从上到下依次为应用层、表示层、会话层、传输层、网络层、数据链路层、物理层</p>\n</li>\n<li><p>TCP/IP有四层：从上到下依次为应用层、传输层、互连层(网络层)、网络接口层(链路层)。</p>\n</li>\n</ul>\n<p>因为目前大部分TCP/IP模型，所以就以TCP/IP为例，我们来理解下数据间的通信，下图是两台计算机通信的数据的传输过程：</p>\n<p><img src=\"image/607348-20160312202413054-848303498.png\" alt=\"\"></p>\n<hr>\n<h3 id=\"数据封装：\"><a href=\"#数据封装：\" class=\"headerlink\" title=\"数据封装：\"></a>数据封装：</h3><p>在详细了解TCP/IP每一层各自的作用前，先要理解数据封装的概念，数据在通过网络接口传送出去前，会经过层层封装，每层都会在前面的基础上添加自己的信息，在传输到对方计算机后，又会被层层进行解封装后得到最后的数据。其过程如下图所示：</p>\n<p><img src=\"image/607348-20160312203516679-1695630421.gif\" alt=\"\"></p>\n<hr>\n<h3 id=\"TCP-IP参考模型：\"><a href=\"#TCP-IP参考模型：\" class=\"headerlink\" title=\"TCP/IP参考模型：\"></a>TCP/IP参考模型：</h3><p>TCP/IP参考模型是一个抽象的分层模型，这个模型中，所有的TCP/IP系列网络协议都被归类到4个抽象的”层”中。每一抽象层创建在低一层提供的服务上，并且为高一层提供服务。 完成一些特定的任务需要众多的协议协同工作，这些协议分布在参考模型的不同层中的，因此有时称它们为一个协议栈。</p>\n<h5 id=\"应用层-Application-Layer-：\"><a href=\"#应用层-Application-Layer-：\" class=\"headerlink\" title=\"应用层(Application Layer)：\"></a>应用层(Application Layer)：</h5><ul>\n<li>该层包括所有和应用程序协同工作，利用基础网络交换应用程序专用的数据的协议。 应用层是大多数普通与网络相关的程序为了通过网络与其他程序通信所使用的层。这个层的处理过程是应用特有的；数据从网络相关的程序以这种应用内部使用的格式进行传送，然后被编码成标准协议的格式。</li>\n<li>常见的应用层协议有HTTP、FTP、DNS、SNMP(基于UDP)</li>\n</ul>\n<h5 id=\"传输层-Transport-Layer-：\"><a href=\"#传输层-Transport-Layer-：\" class=\"headerlink\" title=\"传输层(Transport Layer)：\"></a>传输层(Transport Layer)：</h5><ul>\n<li>主要为两台主机上的应用程序提供端到端的通信，包括TCP协议（传输控制协议）和UDP（用户数据报协议）。<br>端口号由此层提供，且在一台计算机中具有唯一性。</li>\n<li>UDP为应用层提供一种非常简单的服务。它只是把称作数据报的分组从一台主机发送到另一台主机，但并不保证该数据报能到达另一端。任何必需的可靠性必须由应用层来提供。</li>\n<li>TCP为两台主机提供高可靠性的数据通信。它所做的工作包括把应用程序交给它的数据分成合适的小块交给下面的网络层，确认接收到的分组，设置发送最后确认分组的超时时钟等,由于运输层提供了高可靠性的端到端的通信，因此应用层可以忽略所有这些细节。</li>\n<li>因为TCP是一种面向连接的协议，所以两个在使用TCP的应用在彼此交换数据前必须先建立一个TCP连接，也就是有名的TCP三次握手，如下图所示：</li>\n</ul>\n<p><img src=\"image/607348-20160312211241132-1517700594.png\" alt=\"\"></p>\n<p>建立连接协议过程：（TCP三次握手协议）</p>\n<ul>\n<li>客户端发送一个SYN段指明客户打算连接的服务器的端口，以及初始序号（ISN）。</li>\n<li>服务器发回包含服务器的初始序号的SYN报文段作为应答。同时，将确认序号设置为客户的ISN加1以对客户的SYN报文段进行确认。一个SYN占用一个序号。</li>\n<li>客户将确认序号设置为服务器的ISN加1以对服务器的SYN报文段进行确认。</li>\n</ul>\n<h4 id=\"网络层-Internet-Layer-：\"><a href=\"#网络层-Internet-Layer-：\" class=\"headerlink\" title=\"网络层(Internet Layer)：\"></a>网络层(Internet Layer)：</h4><ul>\n<li><p>处理分组在网络中的活动。网络层协议包括IP协议（网际协议），ICPM协议（Internet互联网控制报文协议），以及IGMP协议（Internet组管理协议），其中的IP协议身是TCP/IP协议簇中最为核心的协议。IP提供的是不可靠、无连接的数据包传送服务。</p>\n</li>\n<li><p>IP地址：</p>\n</li>\n<li><ul>\n<li>讲到IP协议就应该讲讲IP地址，IP地址是分配给网络上使用IP协议的设备的数字标签，有IPv4和IPv6两大类，我们目前使用的大部分还是IPv4的地址，以下简称IP地址，IP地址由32位二进制数组成，为便于使用，常以XXX.XXX.XXX.XXX形式表示。IP地址由两个字段组成：网络号(net-id)和主机号(host-id)，为方便IP地址管理，IP地址被分为五类，如下图：</li>\n</ul>\n</li>\n</ul>\n<p><img src=\"image/607348-20160312213647569-286300397.gif\" alt=\"\"></p>\n<ul>\n<li><ul>\n<li>其中A、B、C类地址为单播（unicast）地址；D类地址为组播（multicast）地址；E类地址为保留地址，以备将来的特殊用途。目前大量使用中的IP地址属于A、B、C三类地址。</li>\n</ul>\n</li>\n<li><ul>\n<li><ul>\n<li>A类地址范围：0.0.0.0～127.255.255.255</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><ul>\n<li><ul>\n<li>B类地址范围：128.0.0.0～191.255.255.255</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><ul>\n<li><ul>\n<li>C类地址范围：192.0.0.0～223.255.255.255</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><ul>\n<li><ul>\n<li>私网地址范围：10.0.0.0～10.255.255.255 ，172.16.0.0～172.31.255.255 ，192.168.0.0～192.168.255.255，私网地址只能在本地局域网中使用，不在公网中使用。</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>子网和掩码：</p>\n</li>\n<li><ul>\n<li>传统的IP地址分配方式，对IP地址的浪费非常严重。为了充分利用已有的IP地址，人们提出了掩码（mask）和子网（subnet）的概念。</li>\n</ul>\n</li>\n<li><ul>\n<li>掩码是一个与IP地址对应的32位数字，这些数字中一些为1，另外一些为0。原则上这些1和0可以任意组合，不过一般在设计掩码时，网络号码和子网号码的比特值为1，主机号码的比特值为0。掩码可以把IP地址分为两个部分：子网地址和主机地址。IP地址与掩码中为1的位对应的部分为子网地址，其他的位对应的部分则是主机地址。当不进行子网划分时，子网掩码即为默认值，此时子网掩码中“1”的长度就是网络号码的长度。即A类地址对应的掩码默认值为255.0.0.0；B类地址的掩码默认值为255.255.0.0；C类地址掩码的默认值为255.255.255.0。</li>\n</ul>\n</li>\n<li><p>IP路由选择：</p>\n</li>\n<li><ul>\n<li>概念：若目的主机与源主机在同一共享网络内，IP数据报直接送达目的主机，否则，主机把数据报发往默认的路由器上，由路由器进行数据报转发。</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"链路层-Link-Layer-：\"><a href=\"#链路层-Link-Layer-：\" class=\"headerlink\" title=\"链路层(Link Layer)：\"></a>链路层(Link Layer)：</h4><ul>\n<li>通常包括设备驱动程序和网络接口卡。处理与传输媒介的物理接口细节。主要协议有：ARP协议和RARP协议</li>\n<li><p>MAC地址 ：数据链路层具有自己的寻址机制(48bit地址)，当一台主机把以太网数据帧发送到位于同一局域网上得另一台主机时，是根据48bit的以太网地址来确定目的接口的。</p>\n</li>\n<li><p>而ARP和RARP协议是为IP地址和MAC地址提供映射的：</p>\n</li>\n</ul>\n<p><img src=\"image/607348-20160312214932366-1742109445.png\" alt=\"\"></p>\n<hr>\n<h4 id=\"使用：\"><a href=\"#使用：\" class=\"headerlink\" title=\"使用：\"></a>使用：</h4><ul>\n<li><p>我们在判断两台主机应用之间的网络是否正常，通常是判断到对方IP和端口是否能通。</p>\n</li>\n<li><p>常用网络判断命令：</p>\n</li>\n<li><p>Windows：</p>\n</li>\n<li><ul>\n<li><code>ping $IP：最常用的判断网络是否可达的命令。</code></li>\n</ul>\n</li>\n</ul>\n<p><img src=\"image/607348-20160312220145210-443719950.png\" alt=\"\"></p>\n<ul>\n<li><ul>\n<li><code>tracert $IP：跟踪路由，即打印出本机到到目的IP，所经过路由。</code></li>\n</ul>\n</li>\n</ul>\n<p><img src=\"image/607348-20160312220158054-2124916124.png\" alt=\"\"></p>\n<ul>\n<li><ul>\n<li><code>telnet $IP $port：可以测试某个IP和应用端口是否能通。</code></li>\n</ul>\n</li>\n<li><ul>\n<li><code>netstat：查看本机监听和建立连接的端口。</code></li>\n</ul>\n</li>\n</ul>\n<p><img src=\"image/607348-20160312220227866-1298265423.png\" alt=\"\"></p>\n<ul>\n<li><p>Linux：</p>\n</li>\n<li><ul>\n<li><code>ping $IP：最常用的判断网络是否可达的命令</code></li>\n</ul>\n</li>\n<li><ul>\n<li><code>traceroute $IP：跟踪路由，即打印出本机到到目的IP，所经过路由。</code></li>\n</ul>\n</li>\n<li><ul>\n<li><code>或者使用mtr -ni 0.1 $IP，可以实现以上两个共同的效果</code></li>\n</ul>\n</li>\n</ul>\n<p><img src=\"image/607348-20160312221617569-1834112731.png\" alt=\"\"></p>\n<ul>\n<li><ul>\n<li><code>nc -vz $IP $PORT：测试到目的IP的应用端口是否能通。</code></li>\n</ul>\n</li>\n</ul>\n<p><img src=\"image/607348-20160312221825819-331058027.png\" alt=\"\"></p>\n<ul>\n<li><ul>\n<li><code>netstat -tupln：可以查看本机目前监听的端口</code></li>\n</ul>\n</li>\n</ul>\n<p><img src=\"image/607348-20160312221946585-1872997601.png\" alt=\"\"></p>\n<hr>\n<h4 id=\"参考：\"><a href=\"#参考：\" class=\"headerlink\" title=\"参考：\"></a>参考：</h4><p><a href=\"https://en.wikipedia.org/wiki/Internet_protocol_suite\" target=\"_blank\" rel=\"external\">https://en.wikipedia.org/wiki/Internet_protocol_suite</a></p>\n<p><a href=\"\">《TCP/IP详解卷1:协议》</a></p>\n","excerpt":"","more":"<h3 id=\"写在前面：\"><a href=\"#写在前面：\" class=\"headerlink\" title=\"写在前面：\"></a>写在前面：</h3><p>在计算机刚出现的时候，只能在本机进行一些运算处理，想将一台计算机中的数据转移到另一台计算机中，需要通过外部存储介质来传输，例如磁带、软盘。而网络技术的出现，使得计算机间可以通过一些传输介质(网线、光纤等)，实现快速的数据传输和信息交互。如今，网络已无处不在，那么，计算机之间究竟是如何通信的呢？下面会通过一些基础的网络知识来简单理解计算机之间的通信过程。</p>\n<hr>\n<h3 id=\"网络通信模型：\"><a href=\"#网络通信模型：\" class=\"headerlink\" title=\"网络通信模型：\"></a>网络通信模型：</h3><p>网络通信模型是一种概念模型和框架，旨在使各种计算机在世界范围内互连为网络。其中有OSI七层模型和TCP/IP四层模型，现在大部分网络通信都是以TCP/IP四层模型为基础的。它们的对应层次如下图：</p>\n<p><img src=\"image/607348-20160312201154210-2019193861.jpg\" alt=\"\"></p>\n<ul>\n<li><p>OSI有七层：从上到下依次为应用层、表示层、会话层、传输层、网络层、数据链路层、物理层</p>\n</li>\n<li><p>TCP/IP有四层：从上到下依次为应用层、传输层、互连层(网络层)、网络接口层(链路层)。</p>\n</li>\n</ul>\n<p>因为目前大部分TCP/IP模型，所以就以TCP/IP为例，我们来理解下数据间的通信，下图是两台计算机通信的数据的传输过程：</p>\n<p><img src=\"image/607348-20160312202413054-848303498.png\" alt=\"\"></p>\n<hr>\n<h3 id=\"数据封装：\"><a href=\"#数据封装：\" class=\"headerlink\" title=\"数据封装：\"></a>数据封装：</h3><p>在详细了解TCP/IP每一层各自的作用前，先要理解数据封装的概念，数据在通过网络接口传送出去前，会经过层层封装，每层都会在前面的基础上添加自己的信息，在传输到对方计算机后，又会被层层进行解封装后得到最后的数据。其过程如下图所示：</p>\n<p><img src=\"image/607348-20160312203516679-1695630421.gif\" alt=\"\"></p>\n<hr>\n<h3 id=\"TCP-IP参考模型：\"><a href=\"#TCP-IP参考模型：\" class=\"headerlink\" title=\"TCP/IP参考模型：\"></a>TCP/IP参考模型：</h3><p>TCP/IP参考模型是一个抽象的分层模型，这个模型中，所有的TCP/IP系列网络协议都被归类到4个抽象的”层”中。每一抽象层创建在低一层提供的服务上，并且为高一层提供服务。 完成一些特定的任务需要众多的协议协同工作，这些协议分布在参考模型的不同层中的，因此有时称它们为一个协议栈。</p>\n<h5 id=\"应用层-Application-Layer-：\"><a href=\"#应用层-Application-Layer-：\" class=\"headerlink\" title=\"应用层(Application Layer)：\"></a>应用层(Application Layer)：</h5><ul>\n<li>该层包括所有和应用程序协同工作，利用基础网络交换应用程序专用的数据的协议。 应用层是大多数普通与网络相关的程序为了通过网络与其他程序通信所使用的层。这个层的处理过程是应用特有的；数据从网络相关的程序以这种应用内部使用的格式进行传送，然后被编码成标准协议的格式。</li>\n<li>常见的应用层协议有HTTP、FTP、DNS、SNMP(基于UDP)</li>\n</ul>\n<h5 id=\"传输层-Transport-Layer-：\"><a href=\"#传输层-Transport-Layer-：\" class=\"headerlink\" title=\"传输层(Transport Layer)：\"></a>传输层(Transport Layer)：</h5><ul>\n<li>主要为两台主机上的应用程序提供端到端的通信，包括TCP协议（传输控制协议）和UDP（用户数据报协议）。<br>端口号由此层提供，且在一台计算机中具有唯一性。</li>\n<li>UDP为应用层提供一种非常简单的服务。它只是把称作数据报的分组从一台主机发送到另一台主机，但并不保证该数据报能到达另一端。任何必需的可靠性必须由应用层来提供。</li>\n<li>TCP为两台主机提供高可靠性的数据通信。它所做的工作包括把应用程序交给它的数据分成合适的小块交给下面的网络层，确认接收到的分组，设置发送最后确认分组的超时时钟等,由于运输层提供了高可靠性的端到端的通信，因此应用层可以忽略所有这些细节。</li>\n<li>因为TCP是一种面向连接的协议，所以两个在使用TCP的应用在彼此交换数据前必须先建立一个TCP连接，也就是有名的TCP三次握手，如下图所示：</li>\n</ul>\n<p><img src=\"image/607348-20160312211241132-1517700594.png\" alt=\"\"></p>\n<p>建立连接协议过程：（TCP三次握手协议）</p>\n<ul>\n<li>客户端发送一个SYN段指明客户打算连接的服务器的端口，以及初始序号（ISN）。</li>\n<li>服务器发回包含服务器的初始序号的SYN报文段作为应答。同时，将确认序号设置为客户的ISN加1以对客户的SYN报文段进行确认。一个SYN占用一个序号。</li>\n<li>客户将确认序号设置为服务器的ISN加1以对服务器的SYN报文段进行确认。</li>\n</ul>\n<h4 id=\"网络层-Internet-Layer-：\"><a href=\"#网络层-Internet-Layer-：\" class=\"headerlink\" title=\"网络层(Internet Layer)：\"></a>网络层(Internet Layer)：</h4><ul>\n<li><p>处理分组在网络中的活动。网络层协议包括IP协议（网际协议），ICPM协议（Internet互联网控制报文协议），以及IGMP协议（Internet组管理协议），其中的IP协议身是TCP/IP协议簇中最为核心的协议。IP提供的是不可靠、无连接的数据包传送服务。</p>\n</li>\n<li><p>IP地址：</p>\n</li>\n<li><ul>\n<li>讲到IP协议就应该讲讲IP地址，IP地址是分配给网络上使用IP协议的设备的数字标签，有IPv4和IPv6两大类，我们目前使用的大部分还是IPv4的地址，以下简称IP地址，IP地址由32位二进制数组成，为便于使用，常以XXX.XXX.XXX.XXX形式表示。IP地址由两个字段组成：网络号(net-id)和主机号(host-id)，为方便IP地址管理，IP地址被分为五类，如下图：</li>\n</ul>\n</li>\n</ul>\n<p><img src=\"image/607348-20160312213647569-286300397.gif\" alt=\"\"></p>\n<ul>\n<li><ul>\n<li>其中A、B、C类地址为单播（unicast）地址；D类地址为组播（multicast）地址；E类地址为保留地址，以备将来的特殊用途。目前大量使用中的IP地址属于A、B、C三类地址。</li>\n</ul>\n</li>\n<li><ul>\n<li><ul>\n<li>A类地址范围：0.0.0.0～127.255.255.255</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><ul>\n<li><ul>\n<li>B类地址范围：128.0.0.0～191.255.255.255</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><ul>\n<li><ul>\n<li>C类地址范围：192.0.0.0～223.255.255.255</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><ul>\n<li><ul>\n<li>私网地址范围：10.0.0.0～10.255.255.255 ，172.16.0.0～172.31.255.255 ，192.168.0.0～192.168.255.255，私网地址只能在本地局域网中使用，不在公网中使用。</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>子网和掩码：</p>\n</li>\n<li><ul>\n<li>传统的IP地址分配方式，对IP地址的浪费非常严重。为了充分利用已有的IP地址，人们提出了掩码（mask）和子网（subnet）的概念。</li>\n</ul>\n</li>\n<li><ul>\n<li>掩码是一个与IP地址对应的32位数字，这些数字中一些为1，另外一些为0。原则上这些1和0可以任意组合，不过一般在设计掩码时，网络号码和子网号码的比特值为1，主机号码的比特值为0。掩码可以把IP地址分为两个部分：子网地址和主机地址。IP地址与掩码中为1的位对应的部分为子网地址，其他的位对应的部分则是主机地址。当不进行子网划分时，子网掩码即为默认值，此时子网掩码中“1”的长度就是网络号码的长度。即A类地址对应的掩码默认值为255.0.0.0；B类地址的掩码默认值为255.255.0.0；C类地址掩码的默认值为255.255.255.0。</li>\n</ul>\n</li>\n<li><p>IP路由选择：</p>\n</li>\n<li><ul>\n<li>概念：若目的主机与源主机在同一共享网络内，IP数据报直接送达目的主机，否则，主机把数据报发往默认的路由器上，由路由器进行数据报转发。</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"链路层-Link-Layer-：\"><a href=\"#链路层-Link-Layer-：\" class=\"headerlink\" title=\"链路层(Link Layer)：\"></a>链路层(Link Layer)：</h4><ul>\n<li>通常包括设备驱动程序和网络接口卡。处理与传输媒介的物理接口细节。主要协议有：ARP协议和RARP协议</li>\n<li><p>MAC地址 ：数据链路层具有自己的寻址机制(48bit地址)，当一台主机把以太网数据帧发送到位于同一局域网上得另一台主机时，是根据48bit的以太网地址来确定目的接口的。</p>\n</li>\n<li><p>而ARP和RARP协议是为IP地址和MAC地址提供映射的：</p>\n</li>\n</ul>\n<p><img src=\"image/607348-20160312214932366-1742109445.png\" alt=\"\"></p>\n<hr>\n<h4 id=\"使用：\"><a href=\"#使用：\" class=\"headerlink\" title=\"使用：\"></a>使用：</h4><ul>\n<li><p>我们在判断两台主机应用之间的网络是否正常，通常是判断到对方IP和端口是否能通。</p>\n</li>\n<li><p>常用网络判断命令：</p>\n</li>\n<li><p>Windows：</p>\n</li>\n<li><ul>\n<li><code>ping $IP：最常用的判断网络是否可达的命令。</code></li>\n</ul>\n</li>\n</ul>\n<p><img src=\"image/607348-20160312220145210-443719950.png\" alt=\"\"></p>\n<ul>\n<li><ul>\n<li><code>tracert $IP：跟踪路由，即打印出本机到到目的IP，所经过路由。</code></li>\n</ul>\n</li>\n</ul>\n<p><img src=\"image/607348-20160312220158054-2124916124.png\" alt=\"\"></p>\n<ul>\n<li><ul>\n<li><code>telnet $IP $port：可以测试某个IP和应用端口是否能通。</code></li>\n</ul>\n</li>\n<li><ul>\n<li><code>netstat：查看本机监听和建立连接的端口。</code></li>\n</ul>\n</li>\n</ul>\n<p><img src=\"image/607348-20160312220227866-1298265423.png\" alt=\"\"></p>\n<ul>\n<li><p>Linux：</p>\n</li>\n<li><ul>\n<li><code>ping $IP：最常用的判断网络是否可达的命令</code></li>\n</ul>\n</li>\n<li><ul>\n<li><code>traceroute $IP：跟踪路由，即打印出本机到到目的IP，所经过路由。</code></li>\n</ul>\n</li>\n<li><ul>\n<li><code>或者使用mtr -ni 0.1 $IP，可以实现以上两个共同的效果</code></li>\n</ul>\n</li>\n</ul>\n<p><img src=\"image/607348-20160312221617569-1834112731.png\" alt=\"\"></p>\n<ul>\n<li><ul>\n<li><code>nc -vz $IP $PORT：测试到目的IP的应用端口是否能通。</code></li>\n</ul>\n</li>\n</ul>\n<p><img src=\"image/607348-20160312221825819-331058027.png\" alt=\"\"></p>\n<ul>\n<li><ul>\n<li><code>netstat -tupln：可以查看本机目前监听的端口</code></li>\n</ul>\n</li>\n</ul>\n<p><img src=\"image/607348-20160312221946585-1872997601.png\" alt=\"\"></p>\n<hr>\n<h4 id=\"参考：\"><a href=\"#参考：\" class=\"headerlink\" title=\"参考：\"></a>参考：</h4><p><a href=\"https://en.wikipedia.org/wiki/Internet_protocol_suite\">https://en.wikipedia.org/wiki/Internet_protocol_suite</a></p>\n<p><a href=\"\">《TCP/IP详解卷1:协议》</a></p>\n"},{"title":"理解系统启动过程","date":"2016-05-21T11:02:01.000Z","_content":"### 前言\nLinux是一种自由和开放源代码的类UNIX操作系统。该操作系统的内核由林纳斯·托瓦兹在1991年10月5日首次发布。在加上用户空间的应用程序之后，成为Linux操作系统。Linux是自由软件和开放源代码软件发展中最著名的例子。\n\n接触Linux的时间也不算短了，一直都是直接使用Linux操作系统进行一些工作，很少去了解系统从开机到能使用的整个过程，感觉有需要好好理解下整个系统的启动过程，故写这篇博客加深一下理解。\n\n*** \n\n### 启动过程\n先通过一张图来简单了解下整个系统启动的流程，整个过程基本可以分为<font color=blue>POST-->BIOS-->MBR(GRUB)-->Kernel-->Init-->Runlevel</font>。下面会详细说明每个过程的作用。\n\n![](image/607348-20151229231206354-919070678.png)\n\n\n* BIOS\n\n\tBIOS(Basic Input/Output System)，基本输入输出系统，该系统存储于主板的ROM芯片上，计算机在开机时，会最先读取该系统，然后会有一个加电自检过程，这个过程其实就是检查CPU和内存，计算机最基本的组成单元(控制器、运算器和存储器)，还会检查其他硬件，若没有异常就开始加载BIOS程序到内存当中。详细的BIOS功能，这边就不说了，BIOS主要的一个功能就是存储了磁盘的启动顺序，BIOS会按照启动顺序去查找第一个磁盘头的MBR信息，并加载和执行MBR中的Bootloader程序，若第一个磁盘不存在MBR，则会继续查找第二个磁盘(PS：启动顺序可以在BIOS的界面中进行设置)，一旦BootLoader程序被检测并加载内存中，BIOS就将控制权交接给了BootLoader程序。\n\n \n\n* MBR\n\n\tMBR(Master Boot Record)，主引导记录，MBR存储于磁盘的头部，大小为512bytes，其中，446bytes用于存储BootLoader程序，64bytes用于存储分区表信息，最后2bytes用于MBR的有效性检查。\n\n \n\n* GRUB\n\n\tGRUB(Grand Unified Bootloader)，多系统启动程序，其执行过程可分为三个步骤：\n\n\t* Stage1：这个其实就是MBR，它的主要工作就是查找并加载第二段Bootloader程序(stage2)，但系统在没启动时，MBR根本找不到文件系统，也就找不到stage2所存放的位置，因此，就有了stage1_5\n\n\t* Stage1_5：该步骤就是为了识别文件系统\n\n\t* Stage2：GRUB程序会根据/boot/grub/grub.conf文件查找Kernel的信息，然后开始加载Kernel程序，当Kernel程序被检测并在加载到内存中，GRUB就将控制权交接给了Kernel程序。\n\n\t\tPS：实际上这个步骤/boot还没被挂载，GRUB直接识别grub所在磁盘的文件系统，所以实际上应该是/grub/grub.conf文件，该配置文件的信息如下：\n\n\t\tgrub.conf:\n\t```\n#boot=/dev/sda\n\ndefault=0    #设定默认启动的title的编号，从0开始\n\ntimeout=5    #等待用户选择的超时时间\n\nsplashimage=(hd0,0)/boot/grub/splash.xpm.gz  #GRUB的背景图片\n\nhiddenmenu   #隐藏菜单\n\ntitle CentOS (2.6.18-194.el5PAE)    #内核标题\n\n\troot (hd0,0)       #内核文件所在的设备\n\n\tkernel /vmlinuz-2.6.18-194.el5PAE ro root=LABEL=/   #内核文件路径以及传递给内核的参数\n\n\tinitrd /initrd-2.6.18-194.el5PAE.img                #ramdisk文件路径\n\t```\n\t\t\n* Kernel\n\n\tKernel，内核，Kernel是Linux系统最主要的程序，实际上，Kernel的文件很小，只保留了最基本的模块，并以压缩的文件形式存储在硬盘中，当GRUB将Kernel读进内存，内存开始解压缩内核文件。讲内核启动，应该先讲下initrd这个文件，\n\n\tinitrd(Initial RAM Disk)，它在stage2这个步骤就被拷贝到了内存中，这个文件是在安装系统时产生的，是一个临时的根文件系统(rootfs)。因为Kernel为了精简，只保留了最基本的模块，因此，Kernel上并没有各种硬件的驱动程序，也就无法识rootfs所在的设备，故产生了initrd这个文件，该文件装载了必要的驱动模块，当Kernel启动时，可以从initrd文件中装载驱动模块，直到挂载真正的rootfs，然后将initrd从内存中移除。\n\n\tKernel会以只读方式挂载根文件系统，当根文件系统被挂载后，开始装载第一个进程(用户空间的进程)，执行/sbin/init，之后就将控制权交接给了init程序。\n\n \n* Init\n\n\tinit，初始化，顾名思义，该程序就是进行OS初始化操作，实际上是根据/etc/inittab(定义了系统默认运行级别)设定的动作进行脚本的执行，第一个被执行的脚本为/etc/rc.d/rc.sysinit，这个是真正的OS初始化脚本，简单讲下这个脚本的任务(可以去看看实际脚本，看看都做了什么)：\n\n\t* 激活udev和selinux;\n\t* 根据/etc/sysctl.conf文件，来设定内核参数;\n\t* 设定系统时钟;\n\t* 装载硬盘映射;\n\t* 启用交换分区;\n\t* 设置主机名;\n\t* 根文件系统检测，并以读写方式重新挂载根文件系统;\n\t* 激活RAID和LVM设备;\n\t* 启用磁盘配额;\n\t* 根据/etc/fstab，检查并挂载其他文件系统;\n\t* 清理过期的锁和PID文件\n\n\t执行完后，根据配置的启动级别，执行对应目录底下的脚本，最后执行/etc/rc.d/rc.local这个脚本，至此，系统启动完成。\n　　\n\n* Runlevel\n\n\trunlevel，运行级别，不同的级别会启动的服务不一样，init会根据定义的级别去执行相应目录下的脚本，Linux的启动级别分为以下几种：\n\n\t0：关机模式\n\n\t1：单一用户模式(直接以管理员身份进入)\n\n\t2：多用户模式（无网络）\n\n\t3：多用户模式（命令行）\n\n\t4：保留\n\n\t5：多用户模式（图形界面）\n\n\t6：重启\n\n\t在不同的运行级别下，/etc/rc.d/rc这个脚本会分别执行不同目录下的脚本：\n\n\tRunlevel 0 – /etc/rc.d/rc0.d/\n\n\tRunlevel 1 – /etc/rc.d/rc1.d/\n\n\tRunlevel 2 – /etc/rc.d/rc2.d/\n\n\tRunlevel 3 – /etc/rc.d/rc3.d/\n\n\tRunlevel 4 – /etc/rc.d/rc4.d/\n\n\tRunlevel 5 – /etc/rc.d/rc5.d/\n\n\tRunlevel 6 – /etc/rc.d/rc6.d/\n\n\t这些目录下的脚本只有K\\*和S\\*开头的文件，K开头的文件为开机需要执行关闭的服务，S开头的文件为开机需要执行开启的服务。\n\n***\n \n\n### 参考\n\n[http://www.thegeekstuff.com/2011/02/linux-boot-process/](http://www.thegeekstuff.com/2011/02/linux-boot-process/)\n\n[http://www.ibm.com/developerworks/library/l-linuxboot/](http://www.ibm.com/developerworks/library/l-linuxboot/)\n","source":"_posts/systemstart.md","raw":"---\ntitle: 理解系统启动过程\ndate: 2016-05-21 19:02:01\ntags: system\ncategory: technology\n---\n### 前言\nLinux是一种自由和开放源代码的类UNIX操作系统。该操作系统的内核由林纳斯·托瓦兹在1991年10月5日首次发布。在加上用户空间的应用程序之后，成为Linux操作系统。Linux是自由软件和开放源代码软件发展中最著名的例子。\n\n接触Linux的时间也不算短了，一直都是直接使用Linux操作系统进行一些工作，很少去了解系统从开机到能使用的整个过程，感觉有需要好好理解下整个系统的启动过程，故写这篇博客加深一下理解。\n\n*** \n\n### 启动过程\n先通过一张图来简单了解下整个系统启动的流程，整个过程基本可以分为<font color=blue>POST-->BIOS-->MBR(GRUB)-->Kernel-->Init-->Runlevel</font>。下面会详细说明每个过程的作用。\n\n![](image/607348-20151229231206354-919070678.png)\n\n\n* BIOS\n\n\tBIOS(Basic Input/Output System)，基本输入输出系统，该系统存储于主板的ROM芯片上，计算机在开机时，会最先读取该系统，然后会有一个加电自检过程，这个过程其实就是检查CPU和内存，计算机最基本的组成单元(控制器、运算器和存储器)，还会检查其他硬件，若没有异常就开始加载BIOS程序到内存当中。详细的BIOS功能，这边就不说了，BIOS主要的一个功能就是存储了磁盘的启动顺序，BIOS会按照启动顺序去查找第一个磁盘头的MBR信息，并加载和执行MBR中的Bootloader程序，若第一个磁盘不存在MBR，则会继续查找第二个磁盘(PS：启动顺序可以在BIOS的界面中进行设置)，一旦BootLoader程序被检测并加载内存中，BIOS就将控制权交接给了BootLoader程序。\n\n \n\n* MBR\n\n\tMBR(Master Boot Record)，主引导记录，MBR存储于磁盘的头部，大小为512bytes，其中，446bytes用于存储BootLoader程序，64bytes用于存储分区表信息，最后2bytes用于MBR的有效性检查。\n\n \n\n* GRUB\n\n\tGRUB(Grand Unified Bootloader)，多系统启动程序，其执行过程可分为三个步骤：\n\n\t* Stage1：这个其实就是MBR，它的主要工作就是查找并加载第二段Bootloader程序(stage2)，但系统在没启动时，MBR根本找不到文件系统，也就找不到stage2所存放的位置，因此，就有了stage1_5\n\n\t* Stage1_5：该步骤就是为了识别文件系统\n\n\t* Stage2：GRUB程序会根据/boot/grub/grub.conf文件查找Kernel的信息，然后开始加载Kernel程序，当Kernel程序被检测并在加载到内存中，GRUB就将控制权交接给了Kernel程序。\n\n\t\tPS：实际上这个步骤/boot还没被挂载，GRUB直接识别grub所在磁盘的文件系统，所以实际上应该是/grub/grub.conf文件，该配置文件的信息如下：\n\n\t\tgrub.conf:\n\t```\n#boot=/dev/sda\n\ndefault=0    #设定默认启动的title的编号，从0开始\n\ntimeout=5    #等待用户选择的超时时间\n\nsplashimage=(hd0,0)/boot/grub/splash.xpm.gz  #GRUB的背景图片\n\nhiddenmenu   #隐藏菜单\n\ntitle CentOS (2.6.18-194.el5PAE)    #内核标题\n\n\troot (hd0,0)       #内核文件所在的设备\n\n\tkernel /vmlinuz-2.6.18-194.el5PAE ro root=LABEL=/   #内核文件路径以及传递给内核的参数\n\n\tinitrd /initrd-2.6.18-194.el5PAE.img                #ramdisk文件路径\n\t```\n\t\t\n* Kernel\n\n\tKernel，内核，Kernel是Linux系统最主要的程序，实际上，Kernel的文件很小，只保留了最基本的模块，并以压缩的文件形式存储在硬盘中，当GRUB将Kernel读进内存，内存开始解压缩内核文件。讲内核启动，应该先讲下initrd这个文件，\n\n\tinitrd(Initial RAM Disk)，它在stage2这个步骤就被拷贝到了内存中，这个文件是在安装系统时产生的，是一个临时的根文件系统(rootfs)。因为Kernel为了精简，只保留了最基本的模块，因此，Kernel上并没有各种硬件的驱动程序，也就无法识rootfs所在的设备，故产生了initrd这个文件，该文件装载了必要的驱动模块，当Kernel启动时，可以从initrd文件中装载驱动模块，直到挂载真正的rootfs，然后将initrd从内存中移除。\n\n\tKernel会以只读方式挂载根文件系统，当根文件系统被挂载后，开始装载第一个进程(用户空间的进程)，执行/sbin/init，之后就将控制权交接给了init程序。\n\n \n* Init\n\n\tinit，初始化，顾名思义，该程序就是进行OS初始化操作，实际上是根据/etc/inittab(定义了系统默认运行级别)设定的动作进行脚本的执行，第一个被执行的脚本为/etc/rc.d/rc.sysinit，这个是真正的OS初始化脚本，简单讲下这个脚本的任务(可以去看看实际脚本，看看都做了什么)：\n\n\t* 激活udev和selinux;\n\t* 根据/etc/sysctl.conf文件，来设定内核参数;\n\t* 设定系统时钟;\n\t* 装载硬盘映射;\n\t* 启用交换分区;\n\t* 设置主机名;\n\t* 根文件系统检测，并以读写方式重新挂载根文件系统;\n\t* 激活RAID和LVM设备;\n\t* 启用磁盘配额;\n\t* 根据/etc/fstab，检查并挂载其他文件系统;\n\t* 清理过期的锁和PID文件\n\n\t执行完后，根据配置的启动级别，执行对应目录底下的脚本，最后执行/etc/rc.d/rc.local这个脚本，至此，系统启动完成。\n　　\n\n* Runlevel\n\n\trunlevel，运行级别，不同的级别会启动的服务不一样，init会根据定义的级别去执行相应目录下的脚本，Linux的启动级别分为以下几种：\n\n\t0：关机模式\n\n\t1：单一用户模式(直接以管理员身份进入)\n\n\t2：多用户模式（无网络）\n\n\t3：多用户模式（命令行）\n\n\t4：保留\n\n\t5：多用户模式（图形界面）\n\n\t6：重启\n\n\t在不同的运行级别下，/etc/rc.d/rc这个脚本会分别执行不同目录下的脚本：\n\n\tRunlevel 0 – /etc/rc.d/rc0.d/\n\n\tRunlevel 1 – /etc/rc.d/rc1.d/\n\n\tRunlevel 2 – /etc/rc.d/rc2.d/\n\n\tRunlevel 3 – /etc/rc.d/rc3.d/\n\n\tRunlevel 4 – /etc/rc.d/rc4.d/\n\n\tRunlevel 5 – /etc/rc.d/rc5.d/\n\n\tRunlevel 6 – /etc/rc.d/rc6.d/\n\n\t这些目录下的脚本只有K\\*和S\\*开头的文件，K开头的文件为开机需要执行关闭的服务，S开头的文件为开机需要执行开启的服务。\n\n***\n \n\n### 参考\n\n[http://www.thegeekstuff.com/2011/02/linux-boot-process/](http://www.thegeekstuff.com/2011/02/linux-boot-process/)\n\n[http://www.ibm.com/developerworks/library/l-linuxboot/](http://www.ibm.com/developerworks/library/l-linuxboot/)\n","slug":"systemstart","published":1,"updated":"2016-05-21T12:40:08.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cixwmkixb0007mo8z5p6dgsf0","content":"<h3 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h3><p>Linux是一种自由和开放源代码的类UNIX操作系统。该操作系统的内核由林纳斯·托瓦兹在1991年10月5日首次发布。在加上用户空间的应用程序之后，成为Linux操作系统。Linux是自由软件和开放源代码软件发展中最著名的例子。</p>\n<p>接触Linux的时间也不算短了，一直都是直接使用Linux操作系统进行一些工作，很少去了解系统从开机到能使用的整个过程，感觉有需要好好理解下整个系统的启动过程，故写这篇博客加深一下理解。</p>\n<hr>\n<h3 id=\"启动过程\"><a href=\"#启动过程\" class=\"headerlink\" title=\"启动过程\"></a>启动过程</h3><p>先通过一张图来简单了解下整个系统启动的流程，整个过程基本可以分为<font color=\"blue\">POST–&gt;BIOS–&gt;MBR(GRUB)–&gt;Kernel–&gt;Init–&gt;Runlevel</font>。下面会详细说明每个过程的作用。</p>\n<p><img src=\"image/607348-20151229231206354-919070678.png\" alt=\"\"></p>\n<ul>\n<li><p>BIOS</p>\n<p>  BIOS(Basic Input/Output System)，基本输入输出系统，该系统存储于主板的ROM芯片上，计算机在开机时，会最先读取该系统，然后会有一个加电自检过程，这个过程其实就是检查CPU和内存，计算机最基本的组成单元(控制器、运算器和存储器)，还会检查其他硬件，若没有异常就开始加载BIOS程序到内存当中。详细的BIOS功能，这边就不说了，BIOS主要的一个功能就是存储了磁盘的启动顺序，BIOS会按照启动顺序去查找第一个磁盘头的MBR信息，并加载和执行MBR中的Bootloader程序，若第一个磁盘不存在MBR，则会继续查找第二个磁盘(PS：启动顺序可以在BIOS的界面中进行设置)，一旦BootLoader程序被检测并加载内存中，BIOS就将控制权交接给了BootLoader程序。</p>\n</li>\n</ul>\n<ul>\n<li><p>MBR</p>\n<p>  MBR(Master Boot Record)，主引导记录，MBR存储于磁盘的头部，大小为512bytes，其中，446bytes用于存储BootLoader程序，64bytes用于存储分区表信息，最后2bytes用于MBR的有效性检查。</p>\n</li>\n</ul>\n<ul>\n<li><p>GRUB</p>\n<p>  GRUB(Grand Unified Bootloader)，多系统启动程序，其执行过程可分为三个步骤：</p>\n<ul>\n<li><p>Stage1：这个其实就是MBR，它的主要工作就是查找并加载第二段Bootloader程序(stage2)，但系统在没启动时，MBR根本找不到文件系统，也就找不到stage2所存放的位置，因此，就有了stage1_5</p>\n</li>\n<li><p>Stage1_5：该步骤就是为了识别文件系统</p>\n</li>\n<li><p>Stage2：GRUB程序会根据/boot/grub/grub.conf文件查找Kernel的信息，然后开始加载Kernel程序，当Kernel程序被检测并在加载到内存中，GRUB就将控制权交接给了Kernel程序。</p>\n<p>  PS：实际上这个步骤/boot还没被挂载，GRUB直接识别grub所在磁盘的文件系统，所以实际上应该是/grub/grub.conf文件，该配置文件的信息如下：</p>\n<p>  grub.conf:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\">#boot=/dev/sda</div><div class=\"line\"></div><div class=\"line\">default=0    #设定默认启动的title的编号，从0开始</div><div class=\"line\"></div><div class=\"line\">timeout=5    #等待用户选择的超时时间</div><div class=\"line\"></div><div class=\"line\">splashimage=(hd0,0)/boot/grub/splash.xpm.gz  #GRUB的背景图片</div><div class=\"line\"></div><div class=\"line\">hiddenmenu   #隐藏菜单</div><div class=\"line\"></div><div class=\"line\">title CentOS (2.6.18-194.el5PAE)    #内核标题</div><div class=\"line\"></div><div class=\"line\">\troot (hd0,0)       #内核文件所在的设备</div><div class=\"line\"></div><div class=\"line\">\tkernel /vmlinuz-2.6.18-194.el5PAE ro root=LABEL=/   #内核文件路径以及传递给内核的参数</div><div class=\"line\"></div><div class=\"line\">\tinitrd /initrd-2.6.18-194.el5PAE.img                #ramdisk文件路径</div></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n</ul>\n<ul>\n<li><p>Kernel</p>\n<p>  Kernel，内核，Kernel是Linux系统最主要的程序，实际上，Kernel的文件很小，只保留了最基本的模块，并以压缩的文件形式存储在硬盘中，当GRUB将Kernel读进内存，内存开始解压缩内核文件。讲内核启动，应该先讲下initrd这个文件，</p>\n<p>  initrd(Initial RAM Disk)，它在stage2这个步骤就被拷贝到了内存中，这个文件是在安装系统时产生的，是一个临时的根文件系统(rootfs)。因为Kernel为了精简，只保留了最基本的模块，因此，Kernel上并没有各种硬件的驱动程序，也就无法识rootfs所在的设备，故产生了initrd这个文件，该文件装载了必要的驱动模块，当Kernel启动时，可以从initrd文件中装载驱动模块，直到挂载真正的rootfs，然后将initrd从内存中移除。</p>\n<p>  Kernel会以只读方式挂载根文件系统，当根文件系统被挂载后，开始装载第一个进程(用户空间的进程)，执行/sbin/init，之后就将控制权交接给了init程序。</p>\n</li>\n</ul>\n<ul>\n<li><p>Init</p>\n<p>  init，初始化，顾名思义，该程序就是进行OS初始化操作，实际上是根据/etc/inittab(定义了系统默认运行级别)设定的动作进行脚本的执行，第一个被执行的脚本为/etc/rc.d/rc.sysinit，这个是真正的OS初始化脚本，简单讲下这个脚本的任务(可以去看看实际脚本，看看都做了什么)：</p>\n<ul>\n<li>激活udev和selinux;</li>\n<li>根据/etc/sysctl.conf文件，来设定内核参数;</li>\n<li>设定系统时钟;</li>\n<li>装载硬盘映射;</li>\n<li>启用交换分区;</li>\n<li>设置主机名;</li>\n<li>根文件系统检测，并以读写方式重新挂载根文件系统;</li>\n<li>激活RAID和LVM设备;</li>\n<li>启用磁盘配额;</li>\n<li>根据/etc/fstab，检查并挂载其他文件系统;</li>\n<li><p>清理过期的锁和PID文件</p>\n<p>执行完后，根据配置的启动级别，执行对应目录底下的脚本，最后执行/etc/rc.d/rc.local这个脚本，至此，系统启动完成。\n　　</p>\n</li>\n</ul>\n</li>\n<li><p>Runlevel</p>\n<p>  runlevel，运行级别，不同的级别会启动的服务不一样，init会根据定义的级别去执行相应目录下的脚本，Linux的启动级别分为以下几种：</p>\n<p>  0：关机模式</p>\n<p>  1：单一用户模式(直接以管理员身份进入)</p>\n<p>  2：多用户模式（无网络）</p>\n<p>  3：多用户模式（命令行）</p>\n<p>  4：保留</p>\n<p>  5：多用户模式（图形界面）</p>\n<p>  6：重启</p>\n<p>  在不同的运行级别下，/etc/rc.d/rc这个脚本会分别执行不同目录下的脚本：</p>\n<p>  Runlevel 0 – /etc/rc.d/rc0.d/</p>\n<p>  Runlevel 1 – /etc/rc.d/rc1.d/</p>\n<p>  Runlevel 2 – /etc/rc.d/rc2.d/</p>\n<p>  Runlevel 3 – /etc/rc.d/rc3.d/</p>\n<p>  Runlevel 4 – /etc/rc.d/rc4.d/</p>\n<p>  Runlevel 5 – /etc/rc.d/rc5.d/</p>\n<p>  Runlevel 6 – /etc/rc.d/rc6.d/</p>\n<p>  这些目录下的脚本只有K*和S*开头的文件，K开头的文件为开机需要执行关闭的服务，S开头的文件为开机需要执行开启的服务。</p>\n</li>\n</ul>\n<hr>\n<h3 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h3><p><a href=\"http://www.thegeekstuff.com/2011/02/linux-boot-process/\" target=\"_blank\" rel=\"external\">http://www.thegeekstuff.com/2011/02/linux-boot-process/</a></p>\n<p><a href=\"http://www.ibm.com/developerworks/library/l-linuxboot/\" target=\"_blank\" rel=\"external\">http://www.ibm.com/developerworks/library/l-linuxboot/</a></p>\n","excerpt":"","more":"<h3 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h3><p>Linux是一种自由和开放源代码的类UNIX操作系统。该操作系统的内核由林纳斯·托瓦兹在1991年10月5日首次发布。在加上用户空间的应用程序之后，成为Linux操作系统。Linux是自由软件和开放源代码软件发展中最著名的例子。</p>\n<p>接触Linux的时间也不算短了，一直都是直接使用Linux操作系统进行一些工作，很少去了解系统从开机到能使用的整个过程，感觉有需要好好理解下整个系统的启动过程，故写这篇博客加深一下理解。</p>\n<hr>\n<h3 id=\"启动过程\"><a href=\"#启动过程\" class=\"headerlink\" title=\"启动过程\"></a>启动过程</h3><p>先通过一张图来简单了解下整个系统启动的流程，整个过程基本可以分为<font color=blue>POST–&gt;BIOS–&gt;MBR(GRUB)–&gt;Kernel–&gt;Init–&gt;Runlevel</font>。下面会详细说明每个过程的作用。</p>\n<p><img src=\"image/607348-20151229231206354-919070678.png\" alt=\"\"></p>\n<ul>\n<li><p>BIOS</p>\n<p>  BIOS(Basic Input/Output System)，基本输入输出系统，该系统存储于主板的ROM芯片上，计算机在开机时，会最先读取该系统，然后会有一个加电自检过程，这个过程其实就是检查CPU和内存，计算机最基本的组成单元(控制器、运算器和存储器)，还会检查其他硬件，若没有异常就开始加载BIOS程序到内存当中。详细的BIOS功能，这边就不说了，BIOS主要的一个功能就是存储了磁盘的启动顺序，BIOS会按照启动顺序去查找第一个磁盘头的MBR信息，并加载和执行MBR中的Bootloader程序，若第一个磁盘不存在MBR，则会继续查找第二个磁盘(PS：启动顺序可以在BIOS的界面中进行设置)，一旦BootLoader程序被检测并加载内存中，BIOS就将控制权交接给了BootLoader程序。</p>\n</li>\n</ul>\n<ul>\n<li><p>MBR</p>\n<p>  MBR(Master Boot Record)，主引导记录，MBR存储于磁盘的头部，大小为512bytes，其中，446bytes用于存储BootLoader程序，64bytes用于存储分区表信息，最后2bytes用于MBR的有效性检查。</p>\n</li>\n</ul>\n<ul>\n<li><p>GRUB</p>\n<p>  GRUB(Grand Unified Bootloader)，多系统启动程序，其执行过程可分为三个步骤：</p>\n<ul>\n<li><p>Stage1：这个其实就是MBR，它的主要工作就是查找并加载第二段Bootloader程序(stage2)，但系统在没启动时，MBR根本找不到文件系统，也就找不到stage2所存放的位置，因此，就有了stage1_5</p>\n</li>\n<li><p>Stage1_5：该步骤就是为了识别文件系统</p>\n</li>\n<li><p>Stage2：GRUB程序会根据/boot/grub/grub.conf文件查找Kernel的信息，然后开始加载Kernel程序，当Kernel程序被检测并在加载到内存中，GRUB就将控制权交接给了Kernel程序。</p>\n<p>  PS：实际上这个步骤/boot还没被挂载，GRUB直接识别grub所在磁盘的文件系统，所以实际上应该是/grub/grub.conf文件，该配置文件的信息如下：</p>\n<p>  grub.conf:</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div></pre></td><td class=\"code\"><pre><div class=\"line\">#boot=/dev/sda</div><div class=\"line\"></div><div class=\"line\">default=0    #设定默认启动的title的编号，从0开始</div><div class=\"line\"></div><div class=\"line\">timeout=5    #等待用户选择的超时时间</div><div class=\"line\"></div><div class=\"line\">splashimage=(hd0,0)/boot/grub/splash.xpm.gz  #GRUB的背景图片</div><div class=\"line\"></div><div class=\"line\">hiddenmenu   #隐藏菜单</div><div class=\"line\"></div><div class=\"line\">title CentOS (2.6.18-194.el5PAE)    #内核标题</div><div class=\"line\"></div><div class=\"line\">\troot (hd0,0)       #内核文件所在的设备</div><div class=\"line\"></div><div class=\"line\">\tkernel /vmlinuz-2.6.18-194.el5PAE ro root=LABEL=/   #内核文件路径以及传递给内核的参数</div><div class=\"line\"></div><div class=\"line\">\tinitrd /initrd-2.6.18-194.el5PAE.img                #ramdisk文件路径</div></pre></td></tr></table></figure>\n</li>\n</ul>\n</li>\n</ul>\n<ul>\n<li><p>Kernel</p>\n<p>  Kernel，内核，Kernel是Linux系统最主要的程序，实际上，Kernel的文件很小，只保留了最基本的模块，并以压缩的文件形式存储在硬盘中，当GRUB将Kernel读进内存，内存开始解压缩内核文件。讲内核启动，应该先讲下initrd这个文件，</p>\n<p>  initrd(Initial RAM Disk)，它在stage2这个步骤就被拷贝到了内存中，这个文件是在安装系统时产生的，是一个临时的根文件系统(rootfs)。因为Kernel为了精简，只保留了最基本的模块，因此，Kernel上并没有各种硬件的驱动程序，也就无法识rootfs所在的设备，故产生了initrd这个文件，该文件装载了必要的驱动模块，当Kernel启动时，可以从initrd文件中装载驱动模块，直到挂载真正的rootfs，然后将initrd从内存中移除。</p>\n<p>  Kernel会以只读方式挂载根文件系统，当根文件系统被挂载后，开始装载第一个进程(用户空间的进程)，执行/sbin/init，之后就将控制权交接给了init程序。</p>\n</li>\n</ul>\n<ul>\n<li><p>Init</p>\n<p>  init，初始化，顾名思义，该程序就是进行OS初始化操作，实际上是根据/etc/inittab(定义了系统默认运行级别)设定的动作进行脚本的执行，第一个被执行的脚本为/etc/rc.d/rc.sysinit，这个是真正的OS初始化脚本，简单讲下这个脚本的任务(可以去看看实际脚本，看看都做了什么)：</p>\n<ul>\n<li>激活udev和selinux;</li>\n<li>根据/etc/sysctl.conf文件，来设定内核参数;</li>\n<li>设定系统时钟;</li>\n<li>装载硬盘映射;</li>\n<li>启用交换分区;</li>\n<li>设置主机名;</li>\n<li>根文件系统检测，并以读写方式重新挂载根文件系统;</li>\n<li>激活RAID和LVM设备;</li>\n<li>启用磁盘配额;</li>\n<li>根据/etc/fstab，检查并挂载其他文件系统;</li>\n<li><p>清理过期的锁和PID文件</p>\n<p>执行完后，根据配置的启动级别，执行对应目录底下的脚本，最后执行/etc/rc.d/rc.local这个脚本，至此，系统启动完成。\n　　</p>\n</li>\n</ul>\n</li>\n<li><p>Runlevel</p>\n<p>  runlevel，运行级别，不同的级别会启动的服务不一样，init会根据定义的级别去执行相应目录下的脚本，Linux的启动级别分为以下几种：</p>\n<p>  0：关机模式</p>\n<p>  1：单一用户模式(直接以管理员身份进入)</p>\n<p>  2：多用户模式（无网络）</p>\n<p>  3：多用户模式（命令行）</p>\n<p>  4：保留</p>\n<p>  5：多用户模式（图形界面）</p>\n<p>  6：重启</p>\n<p>  在不同的运行级别下，/etc/rc.d/rc这个脚本会分别执行不同目录下的脚本：</p>\n<p>  Runlevel 0 – /etc/rc.d/rc0.d/</p>\n<p>  Runlevel 1 – /etc/rc.d/rc1.d/</p>\n<p>  Runlevel 2 – /etc/rc.d/rc2.d/</p>\n<p>  Runlevel 3 – /etc/rc.d/rc3.d/</p>\n<p>  Runlevel 4 – /etc/rc.d/rc4.d/</p>\n<p>  Runlevel 5 – /etc/rc.d/rc5.d/</p>\n<p>  Runlevel 6 – /etc/rc.d/rc6.d/</p>\n<p>  这些目录下的脚本只有K*和S*开头的文件，K开头的文件为开机需要执行关闭的服务，S开头的文件为开机需要执行开启的服务。</p>\n</li>\n</ul>\n<hr>\n<h3 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h3><p><a href=\"http://www.thegeekstuff.com/2011/02/linux-boot-process/\">http://www.thegeekstuff.com/2011/02/linux-boot-process/</a></p>\n<p><a href=\"http://www.ibm.com/developerworks/library/l-linuxboot/\">http://www.ibm.com/developerworks/library/l-linuxboot/</a></p>\n"},{"title":"理解SSL/TLS协议","date":"2016-05-18T16:43:26.000Z","_content":"### 背景\n早期我们在访问web时使用HTTP协议，该协议在传输数据时使用明文传输，明文传输带来了以下风险：\n\n* 信息窃听风险，第三方可以获取通信内容\n* 信息篡改风险，第三方可以篡改通信内容\n* 身份冒充风险，第三方可以冒充他人身份参与通信\n\n为了解决明文传输所带来的风险，网景公司在1994年设计了SSL用于Web的安全传输协议，这是SSL的起源。IETF将SSL进行标准化，1999年公布了第一版TLS标准文件。随后又公布了 RFC 5246（2008年8月）与 RFC 6176 （2011年3月）。该协议在web中被广泛应用。\n\n*** \n\n### SSL/TLS协议\n\nTLS（Transport Layer Security，传输层安全协议），及其前身SSL（Secure Sockets Layer，安全套接层）是一种安全协议，目的是为互联网通信，提供安全及数据完整性保障。\n\nTLS协议使用以下三种机制为信息通信提供安全传输：\n\n* 隐秘性，所有通信都通过加密后进行传播\n* 身份认证，通过证书进行认证\n* 可靠性，通过校验数据完整性维护一个可靠的安全连接\n\n***\n\n### 工作机制\n\nTLS协议由两部分组成，包括（TLS Record Layer,TLS handshake protocol）\n\n* Record Layer：\n\n\t为每条信息提供一个header和在尾部生成一个从Message Authentication Code (MAC) 得到的hash值，其中header由5 bytes组成，分别是协议说明(1bytes),协议版本(2bytes)和长度(2bytes)，跟在header后面的协议信息长度不得超过16384bytes。　\n\n* Handshake Protocol：\n\n\t开始一个安全连接需要客户端和服务端经过反复的建立握手。一个TLS握手需要经过如下几个步骤：\n\n\t![](image/607348-20160224221716880-1764174375.png)\n\n \n\n首先还是要经过TCP三次握手建立连接，然后才是TLS握手的开始：\n\n* ClientHello：Client端将自己的TLS协议版本，加密套件，压缩方法，随机数，SessionID(未填充)发送给Server端\n\n* ServerHello：Server端将选择后的SSL协议版本，压缩算法，密码套件，填充SessionID，生成的随机数等信息发送给Client端\n\n* ServerCertificates：Server端将自己的数字证书(包含公钥)，发送给Client端。(证书需要从数字证书认证机构(CA)申请，证书是对于服务端的一种认证)，若要进行更为安全的数据通信，Server端还可以向Client端发送Cerficate Request来要去客户端发送对方的证书进行合法性的认证。\n\n* ServerHelloDone：当完成ServerHello后，Server端会发送Server Hello Done的消息给客户端，表示ServerHello 结束了。\n\n* ClientKeyExchage：当Client端收到Server端的证书等信息后，会先对服务端的证书进行检查，检查证书的完整性以及证书跟服务端域名是否吻合，然后使用加密算法生成一个PreMaster Secret，并通过Server端的公钥进行加密，然后发送给Server端。\n\n* ClientFinishd：Client端会发送一个ChangeCipherSpec(一种协议，数据只有一字节)，用于告知Server端已经切换到之前协商好的加密套件的状态，准备使用之前协商好的加密套件加密数据并进行传输了。然后使用Master Secret(通过两个随机数、PreMaster Secret和加密算法计算得出)加密一段Finish的数据传送给服务端，此数据是为了在正式传输应用数据之前对刚刚握手建立起来的加解密通道进行验证。\n\n* Server Finishd：Sever端在接收到Client端传过来的加密数据后，使用私钥对这段加密数据进行解密，并对数据进行验证，然后会给客户端发送一个ChangeCipherSpec，告知客户端已经切换到协商过的加密套件状态，准备使用加密套件加密数据并传输了。之后，服务端也会使用Master Secret加密一段Finish消息发送给客户端，以验证之前通过握手建立起来的加解密通道是否成功。\n\n根据之前的握手信息，如果客户端和服务端都能对Finish信息进行正常加解密且消息正确的被验证，则说明握手通道已经建立成功。\n\n接下来，双方所有的通信数据都通过Master Secret进行加密后传输。　　　　\n\n***\n\n### 参考：\n\n[https://en.wikipedia.org/wiki/Transport_Layer_Security](https://en.wikipedia.org/wiki/Transport_Layer_Security)\n\n[https://www.sans.org/reading-room/whitepapers/protocols/ssl-tls-beginners-guide-1029](https://www.sans.org/reading-room/whitepapers/protocols/ssl-tls-beginners-guide-1029)\n\n[https://support.microsoft.com/en-us/kb/257591](https://support.microsoft.com/en-us/kb/257591)","source":"_posts/tls.md","raw":"---\ntitle: 理解SSL/TLS协议\ndate: 2016-05-19 00:43:26\ntags: security\ncategory: technology\n---\n### 背景\n早期我们在访问web时使用HTTP协议，该协议在传输数据时使用明文传输，明文传输带来了以下风险：\n\n* 信息窃听风险，第三方可以获取通信内容\n* 信息篡改风险，第三方可以篡改通信内容\n* 身份冒充风险，第三方可以冒充他人身份参与通信\n\n为了解决明文传输所带来的风险，网景公司在1994年设计了SSL用于Web的安全传输协议，这是SSL的起源。IETF将SSL进行标准化，1999年公布了第一版TLS标准文件。随后又公布了 RFC 5246（2008年8月）与 RFC 6176 （2011年3月）。该协议在web中被广泛应用。\n\n*** \n\n### SSL/TLS协议\n\nTLS（Transport Layer Security，传输层安全协议），及其前身SSL（Secure Sockets Layer，安全套接层）是一种安全协议，目的是为互联网通信，提供安全及数据完整性保障。\n\nTLS协议使用以下三种机制为信息通信提供安全传输：\n\n* 隐秘性，所有通信都通过加密后进行传播\n* 身份认证，通过证书进行认证\n* 可靠性，通过校验数据完整性维护一个可靠的安全连接\n\n***\n\n### 工作机制\n\nTLS协议由两部分组成，包括（TLS Record Layer,TLS handshake protocol）\n\n* Record Layer：\n\n\t为每条信息提供一个header和在尾部生成一个从Message Authentication Code (MAC) 得到的hash值，其中header由5 bytes组成，分别是协议说明(1bytes),协议版本(2bytes)和长度(2bytes)，跟在header后面的协议信息长度不得超过16384bytes。　\n\n* Handshake Protocol：\n\n\t开始一个安全连接需要客户端和服务端经过反复的建立握手。一个TLS握手需要经过如下几个步骤：\n\n\t![](image/607348-20160224221716880-1764174375.png)\n\n \n\n首先还是要经过TCP三次握手建立连接，然后才是TLS握手的开始：\n\n* ClientHello：Client端将自己的TLS协议版本，加密套件，压缩方法，随机数，SessionID(未填充)发送给Server端\n\n* ServerHello：Server端将选择后的SSL协议版本，压缩算法，密码套件，填充SessionID，生成的随机数等信息发送给Client端\n\n* ServerCertificates：Server端将自己的数字证书(包含公钥)，发送给Client端。(证书需要从数字证书认证机构(CA)申请，证书是对于服务端的一种认证)，若要进行更为安全的数据通信，Server端还可以向Client端发送Cerficate Request来要去客户端发送对方的证书进行合法性的认证。\n\n* ServerHelloDone：当完成ServerHello后，Server端会发送Server Hello Done的消息给客户端，表示ServerHello 结束了。\n\n* ClientKeyExchage：当Client端收到Server端的证书等信息后，会先对服务端的证书进行检查，检查证书的完整性以及证书跟服务端域名是否吻合，然后使用加密算法生成一个PreMaster Secret，并通过Server端的公钥进行加密，然后发送给Server端。\n\n* ClientFinishd：Client端会发送一个ChangeCipherSpec(一种协议，数据只有一字节)，用于告知Server端已经切换到之前协商好的加密套件的状态，准备使用之前协商好的加密套件加密数据并进行传输了。然后使用Master Secret(通过两个随机数、PreMaster Secret和加密算法计算得出)加密一段Finish的数据传送给服务端，此数据是为了在正式传输应用数据之前对刚刚握手建立起来的加解密通道进行验证。\n\n* Server Finishd：Sever端在接收到Client端传过来的加密数据后，使用私钥对这段加密数据进行解密，并对数据进行验证，然后会给客户端发送一个ChangeCipherSpec，告知客户端已经切换到协商过的加密套件状态，准备使用加密套件加密数据并传输了。之后，服务端也会使用Master Secret加密一段Finish消息发送给客户端，以验证之前通过握手建立起来的加解密通道是否成功。\n\n根据之前的握手信息，如果客户端和服务端都能对Finish信息进行正常加解密且消息正确的被验证，则说明握手通道已经建立成功。\n\n接下来，双方所有的通信数据都通过Master Secret进行加密后传输。　　　　\n\n***\n\n### 参考：\n\n[https://en.wikipedia.org/wiki/Transport_Layer_Security](https://en.wikipedia.org/wiki/Transport_Layer_Security)\n\n[https://www.sans.org/reading-room/whitepapers/protocols/ssl-tls-beginners-guide-1029](https://www.sans.org/reading-room/whitepapers/protocols/ssl-tls-beginners-guide-1029)\n\n[https://support.microsoft.com/en-us/kb/257591](https://support.microsoft.com/en-us/kb/257591)","slug":"tls","published":1,"updated":"2016-05-21T10:58:44.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cixwmkixi000bmo8z1xsu70rm","content":"<h3 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h3><p>早期我们在访问web时使用HTTP协议，该协议在传输数据时使用明文传输，明文传输带来了以下风险：</p>\n<ul>\n<li>信息窃听风险，第三方可以获取通信内容</li>\n<li>信息篡改风险，第三方可以篡改通信内容</li>\n<li>身份冒充风险，第三方可以冒充他人身份参与通信</li>\n</ul>\n<p>为了解决明文传输所带来的风险，网景公司在1994年设计了SSL用于Web的安全传输协议，这是SSL的起源。IETF将SSL进行标准化，1999年公布了第一版TLS标准文件。随后又公布了 RFC 5246（2008年8月）与 RFC 6176 （2011年3月）。该协议在web中被广泛应用。</p>\n<hr>\n<h3 id=\"SSL-TLS协议\"><a href=\"#SSL-TLS协议\" class=\"headerlink\" title=\"SSL/TLS协议\"></a>SSL/TLS协议</h3><p>TLS（Transport Layer Security，传输层安全协议），及其前身SSL（Secure Sockets Layer，安全套接层）是一种安全协议，目的是为互联网通信，提供安全及数据完整性保障。</p>\n<p>TLS协议使用以下三种机制为信息通信提供安全传输：</p>\n<ul>\n<li>隐秘性，所有通信都通过加密后进行传播</li>\n<li>身份认证，通过证书进行认证</li>\n<li>可靠性，通过校验数据完整性维护一个可靠的安全连接</li>\n</ul>\n<hr>\n<h3 id=\"工作机制\"><a href=\"#工作机制\" class=\"headerlink\" title=\"工作机制\"></a>工作机制</h3><p>TLS协议由两部分组成，包括（TLS Record Layer,TLS handshake protocol）</p>\n<ul>\n<li><p>Record Layer：</p>\n<p>  为每条信息提供一个header和在尾部生成一个从Message Authentication Code (MAC) 得到的hash值，其中header由5 bytes组成，分别是协议说明(1bytes),协议版本(2bytes)和长度(2bytes)，跟在header后面的协议信息长度不得超过16384bytes。　</p>\n</li>\n<li><p>Handshake Protocol：</p>\n<p>  开始一个安全连接需要客户端和服务端经过反复的建立握手。一个TLS握手需要经过如下几个步骤：</p>\n<p>  <img src=\"image/607348-20160224221716880-1764174375.png\" alt=\"\"></p>\n</li>\n</ul>\n<p>首先还是要经过TCP三次握手建立连接，然后才是TLS握手的开始：</p>\n<ul>\n<li><p>ClientHello：Client端将自己的TLS协议版本，加密套件，压缩方法，随机数，SessionID(未填充)发送给Server端</p>\n</li>\n<li><p>ServerHello：Server端将选择后的SSL协议版本，压缩算法，密码套件，填充SessionID，生成的随机数等信息发送给Client端</p>\n</li>\n<li><p>ServerCertificates：Server端将自己的数字证书(包含公钥)，发送给Client端。(证书需要从数字证书认证机构(CA)申请，证书是对于服务端的一种认证)，若要进行更为安全的数据通信，Server端还可以向Client端发送Cerficate Request来要去客户端发送对方的证书进行合法性的认证。</p>\n</li>\n<li><p>ServerHelloDone：当完成ServerHello后，Server端会发送Server Hello Done的消息给客户端，表示ServerHello 结束了。</p>\n</li>\n<li><p>ClientKeyExchage：当Client端收到Server端的证书等信息后，会先对服务端的证书进行检查，检查证书的完整性以及证书跟服务端域名是否吻合，然后使用加密算法生成一个PreMaster Secret，并通过Server端的公钥进行加密，然后发送给Server端。</p>\n</li>\n<li><p>ClientFinishd：Client端会发送一个ChangeCipherSpec(一种协议，数据只有一字节)，用于告知Server端已经切换到之前协商好的加密套件的状态，准备使用之前协商好的加密套件加密数据并进行传输了。然后使用Master Secret(通过两个随机数、PreMaster Secret和加密算法计算得出)加密一段Finish的数据传送给服务端，此数据是为了在正式传输应用数据之前对刚刚握手建立起来的加解密通道进行验证。</p>\n</li>\n<li><p>Server Finishd：Sever端在接收到Client端传过来的加密数据后，使用私钥对这段加密数据进行解密，并对数据进行验证，然后会给客户端发送一个ChangeCipherSpec，告知客户端已经切换到协商过的加密套件状态，准备使用加密套件加密数据并传输了。之后，服务端也会使用Master Secret加密一段Finish消息发送给客户端，以验证之前通过握手建立起来的加解密通道是否成功。</p>\n</li>\n</ul>\n<p>根据之前的握手信息，如果客户端和服务端都能对Finish信息进行正常加解密且消息正确的被验证，则说明握手通道已经建立成功。</p>\n<p>接下来，双方所有的通信数据都通过Master Secret进行加密后传输。　　　　</p>\n<hr>\n<h3 id=\"参考：\"><a href=\"#参考：\" class=\"headerlink\" title=\"参考：\"></a>参考：</h3><p><a href=\"https://en.wikipedia.org/wiki/Transport_Layer_Security\" target=\"_blank\" rel=\"external\">https://en.wikipedia.org/wiki/Transport_Layer_Security</a></p>\n<p><a href=\"https://www.sans.org/reading-room/whitepapers/protocols/ssl-tls-beginners-guide-1029\" target=\"_blank\" rel=\"external\">https://www.sans.org/reading-room/whitepapers/protocols/ssl-tls-beginners-guide-1029</a></p>\n<p><a href=\"https://support.microsoft.com/en-us/kb/257591\" target=\"_blank\" rel=\"external\">https://support.microsoft.com/en-us/kb/257591</a></p>\n","excerpt":"","more":"<h3 id=\"背景\"><a href=\"#背景\" class=\"headerlink\" title=\"背景\"></a>背景</h3><p>早期我们在访问web时使用HTTP协议，该协议在传输数据时使用明文传输，明文传输带来了以下风险：</p>\n<ul>\n<li>信息窃听风险，第三方可以获取通信内容</li>\n<li>信息篡改风险，第三方可以篡改通信内容</li>\n<li>身份冒充风险，第三方可以冒充他人身份参与通信</li>\n</ul>\n<p>为了解决明文传输所带来的风险，网景公司在1994年设计了SSL用于Web的安全传输协议，这是SSL的起源。IETF将SSL进行标准化，1999年公布了第一版TLS标准文件。随后又公布了 RFC 5246（2008年8月）与 RFC 6176 （2011年3月）。该协议在web中被广泛应用。</p>\n<hr>\n<h3 id=\"SSL-TLS协议\"><a href=\"#SSL-TLS协议\" class=\"headerlink\" title=\"SSL/TLS协议\"></a>SSL/TLS协议</h3><p>TLS（Transport Layer Security，传输层安全协议），及其前身SSL（Secure Sockets Layer，安全套接层）是一种安全协议，目的是为互联网通信，提供安全及数据完整性保障。</p>\n<p>TLS协议使用以下三种机制为信息通信提供安全传输：</p>\n<ul>\n<li>隐秘性，所有通信都通过加密后进行传播</li>\n<li>身份认证，通过证书进行认证</li>\n<li>可靠性，通过校验数据完整性维护一个可靠的安全连接</li>\n</ul>\n<hr>\n<h3 id=\"工作机制\"><a href=\"#工作机制\" class=\"headerlink\" title=\"工作机制\"></a>工作机制</h3><p>TLS协议由两部分组成，包括（TLS Record Layer,TLS handshake protocol）</p>\n<ul>\n<li><p>Record Layer：</p>\n<p>  为每条信息提供一个header和在尾部生成一个从Message Authentication Code (MAC) 得到的hash值，其中header由5 bytes组成，分别是协议说明(1bytes),协议版本(2bytes)和长度(2bytes)，跟在header后面的协议信息长度不得超过16384bytes。　</p>\n</li>\n<li><p>Handshake Protocol：</p>\n<p>  开始一个安全连接需要客户端和服务端经过反复的建立握手。一个TLS握手需要经过如下几个步骤：</p>\n<p>  <img src=\"image/607348-20160224221716880-1764174375.png\" alt=\"\"></p>\n</li>\n</ul>\n<p>首先还是要经过TCP三次握手建立连接，然后才是TLS握手的开始：</p>\n<ul>\n<li><p>ClientHello：Client端将自己的TLS协议版本，加密套件，压缩方法，随机数，SessionID(未填充)发送给Server端</p>\n</li>\n<li><p>ServerHello：Server端将选择后的SSL协议版本，压缩算法，密码套件，填充SessionID，生成的随机数等信息发送给Client端</p>\n</li>\n<li><p>ServerCertificates：Server端将自己的数字证书(包含公钥)，发送给Client端。(证书需要从数字证书认证机构(CA)申请，证书是对于服务端的一种认证)，若要进行更为安全的数据通信，Server端还可以向Client端发送Cerficate Request来要去客户端发送对方的证书进行合法性的认证。</p>\n</li>\n<li><p>ServerHelloDone：当完成ServerHello后，Server端会发送Server Hello Done的消息给客户端，表示ServerHello 结束了。</p>\n</li>\n<li><p>ClientKeyExchage：当Client端收到Server端的证书等信息后，会先对服务端的证书进行检查，检查证书的完整性以及证书跟服务端域名是否吻合，然后使用加密算法生成一个PreMaster Secret，并通过Server端的公钥进行加密，然后发送给Server端。</p>\n</li>\n<li><p>ClientFinishd：Client端会发送一个ChangeCipherSpec(一种协议，数据只有一字节)，用于告知Server端已经切换到之前协商好的加密套件的状态，准备使用之前协商好的加密套件加密数据并进行传输了。然后使用Master Secret(通过两个随机数、PreMaster Secret和加密算法计算得出)加密一段Finish的数据传送给服务端，此数据是为了在正式传输应用数据之前对刚刚握手建立起来的加解密通道进行验证。</p>\n</li>\n<li><p>Server Finishd：Sever端在接收到Client端传过来的加密数据后，使用私钥对这段加密数据进行解密，并对数据进行验证，然后会给客户端发送一个ChangeCipherSpec，告知客户端已经切换到协商过的加密套件状态，准备使用加密套件加密数据并传输了。之后，服务端也会使用Master Secret加密一段Finish消息发送给客户端，以验证之前通过握手建立起来的加解密通道是否成功。</p>\n</li>\n</ul>\n<p>根据之前的握手信息，如果客户端和服务端都能对Finish信息进行正常加解密且消息正确的被验证，则说明握手通道已经建立成功。</p>\n<p>接下来，双方所有的通信数据都通过Master Secret进行加密后传输。　　　　</p>\n<hr>\n<h3 id=\"参考：\"><a href=\"#参考：\" class=\"headerlink\" title=\"参考：\"></a>参考：</h3><p><a href=\"https://en.wikipedia.org/wiki/Transport_Layer_Security\">https://en.wikipedia.org/wiki/Transport_Layer_Security</a></p>\n<p><a href=\"https://www.sans.org/reading-room/whitepapers/protocols/ssl-tls-beginners-guide-1029\">https://www.sans.org/reading-room/whitepapers/protocols/ssl-tls-beginners-guide-1029</a></p>\n<p><a href=\"https://support.microsoft.com/en-us/kb/257591\">https://support.microsoft.com/en-us/kb/257591</a></p>\n"},{"title":"WEB安全之CSP","date":"2016-05-20T15:11:11.000Z","_content":"### 概念\n内容安全策略(Content-Security-Policy，CSP)：是一种web应用技术用于帮助缓解大部分类型的内容注入攻击，包括XSS攻击和数据注入等，这些攻击可实现数据窃取、网站破坏和作为恶意软件分发版本等行为。该策略可让网站管理员指定客户端允许加载的各类可信任资源。\n\n***\n\n### 浏览器支持\n\n![](image/607348-20151208141131543-187859986.png)\n\n统计来源：[caniuse.com/contentsecuritypolicy](http://caniuse.com/#feat=contentsecuritypolicy) & [Mozilla](https://hacks.mozilla.org/2013/05/content-security-policy-1-0-lands-in-firefox-aurora/)\n\n***\n\n### 指令参考\n\nContent-Security-Policy 响应头的值可配置一个或多个，多个指令以分号;隔开。\n\n 指令          | 示例                   | 描述    \n ------------- | ---------------------  | ----- \n default-src   | 'self' cdn.example.com | 默认配置，若其他指令没有配置，都以此配置的规则为准\n script-src    | 'self' js.example.com  | 定义允许加载的JavaScript来源\n style-src     | 'self' css.example.com | 定义允许加载的样式表来源\n img-src       | 'self' img.example.com | 定义允许加载的图片来源\n connect-src   | 'self'                 | 适用于XMLHttpRequest(AJAX),WebSocket或EventSource，当为不允许的来源，浏览器返回一个400的状态码。\n font-src      | font.example.com       | 定义允许加载的字体来源\n object-src    | 'self'                 | 定义允许加载的插件来源.eg,<object\\>,<embed\\>或<applet\\>\n media-src     | media.example.com      | 定义允许加载的audio和video.eg,HTML5,<audio\\>,<video\\>元素\n frame-src     | 'self'                 | 定义允许加载的框架来源\n sandbox       | allow-forms allow-scripts |授权一个沙箱用来请求具有iframe sanbox等类似属性的资源,该沙箱默认为同源策略,禁止弹出窗口,执行插件和脚本.若要允许其他,可增加配置:allow-forms,allow-same-origin,allow-scripts,allow-top-navigation\n report-uri    | /some-report-uri       |该配置让浏览器发送一个失败报告到指定的路径，也可以增加-Report-only到HTTP头,让浏览器只发送报告(不做阻止动作)\n\n***\n\n### 来源配置参考\n\n所有的指令都要在配置后面添加来源列表，多个来源列表可用空格隔开，*和none只能存在一个。\n\n 指令          | 示例                   | 描述    \n ------------- | ---------------------  | ----- \n \\*            | img-src *              | 无限制，允许所有\n 'none'        | object-src 'none'      | 禁止加载任何路径的资源\n 'self'        | script-src 'self'      | 允许加载同源的资源\n data:         | img-src 'self' data:   | 允许通过数据模式加载资源\n domain.ccc.com | img-src img.ccc.com   | 允许加载匹配域名的资源\n *.ccc.com     | img-src *.ccc.com      | 允许加载匹配域名的资源\n https://img.ccc.com | img-src https://img.ccc.com | 允许加载匹配https方式的域名资源\n https:        | img-src https:         | 允许加载所有匹配https方式的资源\n 'unsafe-inline' | script-src 'unsafe-inline' | 允许使用内联元素,类似,Style attribute,onclick,scripttag bodies\n 'unsafe-eval' | script-src 'unsafe-eval' | 允许不安全的动态编码，例如eval()\n\n*** \n\n### 例子\n\n* 只允许加载同源的所有资源\n\n    `default-src 'self';`\n\n* 支持*号匹配\n\n    `default-src 'self' https://*.ccc.com:*;`\n\n* 只允许加载同源的脚本\n\n\t`script-src 'self';`\n\n* 只允许加载同源的和www.ccc.com的脚本\n\n\t`script-src 'self' www.ccc.com;`\n\n***\n\n### 常见配置\n\n* 该策略允许加载同源的图片、脚本、AJAX和CSS资源，并阻止加载其他任何资源，对于大多数网站是一个不错的配置。\n\n\t`default-src 'none'; script-src 'self'; connect-src 'self'; img-src 'self'; style-src 'self';`\n \n\n* 被禁止时的报错信息：\n\n\t谷歌浏览器可通过谷歌开发工具查看该报错，通常是按F12\n\n\t<font color=red>Refused to load the script 'script-uri' because it violates the following Content Security Policy directive: \"your CSP directive\".</font>\n\n\tFirefox 可通过 Web Developer Tools 查看报错\n\n\t<font color=red>Content Security Policy: A violation occurred for a report-only CSP policy (\"An attempt to execute inline scripts has been blocked\"). The behavior was allowed, and a CSP report was sent.</font>\n \n\n \n\n*** \n\n### 参考\n\n[http://content-security-policy.com/](http://content-security-policy.com/)\n\n[https://developer.mozilla.org/en-US/docs/Web/Security/CSP](https://developer.mozilla.org/en-US/docs/Web/Security/CSP)\n\n[http://www.w3.org/TR/CSP2/](http://www.w3.org/TR/CSP2/)","source":"_posts/webcsp.md","raw":"---\ntitle: WEB安全之CSP\ndate: 2016-05-20 23:11:11\ntags: [security,web]\ncategory: technology\n---\n### 概念\n内容安全策略(Content-Security-Policy，CSP)：是一种web应用技术用于帮助缓解大部分类型的内容注入攻击，包括XSS攻击和数据注入等，这些攻击可实现数据窃取、网站破坏和作为恶意软件分发版本等行为。该策略可让网站管理员指定客户端允许加载的各类可信任资源。\n\n***\n\n### 浏览器支持\n\n![](image/607348-20151208141131543-187859986.png)\n\n统计来源：[caniuse.com/contentsecuritypolicy](http://caniuse.com/#feat=contentsecuritypolicy) & [Mozilla](https://hacks.mozilla.org/2013/05/content-security-policy-1-0-lands-in-firefox-aurora/)\n\n***\n\n### 指令参考\n\nContent-Security-Policy 响应头的值可配置一个或多个，多个指令以分号;隔开。\n\n 指令          | 示例                   | 描述    \n ------------- | ---------------------  | ----- \n default-src   | 'self' cdn.example.com | 默认配置，若其他指令没有配置，都以此配置的规则为准\n script-src    | 'self' js.example.com  | 定义允许加载的JavaScript来源\n style-src     | 'self' css.example.com | 定义允许加载的样式表来源\n img-src       | 'self' img.example.com | 定义允许加载的图片来源\n connect-src   | 'self'                 | 适用于XMLHttpRequest(AJAX),WebSocket或EventSource，当为不允许的来源，浏览器返回一个400的状态码。\n font-src      | font.example.com       | 定义允许加载的字体来源\n object-src    | 'self'                 | 定义允许加载的插件来源.eg,<object\\>,<embed\\>或<applet\\>\n media-src     | media.example.com      | 定义允许加载的audio和video.eg,HTML5,<audio\\>,<video\\>元素\n frame-src     | 'self'                 | 定义允许加载的框架来源\n sandbox       | allow-forms allow-scripts |授权一个沙箱用来请求具有iframe sanbox等类似属性的资源,该沙箱默认为同源策略,禁止弹出窗口,执行插件和脚本.若要允许其他,可增加配置:allow-forms,allow-same-origin,allow-scripts,allow-top-navigation\n report-uri    | /some-report-uri       |该配置让浏览器发送一个失败报告到指定的路径，也可以增加-Report-only到HTTP头,让浏览器只发送报告(不做阻止动作)\n\n***\n\n### 来源配置参考\n\n所有的指令都要在配置后面添加来源列表，多个来源列表可用空格隔开，*和none只能存在一个。\n\n 指令          | 示例                   | 描述    \n ------------- | ---------------------  | ----- \n \\*            | img-src *              | 无限制，允许所有\n 'none'        | object-src 'none'      | 禁止加载任何路径的资源\n 'self'        | script-src 'self'      | 允许加载同源的资源\n data:         | img-src 'self' data:   | 允许通过数据模式加载资源\n domain.ccc.com | img-src img.ccc.com   | 允许加载匹配域名的资源\n *.ccc.com     | img-src *.ccc.com      | 允许加载匹配域名的资源\n https://img.ccc.com | img-src https://img.ccc.com | 允许加载匹配https方式的域名资源\n https:        | img-src https:         | 允许加载所有匹配https方式的资源\n 'unsafe-inline' | script-src 'unsafe-inline' | 允许使用内联元素,类似,Style attribute,onclick,scripttag bodies\n 'unsafe-eval' | script-src 'unsafe-eval' | 允许不安全的动态编码，例如eval()\n\n*** \n\n### 例子\n\n* 只允许加载同源的所有资源\n\n    `default-src 'self';`\n\n* 支持*号匹配\n\n    `default-src 'self' https://*.ccc.com:*;`\n\n* 只允许加载同源的脚本\n\n\t`script-src 'self';`\n\n* 只允许加载同源的和www.ccc.com的脚本\n\n\t`script-src 'self' www.ccc.com;`\n\n***\n\n### 常见配置\n\n* 该策略允许加载同源的图片、脚本、AJAX和CSS资源，并阻止加载其他任何资源，对于大多数网站是一个不错的配置。\n\n\t`default-src 'none'; script-src 'self'; connect-src 'self'; img-src 'self'; style-src 'self';`\n \n\n* 被禁止时的报错信息：\n\n\t谷歌浏览器可通过谷歌开发工具查看该报错，通常是按F12\n\n\t<font color=red>Refused to load the script 'script-uri' because it violates the following Content Security Policy directive: \"your CSP directive\".</font>\n\n\tFirefox 可通过 Web Developer Tools 查看报错\n\n\t<font color=red>Content Security Policy: A violation occurred for a report-only CSP policy (\"An attempt to execute inline scripts has been blocked\"). The behavior was allowed, and a CSP report was sent.</font>\n \n\n \n\n*** \n\n### 参考\n\n[http://content-security-policy.com/](http://content-security-policy.com/)\n\n[https://developer.mozilla.org/en-US/docs/Web/Security/CSP](https://developer.mozilla.org/en-US/docs/Web/Security/CSP)\n\n[http://www.w3.org/TR/CSP2/](http://www.w3.org/TR/CSP2/)","slug":"webcsp","published":1,"updated":"2016-05-20T16:35:42.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cixwmkixn000emo8z0xtbfi7v","content":"<h3 id=\"概念\"><a href=\"#概念\" class=\"headerlink\" title=\"概念\"></a>概念</h3><p>内容安全策略(Content-Security-Policy，CSP)：是一种web应用技术用于帮助缓解大部分类型的内容注入攻击，包括XSS攻击和数据注入等，这些攻击可实现数据窃取、网站破坏和作为恶意软件分发版本等行为。该策略可让网站管理员指定客户端允许加载的各类可信任资源。</p>\n<hr>\n<h3 id=\"浏览器支持\"><a href=\"#浏览器支持\" class=\"headerlink\" title=\"浏览器支持\"></a>浏览器支持</h3><p><img src=\"image/607348-20151208141131543-187859986.png\" alt=\"\"></p>\n<p>统计来源：<a href=\"http://caniuse.com/#feat=contentsecuritypolicy\" target=\"_blank\" rel=\"external\">caniuse.com/contentsecuritypolicy</a> &amp; <a href=\"https://hacks.mozilla.org/2013/05/content-security-policy-1-0-lands-in-firefox-aurora/\" target=\"_blank\" rel=\"external\">Mozilla</a></p>\n<hr>\n<h3 id=\"指令参考\"><a href=\"#指令参考\" class=\"headerlink\" title=\"指令参考\"></a>指令参考</h3><p>Content-Security-Policy 响应头的值可配置一个或多个，多个指令以分号;隔开。</p>\n<table>\n<thead>\n<tr>\n<th>指令</th>\n<th>示例</th>\n<th>描述    </th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td> default-src</td>\n<td>‘self’ cdn.example.com</td>\n<td>默认配置，若其他指令没有配置，都以此配置的规则为准</td>\n</tr>\n<tr>\n<td> script-src</td>\n<td>‘self’ js.example.com</td>\n<td>定义允许加载的JavaScript来源</td>\n</tr>\n<tr>\n<td> style-src</td>\n<td>‘self’ css.example.com</td>\n<td>定义允许加载的样式表来源</td>\n</tr>\n<tr>\n<td> img-src</td>\n<td>‘self’ img.example.com</td>\n<td>定义允许加载的图片来源</td>\n</tr>\n<tr>\n<td> connect-src</td>\n<td>‘self’</td>\n<td>适用于XMLHttpRequest(AJAX),WebSocket或EventSource，当为不允许的来源，浏览器返回一个400的状态码。</td>\n</tr>\n<tr>\n<td> font-src</td>\n<td>font.example.com</td>\n<td>定义允许加载的字体来源</td>\n</tr>\n<tr>\n<td> object-src</td>\n<td>‘self’</td>\n<td>定义允许加载的插件来源.eg,<object\\>,<embed\\>或<applet\\></applet\\></embed\\></object\\></td>\n</tr>\n<tr>\n<td> media-src</td>\n<td>media.example.com</td>\n<td>定义允许加载的audio和video.eg,HTML5,<audio\\>,<video\\>元素</video\\></audio\\></td>\n</tr>\n<tr>\n<td> frame-src</td>\n<td>‘self’</td>\n<td>定义允许加载的框架来源</td>\n</tr>\n<tr>\n<td> sandbox</td>\n<td>allow-forms allow-scripts</td>\n<td>授权一个沙箱用来请求具有iframe sanbox等类似属性的资源,该沙箱默认为同源策略,禁止弹出窗口,执行插件和脚本.若要允许其他,可增加配置:allow-forms,allow-same-origin,allow-scripts,allow-top-navigation</td>\n</tr>\n<tr>\n<td> report-uri</td>\n<td>/some-report-uri</td>\n<td>该配置让浏览器发送一个失败报告到指定的路径，也可以增加-Report-only到HTTP头,让浏览器只发送报告(不做阻止动作)</td>\n</tr>\n</tbody>\n</table>\n<hr>\n<h3 id=\"来源配置参考\"><a href=\"#来源配置参考\" class=\"headerlink\" title=\"来源配置参考\"></a>来源配置参考</h3><p>所有的指令都要在配置后面添加来源列表，多个来源列表可用空格隔开，*和none只能存在一个。</p>\n<table>\n<thead>\n<tr>\n<th>指令</th>\n<th>示例</th>\n<th>描述    </th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td> *</td>\n<td>img-src *</td>\n<td>无限制，允许所有</td>\n</tr>\n<tr>\n<td> ‘none’</td>\n<td>object-src ‘none’</td>\n<td>禁止加载任何路径的资源</td>\n</tr>\n<tr>\n<td> ‘self’</td>\n<td>script-src ‘self’</td>\n<td>允许加载同源的资源</td>\n</tr>\n<tr>\n<td> data:</td>\n<td>img-src ‘self’ data:</td>\n<td>允许通过数据模式加载资源</td>\n</tr>\n<tr>\n<td> domain.ccc.com</td>\n<td>img-src img.ccc.com</td>\n<td>允许加载匹配域名的资源</td>\n</tr>\n<tr>\n<td> *.ccc.com</td>\n<td>img-src *.ccc.com</td>\n<td>允许加载匹配域名的资源</td>\n</tr>\n<tr>\n<td> <a href=\"https://img.ccc.com\" target=\"_blank\" rel=\"external\">https://img.ccc.com</a></td>\n<td>img-src <a href=\"https://img.ccc.com\" target=\"_blank\" rel=\"external\">https://img.ccc.com</a></td>\n<td>允许加载匹配https方式的域名资源</td>\n</tr>\n<tr>\n<td> https:</td>\n<td>img-src https:</td>\n<td>允许加载所有匹配https方式的资源</td>\n</tr>\n<tr>\n<td> ‘unsafe-inline’</td>\n<td>script-src ‘unsafe-inline’</td>\n<td>允许使用内联元素,类似,Style attribute,onclick,scripttag bodies</td>\n</tr>\n<tr>\n<td> ‘unsafe-eval’</td>\n<td>script-src ‘unsafe-eval’</td>\n<td>允许不安全的动态编码，例如eval()</td>\n</tr>\n</tbody>\n</table>\n<hr>\n<h3 id=\"例子\"><a href=\"#例子\" class=\"headerlink\" title=\"例子\"></a>例子</h3><ul>\n<li><p>只允许加载同源的所有资源</p>\n<p>  <code>default-src &#39;self&#39;;</code></p>\n</li>\n<li><p>支持*号匹配</p>\n<p>  <code>default-src &#39;self&#39; https://*.ccc.com:*;</code></p>\n</li>\n<li><p>只允许加载同源的脚本</p>\n<p>  <code>script-src &#39;self&#39;;</code></p>\n</li>\n<li><p>只允许加载同源的和www.ccc.com的脚本</p>\n<p>  <code>script-src &#39;self&#39; www.ccc.com;</code></p>\n</li>\n</ul>\n<hr>\n<h3 id=\"常见配置\"><a href=\"#常见配置\" class=\"headerlink\" title=\"常见配置\"></a>常见配置</h3><ul>\n<li><p>该策略允许加载同源的图片、脚本、AJAX和CSS资源，并阻止加载其他任何资源，对于大多数网站是一个不错的配置。</p>\n<p>  <code>default-src &#39;none&#39;; script-src &#39;self&#39;; connect-src &#39;self&#39;; img-src &#39;self&#39;; style-src &#39;self&#39;;</code></p>\n</li>\n</ul>\n<ul>\n<li><p>被禁止时的报错信息：</p>\n<p>  谷歌浏览器可通过谷歌开发工具查看该报错，通常是按F12</p>\n  <font color=\"red\">Refused to load the script ‘script-uri’ because it violates the following Content Security Policy directive: “your CSP directive”.</font>\n\n<p>  Firefox 可通过 Web Developer Tools 查看报错</p>\n  <font color=\"red\">Content Security Policy: A violation occurred for a report-only CSP policy (“An attempt to execute inline scripts has been blocked”). The behavior was allowed, and a CSP report was sent.</font>\n\n\n\n\n</li>\n</ul>\n<hr>\n<h3 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h3><p><a href=\"http://content-security-policy.com/\" target=\"_blank\" rel=\"external\">http://content-security-policy.com/</a></p>\n<p><a href=\"https://developer.mozilla.org/en-US/docs/Web/Security/CSP\" target=\"_blank\" rel=\"external\">https://developer.mozilla.org/en-US/docs/Web/Security/CSP</a></p>\n<p><a href=\"http://www.w3.org/TR/CSP2/\" target=\"_blank\" rel=\"external\">http://www.w3.org/TR/CSP2/</a></p>\n","excerpt":"","more":"<h3 id=\"概念\"><a href=\"#概念\" class=\"headerlink\" title=\"概念\"></a>概念</h3><p>内容安全策略(Content-Security-Policy，CSP)：是一种web应用技术用于帮助缓解大部分类型的内容注入攻击，包括XSS攻击和数据注入等，这些攻击可实现数据窃取、网站破坏和作为恶意软件分发版本等行为。该策略可让网站管理员指定客户端允许加载的各类可信任资源。</p>\n<hr>\n<h3 id=\"浏览器支持\"><a href=\"#浏览器支持\" class=\"headerlink\" title=\"浏览器支持\"></a>浏览器支持</h3><p><img src=\"image/607348-20151208141131543-187859986.png\" alt=\"\"></p>\n<p>统计来源：<a href=\"http://caniuse.com/#feat=contentsecuritypolicy\">caniuse.com/contentsecuritypolicy</a> &amp; <a href=\"https://hacks.mozilla.org/2013/05/content-security-policy-1-0-lands-in-firefox-aurora/\">Mozilla</a></p>\n<hr>\n<h3 id=\"指令参考\"><a href=\"#指令参考\" class=\"headerlink\" title=\"指令参考\"></a>指令参考</h3><p>Content-Security-Policy 响应头的值可配置一个或多个，多个指令以分号;隔开。</p>\n<table>\n<thead>\n<tr>\n<th>指令</th>\n<th>示例</th>\n<th>描述    </th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td> default-src</td>\n<td>‘self’ cdn.example.com</td>\n<td>默认配置，若其他指令没有配置，都以此配置的规则为准</td>\n</tr>\n<tr>\n<td> script-src</td>\n<td>‘self’ js.example.com</td>\n<td>定义允许加载的JavaScript来源</td>\n</tr>\n<tr>\n<td> style-src</td>\n<td>‘self’ css.example.com</td>\n<td>定义允许加载的样式表来源</td>\n</tr>\n<tr>\n<td> img-src</td>\n<td>‘self’ img.example.com</td>\n<td>定义允许加载的图片来源</td>\n</tr>\n<tr>\n<td> connect-src</td>\n<td>‘self’</td>\n<td>适用于XMLHttpRequest(AJAX),WebSocket或EventSource，当为不允许的来源，浏览器返回一个400的状态码。</td>\n</tr>\n<tr>\n<td> font-src</td>\n<td>font.example.com</td>\n<td>定义允许加载的字体来源</td>\n</tr>\n<tr>\n<td> object-src</td>\n<td>‘self’</td>\n<td>定义允许加载的插件来源.eg,<object\\>,<embed\\>或<applet\\></td>\n</tr>\n<tr>\n<td> media-src</td>\n<td>media.example.com</td>\n<td>定义允许加载的audio和video.eg,HTML5,<audio\\>,<video\\>元素</td>\n</tr>\n<tr>\n<td> frame-src</td>\n<td>‘self’</td>\n<td>定义允许加载的框架来源</td>\n</tr>\n<tr>\n<td> sandbox</td>\n<td>allow-forms allow-scripts</td>\n<td>授权一个沙箱用来请求具有iframe sanbox等类似属性的资源,该沙箱默认为同源策略,禁止弹出窗口,执行插件和脚本.若要允许其他,可增加配置:allow-forms,allow-same-origin,allow-scripts,allow-top-navigation</td>\n</tr>\n<tr>\n<td> report-uri</td>\n<td>/some-report-uri</td>\n<td>该配置让浏览器发送一个失败报告到指定的路径，也可以增加-Report-only到HTTP头,让浏览器只发送报告(不做阻止动作)</td>\n</tr>\n</tbody>\n</table>\n<hr>\n<h3 id=\"来源配置参考\"><a href=\"#来源配置参考\" class=\"headerlink\" title=\"来源配置参考\"></a>来源配置参考</h3><p>所有的指令都要在配置后面添加来源列表，多个来源列表可用空格隔开，*和none只能存在一个。</p>\n<table>\n<thead>\n<tr>\n<th>指令</th>\n<th>示例</th>\n<th>描述    </th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td> *</td>\n<td>img-src *</td>\n<td>无限制，允许所有</td>\n</tr>\n<tr>\n<td> ‘none’</td>\n<td>object-src ‘none’</td>\n<td>禁止加载任何路径的资源</td>\n</tr>\n<tr>\n<td> ‘self’</td>\n<td>script-src ‘self’</td>\n<td>允许加载同源的资源</td>\n</tr>\n<tr>\n<td> data:</td>\n<td>img-src ‘self’ data:</td>\n<td>允许通过数据模式加载资源</td>\n</tr>\n<tr>\n<td> domain.ccc.com</td>\n<td>img-src img.ccc.com</td>\n<td>允许加载匹配域名的资源</td>\n</tr>\n<tr>\n<td> *.ccc.com</td>\n<td>img-src *.ccc.com</td>\n<td>允许加载匹配域名的资源</td>\n</tr>\n<tr>\n<td> <a href=\"https://img.ccc.com\">https://img.ccc.com</a></td>\n<td>img-src <a href=\"https://img.ccc.com\">https://img.ccc.com</a></td>\n<td>允许加载匹配https方式的域名资源</td>\n</tr>\n<tr>\n<td> https:</td>\n<td>img-src https:</td>\n<td>允许加载所有匹配https方式的资源</td>\n</tr>\n<tr>\n<td> ‘unsafe-inline’</td>\n<td>script-src ‘unsafe-inline’</td>\n<td>允许使用内联元素,类似,Style attribute,onclick,scripttag bodies</td>\n</tr>\n<tr>\n<td> ‘unsafe-eval’</td>\n<td>script-src ‘unsafe-eval’</td>\n<td>允许不安全的动态编码，例如eval()</td>\n</tr>\n</tbody>\n</table>\n<hr>\n<h3 id=\"例子\"><a href=\"#例子\" class=\"headerlink\" title=\"例子\"></a>例子</h3><ul>\n<li><p>只允许加载同源的所有资源</p>\n<p>  <code>default-src &#39;self&#39;;</code></p>\n</li>\n<li><p>支持*号匹配</p>\n<p>  <code>default-src &#39;self&#39; https://*.ccc.com:*;</code></p>\n</li>\n<li><p>只允许加载同源的脚本</p>\n<p>  <code>script-src &#39;self&#39;;</code></p>\n</li>\n<li><p>只允许加载同源的和www.ccc.com的脚本</p>\n<p>  <code>script-src &#39;self&#39; www.ccc.com;</code></p>\n</li>\n</ul>\n<hr>\n<h3 id=\"常见配置\"><a href=\"#常见配置\" class=\"headerlink\" title=\"常见配置\"></a>常见配置</h3><ul>\n<li><p>该策略允许加载同源的图片、脚本、AJAX和CSS资源，并阻止加载其他任何资源，对于大多数网站是一个不错的配置。</p>\n<p>  <code>default-src &#39;none&#39;; script-src &#39;self&#39;; connect-src &#39;self&#39;; img-src &#39;self&#39;; style-src &#39;self&#39;;</code></p>\n</li>\n</ul>\n<ul>\n<li><p>被禁止时的报错信息：</p>\n<p>  谷歌浏览器可通过谷歌开发工具查看该报错，通常是按F12</p>\n  <font color=red>Refused to load the script ‘script-uri’ because it violates the following Content Security Policy directive: “your CSP directive”.</font>\n\n<p>  Firefox 可通过 Web Developer Tools 查看报错</p>\n  <font color=red>Content Security Policy: A violation occurred for a report-only CSP policy (“An attempt to execute inline scripts has been blocked”). The behavior was allowed, and a CSP report was sent.</font>\n\n\n\n\n</li>\n</ul>\n<hr>\n<h3 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h3><p><a href=\"http://content-security-policy.com/\">http://content-security-policy.com/</a></p>\n<p><a href=\"https://developer.mozilla.org/en-US/docs/Web/Security/CSP\">https://developer.mozilla.org/en-US/docs/Web/Security/CSP</a></p>\n<p><a href=\"http://www.w3.org/TR/CSP2/\">http://www.w3.org/TR/CSP2/</a></p>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"cixwmkix60006mo8zdfub24us","category_id":"cixwmkiwt0003mo8zxcetaqrb","_id":"cixwmkixm000cmo8zob4jddvd"},{"post_id":"cixwmkiwe0000mo8zrbxm2i67","category_id":"cixwmkiwt0003mo8zxcetaqrb","_id":"cixwmkixq000hmo8z8nittz2a"},{"post_id":"cixwmkixb0007mo8z5p6dgsf0","category_id":"cixwmkiwt0003mo8zxcetaqrb","_id":"cixwmkixs000jmo8zw7hln3su"},{"post_id":"cixwmkixi000bmo8z1xsu70rm","category_id":"cixwmkiwt0003mo8zxcetaqrb","_id":"cixwmkixu000lmo8zcvbild6y"},{"post_id":"cixwmkiwo0002mo8z89svx6sf","category_id":"cixwmkiwt0003mo8zxcetaqrb","_id":"cixwmkixv000mmo8z8r93hbu0"},{"post_id":"cixwmkixn000emo8z0xtbfi7v","category_id":"cixwmkiwt0003mo8zxcetaqrb","_id":"cixwmkixx000omo8z64ohbvui"},{"post_id":"cixwmkix40005mo8zfbvj617d","category_id":"cixwmkiwt0003mo8zxcetaqrb","_id":"cixwmkixz000qmo8zp7pqj3yj"}],"PostTag":[{"post_id":"cixwmkix60006mo8zdfub24us","tag_id":"cixwmkix40004mo8z10vaziop","_id":"cixwmkixi000amo8ztchqo5km"},{"post_id":"cixwmkiwe0000mo8zrbxm2i67","tag_id":"cixwmkix40004mo8z10vaziop","_id":"cixwmkixm000dmo8zgsqvijgo"},{"post_id":"cixwmkiwo0002mo8z89svx6sf","tag_id":"cixwmkixg0009mo8zwm0x94xn","_id":"cixwmkixr000imo8z2ygbo8uu"},{"post_id":"cixwmkix40005mo8zfbvj617d","tag_id":"cixwmkix40004mo8z10vaziop","_id":"cixwmkixy000pmo8zislgzfiy"},{"post_id":"cixwmkix40005mo8zfbvj617d","tag_id":"cixwmkixt000kmo8zo92g6miw","_id":"cixwmkiy0000rmo8zcijhek9z"},{"post_id":"cixwmkixb0007mo8z5p6dgsf0","tag_id":"cixwmkixg0009mo8zwm0x94xn","_id":"cixwmkiy1000tmo8z1hvwzrxs"},{"post_id":"cixwmkixi000bmo8z1xsu70rm","tag_id":"cixwmkiy0000smo8zg3rfrq84","_id":"cixwmkiy5000vmo8zg9wnek3j"},{"post_id":"cixwmkixn000emo8z0xtbfi7v","tag_id":"cixwmkiy0000smo8zg3rfrq84","_id":"cixwmkiy8000xmo8zfydhj3ck"},{"post_id":"cixwmkixn000emo8z0xtbfi7v","tag_id":"cixwmkixt000kmo8zo92g6miw","_id":"cixwmkiy9000ymo8zrx7asser"}],"Tag":[{"name":"network","_id":"cixwmkix40004mo8z10vaziop"},{"name":"system","_id":"cixwmkixg0009mo8zwm0x94xn"},{"name":"web","_id":"cixwmkixt000kmo8zo92g6miw"},{"name":"security","_id":"cixwmkiy0000smo8zg3rfrq84"}]}}